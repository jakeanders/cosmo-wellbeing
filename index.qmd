---
title: "Young people’s subjective wellbeing in the wake of the COVID-19 pandemic: evidence from a representative cohort study in England"
date: "2024/09/30"
author:
  - name: Jake Anders
    affiliation: UCL Centre for Education Policy & Equalising Opportunities
    url: https://www.jakeanders.uk
    email: jake@jakeanders.uk
    orcid: 0000-0003-0930-2884
  - name: Erica Holt-White
    affiliation: The Sutton Trust
    email: erica.holtwhite@suttontrust.com
abstract: |
  The COVID-19 pandemic and the disruption it has caused had substantial short-term effects on young people. These effects have been found to be highly unequal, exacerbating existing inequalities in society, including those associated with socio-economic status, gender and ethnicity. But, just as importantly, it is believed that they continue to cast a long shadow over some young people's lives. In this paper we use data from the COVID Social Mobility & Opportunities study (COSMO) — a representative cohort study of over 13,000 young people in England aged 14-15 at pandemic onset whose education and post-16 transitions were acutely affected by the pandemic's disruption through their remaining education and subsequent transitions — to highlight ongoing inequalities in young people's subjective wellbeing and mental health in the wake of the pandemic. We document the substantial differences in subjective wellbeing — especially highlighting differences by gender — after adjusting for other demographic characteristics, self-reported levels of social support, and experience of adverse life events. We estimate how wellbeing differs by young people’s own perceptions of the ongoing impact of the pandemic: those who indicate an ongoing negative impact in their lives have substantially lower subjective wellbeing scores. Finally, we find a link between adverse life experiences during the pandemic and lower post-pandemic wellbeing, but do not find evidence that this is mediated by demographic characteristics or social support.
keywords:
  - COVID-19
  - young people
  - subjective wellbeing
  - inequalities
  - adverse life events
  - social support
funding: "This work was supported by UK Research and Innovation via their COVID-19 response fund [grant number ES/W001756/1] and their Economic and Social Research Council [grant number ES/X00015X/1]."
format:
  docx:
    fig-width: 7
    fig-height: 5
  wordcount-html:
    lightbox: true
    theme: cosmo
    citations-hover: true
    crossrefs-hover: true
    toc-location: left
    title-block-style: manuscript
  pdf:
    pdf-engine: xelatex
    mainfont: "Helvetica"
    monofont: "Menlo"
    sansfont: "Helvetica"
    linestretch: 1.5
fig-format: png
cap-location: top
echo: false
warning: false
bibliography: 
  - "bibs/COSMO Wellbeing.bib"
  - "bibs/Software.bib"
  - "bibs/R Packages.bib"
csl: "bibs/apa.csl"
number-sections: true
---

::: {.no-count}

## Statements and Declarations {.unnumbered}

The authors have no competing interests to declare that are relevant to the content of this article. The datasets analysed in this study are available to download from the UK Data Service [Wave 1: @Anders2024a; Wave 2: @Anders2024]. The study received full ethical approval from the UCL Institute of Education Research Ethics Committee (REC1660). It is registered with the UCL Data Protection Office (Z6364106/2022/06/30).

## Acknowledgements {.unnumbered}

This work was supported by UK Research and Innovation via their COVID-19 response fund [grant number ES/W001756/1] and their Economic and Social Research Council [grant number ES/X00015X/1]. For Felicity.

:::

## Introduction {#sec-intro}

The COVID-19 pandemic and the disruption it caused had substantial short-term effects on young people’s lives around the world, with evidence of significant impacts on young people's wellbeing and mental health [@DeFrance2022; @Wolf2024]. Young people in England, the focus of this paper, were no exception: extended periods in which in-person schooling was suspended [@Anders2024b] interrupted pupils’ learning [@Jakubowski2024] and social lives [@Kalenkoski2024], with consequent rises in loneliness a clear symptom of this [@Kung2023]. This widespread disruption had widely documented short-term effects on young people's wellbeing [e.g. @Attwood2023; @Banks2020a; @Newlove-Delgado2021; @Neugebauer2023; @Quintana-Domeque2023], the magnitude of which was found to be linked with the intensity of lockdown restrictions [@Owens2022], and the immediacy of which is reflected in wellbeing increasing and decreasing as restrictions tightened and eased [@Creswell2021]. A review by @Kauhanen2023 summarised the international picture as “a longitudinal deterioration in symptoms for different mental health outcomes especially for adolescents and young people”.

Existing analyses suggest that effects of the disruption were unequal, often exacerbating existing demographic inequalities in society, including those associated with socioeconomic status [e.g., @Ravens-Sieberer2022], gender [e.g., @Anders2023; @Davillas2021a], and ethnicity [e.g., @Proto2021]. @Wolf2024 finds that older adolescents were particularly affected, perhaps as these are such formative years for social relationships and critical years for education and subsequent transitions.

Variation in experiences and support during the pandemic has also been found to be important for young people's wellbeing. Restrictions on social activities and the closure of schools reduced physical activity for some, which has been linked to worse mental health outcomes [@Samji2022]; other aspects of the pandemic are likely to have exacerbated the prevalence of adverse life events that previous studies have shown affect wellbeing [@Cleland2016]. Conversely, social support has been identified as a potential buffer to negative impacts [@Racine2021] of such negative stressors. These highlight the potential importance of experiences and social support during the pandemic for young people's wellbeing and, hence, the need to consider these in understanding differences in wellbeing.

While short-term impacts are important in their own right, we should be especially concerned if the impacts of the pandemic are continuing to affect young people's lives, including their subjective wellbeing, now that restrictions have ended. Concern was expressed from early in the pandemic that negative effects of the pandemic on wellbeing would persist [@Sonuga-Barke2021], something that has been identified in studies of the general population [@Quintana-Domeque2022].

This paper provides new evidence regarding these issues. We report ongoing inequalities in young people's wellbeing post-pandemic, discuss the informational value of young people's own perceptions of ongoing impacts of the pandemic, and explore the role of adverse life experiences during the pandemic. In particular, our research aims are to:

1. estimate differences in post-pandemic wellbeing among this cohort by demographic characteristics;
2. validate and quantify young people’s own perceptions of the impact of the pandemic on their wellbeing, and; 
3. consider the role of adverse experiences during the pandemic in explaining differences in post-pandemic wellbeing.

In seeking to address these aims, we are guided by Social Production Function (SPF) theory [@Ormel1999], which enumerates five components contributing to subjective well-being: stimulation, comfort, status, behavioural confirmation, and affection. While this study does not engage individually with all five factors, SPF nevertheless provides a helpful framework, including in distinguishing between long-term factors such as status, linked with socioeconomic and demographic characteristics, and more acute potential impacts of changes to stimulation, comfort and affection presented by the disruption of the pandemic and specific events during its course. In particular, @Chesters2025 posit that the COVID-19 pandemic may have negatively affected young people's access to:

* affection, when not able to spend time with friends and extended family;
* stimulation, due to restrictions on activities;
* comfort, both material through potential financial distress, and emotional through adverse life events; and
* behavioural confirmation, through the disruption to routines and societal expectations.

Drawing on this framework, our analyses consider the role of social support, which can be seen as a key component of the SPF components of status and affection, in mediating the three relationships embedded in our research aims.

Our analyses use data from the COVID Social Mobility & Opportunities study (COSMO) — a representative cohort study of over 13,000 young people in England aged 14-15 at pandemic onset whose education and post-16 transitions were acutely affected by the pandemic's disruption through their remaining education and subsequent transitions — to explore young people's subjective wellbeing since the end of most restrictions linked to the pandemic. COSMO has collected data on wellbeing at two annual, post-pandemic surveys (to date), along with rich data on demographics, social support and experiences during the pandemic, allowing us to explore post-pandemic patterns in wellbeing and how they are shaped by these factors.

The paper proceeds as follows. In @sec-data, we describe the data that we use in more detail, the steps we take to prepare it for analysis, and conduct descriptive analyses and visualisation to provide initial evidence on our research aims. In @sec-regression, we describe our use of regression modelling to support our analyses, before presenting results of this modelling in @sec-results and discussing these in @sec-discussion. Finally, in @sec-conclusions, we conclude, noting implications for policy and practice.
```{r}
#| label: packages
#| output: off

pkgs <- c("knitr", "haven", "data.table",
          "plyr", "tidyverse",
          "survey", "srvyr",
          "labelled", "scales",
          "spatstat", "psych", "wCorr",
          "statar", "epiR",
          "ggplot2", "ggstats",
          "gt", "gtsummary",
          "marginaleffects",
          "mice", "mitools",
          "AER")
lapply(pkgs, require, character.only = TRUE)

knitr::write_bib(pkgs, "bibs/R Packages.bib")
```

```{r setup, include=FALSE, echo = FALSE}

knit_print.flextable <- function (x, ...) {
is_bookdown <- flextable:::is_in_bookdown()
is_quarto <- flextable:::is_in_quarto()
x <- flextable:::knitr_update_properties(x, bookdown = is_bookdown, quarto = is_quarto)
if (is.null(knitr::pandoc_to())) {
str <- flextable:::to_html(x, type = "table")
str <- knitr:::asis_output(str)
}
else if (!is.null(getOption("xaringan.page_number.offset"))) {
str <- knit_to_html:::knit_to_html(x, bookdown = FALSE, quarto = FALSE)
str <- knitr:::asis_output(str, meta = html_dependencies_list(x))
}
else if (knitr:::is_html_output(excludes = "gfm")) {
str <- knit_to_html:::knit_to_html(x, bookdown = is_bookdown, quarto = is_quarto)
str <- knit_to_html:::raw_html(str, meta = html_dependencies_list(x))
}
else if (knitr:::is_latex_output()) {
str <- flextable:::knit_to_latex(x, bookdown = is_bookdown, quarto = is_quarto)
str <- flextable:::raw_latex(x = str, meta = unname(list_latex_dep(float = TRUE,
wrapfig = TRUE)))
}
else if (grepl("docx", knitr::opts_knit$get("rmarkdown.pandoc.to"))) {
if (rmarkdown::pandoc_version() < numeric_version("2")) {
stop("pandoc version >= 2 required for printing flextable in docx")
}
str <- flextable:::knit_to_wml(x, bookdown = is_bookdown, quarto = is_quarto)
str <- gsub("</w:tbl>","</w:tbl><w:p></w:p>",str, fixed = TRUE)
str <- knitr:::asis_output(str)
}
else if (grepl("pptx", knitr::opts_knit$get("rmarkdown.pandoc.to"))) {
if (rmarkdown::pandoc_version() < numeric_version("2.4")) {
stop("pandoc version >= 2.4 required for printing flextable in pptx")
}
str <- flextable:::knit_to_pml(x)
str <- knitr:::asis_output(str)
}
else {
plot_counter <- getFromNamespace("plot_counter", "knitr")
in_base_dir <- getFromNamespace("in_base_dir", "knitr")
tmp <- fig_path("png", number = plot_counter())
in_base_dir({
dir.create(dirname(tmp), showWarnings = FALSE, recursive = TRUE)
save_as_image(x, path = tmp, expand = 0)
})
str <- include_graphics(tmp)
}
str
}

registerS3method(
"knit_print", 'flextable', knit_print.flextable,
envir = asNamespace("flextable")
# important to overwrite {flextable}s knit_print
)

knit_print.gt_tbl <- function (x, ..., inline = FALSE) {
if (gt:::knitr_is_rtf_output()) {
x <- gt:::as_rtf(x)
}
else if (knitr::is_latex_output()) {
x <- gt:::as_latex(x)
}
else if (gt:::knitr_is_word_output()) {
str <- gsub("</w:tbl>","</w:tbl><w:p></w:p>", as_word(x), fixed = TRUE)
x <- knitr::asis_output(paste("\n\n``````{=openxml}", str,
"``````\n\n", sep = "\n"))
}
else {
x <- htmltools:::as.tags(x, ...)
}
knitr::knit_print(x, ..., inline = FALSE)
}

registerS3method(
"knit_print", 'gt_tbl', knit_print.gt_tbl,
envir = asNamespace("gt")
# important to overwrite {gt}s knit_print
)

```

## Data and descriptive analyses {#sec-data}

We use data from members of the COVID Social Mobility & Opportunities study (COSMO), a longitudinal cohort study following a representative sample of young people (and their parents) who were in Year 10 (i.e., aged 14-15) at pandemic onset (March 2020), who participated at both waves 1 [@Anders2024a], which was carried out between October 2021 and March 2022 (while participants were aged 16-17), and 2 [@Anders2024], which was carried out between October 2022 and March 2023 (while participants were aged 17-18). In both cases the majority of interviews were carried out within the first two months of fieldwork; we also control for month of interview in our regression models (further details below).
```{r}
#| label: data-import
if (as.character(Sys.info()["nodename"]) == "jamac.taile7dd5.ts.net" |
    as.character(Sys.info()["nodename"]) == "jamac.fritz.box" |
    as.character(Sys.info()["nodename"]) == "jamac.local") {
    w1yp <- setDT(read_stata(
        "/Volumes/Secure/COSMO/raw/w1/archive_data_young_people_coded_file_v2.dta"))
    w1mp <- setDT(read_stata(
        "/Volumes/Secure/COSMO/raw/w1/archive_data_parent_coded_file_v2.dta"))
    w2yp <- setDT(read_stata(
        "/Volumes/Secure/COSMO/raw/w2/archive_data_yp_coded_file_v2.dta"))
    w2mp <- setDT(read_stata(
        "/Volumes/Secure/COSMO/raw/w2/archive_data_parent_coded_file_v2.dta"))
} else {
    w1yp <- setDT(read_stata(
        "/Volumes/Jake/Data/COSMO/raw/w1/archive_data_young_people_coded_file_v2.dta"))
    w1mp <- setDT(read_stata(
        "/Volumes/Jake/Data/COSMO/raw/w1/archive_data_parent_coded_file_v2.dta"))
    w2yp <- setDT(read_stata(
        "/Volumes/Jake/Data/COSMO/raw/w2/archive_data_yp_coded_file_v2.dta"))
    w2mp <- setDT(read_stata(
        "/Volumes/Jake/Data/COSMO/raw/w2/archive_data_parent_coded_file_v2.dta"))
}

```

```{r}
#| label: data-merge
w1 <- merge(w1yp, w1mp,
            by.x = "W1_HHserial", by.y = "W1_HHserial",
            suffixes = c("_yp", "_mp"), all = TRUE)
w2 <- merge(w2yp, w2mp,
            by.x = "W2_HHserial", by.y = "W2_HHserial",
            suffixes = c("_yp", "_mp"), all = TRUE)
merged <- merge(w1, w2,
            by.x = "W1_HHserial", by.y = "W2_HHserial",
            suffixes = c("_w1", "_w2"), all = TRUE)

# Just save some memory as we'll only be using merged from now on
rm(w1yp, w1mp, w2yp, w2mp, w1, w2)
```

COSMO has a clustered and stratified design with oversampling of those from smaller (e.g., ethnic minorities), more disadvantaged and harder to reach demographic groups to improve statistical power when exploring inequalities between such groups. Furthermore, there was initial non-response and attrition between the first two waves. As such, it is important to account for the deliberate and modelled disproportionalities in the sample, as well as implications of the clustering and stratification for statistical inference. We take these features into account in all our analyses using R's survey package [@R-survey] with the study-provided clustering and stratification variables, and design and non-response weights [@Adali2022; @Adali2023].
```{r}
#| label: data-survey
create_survey_design <- function(data) {
  survey_design <- data |>
    filter(W2_AllFamilyFull_weight_yp >= 0) |>
    as_survey_design(ids = W2_PSU_all_yp,
                     strata = W2_SchoolStratum_v2_yp,
                     weights = W2_AllFamilyFull_weight_yp)
  return(survey_design)
}
```

To ensure consistency across analyses, we restrict our sample to those with valid data on the key variables for in our analyses. This includes the primary outcome variable of self-reported wellbeing score, as well as the key predictors and demographic variables that we use. However, we are mindful of the potential implications of sample selection caused by complete case analysis, so we robustness check our results to ensure this is not driving our results in @sec-appendix-mi, re-running our core analyses having only restricted the sample based on the primary outcome (wellbeing score) and the main predictors (impact of pandemic on mental health and adverse life events reporting) and multiply imputed across 10 datasets all other predictors using a highly flexible classification and regression tree approach [@R-mice; @R-mitools]. 
```{r}
#| label: data-sample
restrict_sample <- function(data) {
  newdata <- data[
                  W2_AllFamilyFull_weight_yp > 0 &
                  !is.na(W2_PSU_all_yp) &
                  !is.na(W2_SchoolStratum_v2_yp) &
                  (!is.na(W1_ZLifeSat) & W1_ZLifeSat >= 0) & 
                  (!is.na(W2_ZLifeSat) & W2_ZLifeSat >= 0) &
                  (W2_ZCoronaImpact2_05>=0 & !is.na(W2_ZCoronaImpact2_05)) &
                  (!is.na(W2_ZImPosNeg_05) & W2_ZImPosNeg_05!=-9) &
                  ((W1_XEDUC1 >= 0 & !is.na(W1_XEDUC1)) |
                    (W1_XEDUCP1 >= 0 & !is.na(W1_XEDUCP1)) |
                    (W2_XEDUC1 >= 0 & !is.na(W2_XEDUC1)) |
                    (W2_XEDUCP1 >= 0 & !is.na(W2_XEDUCP1))) &
                  ((W1_XTENURE >= 0 & !is.na(W1_XTENURE)) |
                    (W2_XTENURE >= 0 & !is.na(W2_XTENURE))) &
                  ((W1_ZGENDER >= 0 & !is.na(W1_ZGENDER)) |
                    (W2_ZGENDER >= 0 & !is.na(W2_ZGENDER))) &
                  ((W1_ZYPETHNIC >= 0 & !is.na(W1_ZYPETHNIC)) | 
                    (W2_ZYPETHNIC >= 0 & !is.na(W2_ZYPETHNIC))) &
                  !is.na(W1_IDAC_decile_yp) &
                  !is.na(W1_IMD_decile_yp) &
                  ((!is.na(W1_ZLIFEEVENTS_01) & W1_ZLIFEEVENTS_01>=0) | (!is.na(W2_ZLIFEEVENTS_01) & W2_ZLIFEEVENTS_01>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_02) & W1_ZLIFEEVENTS_02>=0) | (!is.na(W2_ZLIFEEVENTS_02) & W2_ZLIFEEVENTS_02>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_03) & W1_ZLIFEEVENTS_03>=0) | (!is.na(W2_ZLIFEEVENTS_03) & W2_ZLIFEEVENTS_03>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_04) & W1_ZLIFEEVENTS_04>=0) | (!is.na(W2_ZLIFEEVENTS_04) & W2_ZLIFEEVENTS_04>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_05) & W1_ZLIFEEVENTS_05>=0) | (!is.na(W2_ZLIFEEVENTS_05) & W2_ZLIFEEVENTS_05>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_06) & W1_ZLIFEEVENTS_06>=0) | (!is.na(W2_ZLIFEEVENTS_06) & W2_ZLIFEEVENTS_06>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_07) & W1_ZLIFEEVENTS_07>=0) | (!is.na(W2_ZLIFEEVENTS_07) & W2_ZLIFEEVENTS_07>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_08) & W1_ZLIFEEVENTS_08>=0) | (!is.na(W2_ZLIFEEVENTS_08) & W2_ZLIFEEVENTS_08>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_09) & W1_ZLIFEEVENTS_09>=0) | (!is.na(W2_ZLIFEEVENTS_09) & W2_ZLIFEEVENTS_09>=0)) &
                  ((!is.na(W1_ZLIFEEVENTS_10) & W1_ZLIFEEVENTS_10>=0) | (!is.na(W2_ZLIFEEVENTS_10) & W2_ZLIFEEVENTS_10>=0)) &
                  (!is.na(W1_ZSOCPROV_01) & W1_ZSOCPROV_01>=0) &
                  (!is.na(W1_ZSOCPROV_02) & W1_ZSOCPROV_02>=0) &
                  (!is.na(W1_ZSOCPROV_03) & W1_ZSOCPROV_03>=0)
                  ] %>%
                  .[, scaledweight := (W2_AllFamilyFull_weight_yp / sum(W2_AllFamilyFull_weight_yp))*nrow(.)]
  return(newdata)
}
```

### Subjective wellbeing

To measure self-reported wellbeing, we use the UK Office for National Statistics' official measure of life satisfaction [@OfficeforNationalStatistics2018], which is widely recognised as an important dimension of subjective wellbeing [@Petersen2022]. This asks participants to respond to the prompt “Overall, how satisfied are you with your life nowadays?” on a scale ranging from 0 “Not at all satisfied” to 10 “Completely satisfied”. This measure has been used in national UK surveys since 2011 and increasing numbers of academic studies, hence providing a useful benchmark for this concept in UK-based surveys. This measure is found to be a reliable measure of subjective wellbeing in young people [@Levin2014], performing as well as the more in-depth Satisfaction with Life Scale [@Jovanovic2016], for example, although we do recognise that it will not capture all dimensions of wellbeing [@Ruggeri2020]. It is also worth noting that, while they are distinct constructs, a clear correlation between lower wellbeing and increased risk of poor mental health [@Lombardo2018].

As COSMO was established in response to the pandemic, there are no pre-pandemic baseline measures. As such, we emphasise that our estimates of differences are between individuals all of whom have experienced the pandemic, but experienced it differently, rather than between their current situation and a counterfactual in which the pandemic did not happen. Others have used used survey experiment methods to attempt to get closer to such a counterfactual [@Andreoli2024], or pre-existing longitudinal studies to explore change in mental health across the pandemic period [@Hensekemimeo].
```{r}
#| label: data-recode-lifesat
merged[, W1_ZLifeSat := as.numeric(W1_ZLifeSat)]
merged[, W2_ZLifeSat := as.numeric(W2_ZLIFESAT)]
merged[, ZLifeSatDiff := W2_ZLifeSat - W1_ZLifeSat]

var_label(merged$W1_ZLifeSat) <- "Wave 1 Wellbeing"
var_label(merged$W2_ZLifeSat) <- "Wave 2 Wellbeing"
var_label(merged$ZLifeSatDiff) <- "Change in Wellbeing"

merged[W1_ZGHQ1 %in% c(-9, -8, -2, -1), W1_ZGHQ1 := NA]
merged[W1_ZGHQ2 %in% c(-9, -8, -2, -1), W1_ZGHQ2 := NA]
merged[W1_ZGHQ3 %in% c(-9, -8, -2, -1), W1_ZGHQ3 := NA]
merged[W1_ZGHQ4 %in% c(-9, -8, -2, -1), W1_ZGHQ4 := NA]
merged[W1_ZGHQ5 %in% c(-9, -8, -2, -1), W1_ZGHQ5 := NA]
merged[W1_ZGHQ6 %in% c(-9, -8, -2, -1), W1_ZGHQ6 := NA]
merged[W1_ZGHQ7 %in% c(-9, -8, -2, -1), W1_ZGHQ7 := NA]
merged[W1_ZGHQ8 %in% c(-9, -8, -2, -1), W1_ZGHQ8 := NA]
merged[W1_ZGHQ9 %in% c(-9, -8, -2, -1), W1_ZGHQ9 := NA]
merged[W1_ZGHQ10 %in% c(-9, -8, -2, -1), W1_ZGHQ10 := NA]
merged[W1_ZGHQ11 %in% c(-9, -8, -2, -1), W1_ZGHQ11 := NA]
merged[W1_ZGHQ12 %in% c(-9, -8, -2, -1), W1_ZGHQ12 := NA]

suppressWarnings(merged[, W1_ZGHQ1_bin := NULL])
merged[W1_ZGHQ1 %in% c(1, 2), W1_ZGHQ1_bin := 0]
merged[W1_ZGHQ1 %in% c(3, 4), W1_ZGHQ1_bin := 1]
suppressWarnings(merged[, W1_ZGHQ2_bin := NULL])
merged[W1_ZGHQ2 %in% c(1, 2), W1_ZGHQ2_bin := 0]
merged[W1_ZGHQ2 %in% c(3, 4), W1_ZGHQ2_bin := 1]
suppressWarnings(merged[, W1_ZGHQ3_bin := NULL])
merged[W1_ZGHQ3 %in% c(1, 2), W1_ZGHQ3_bin := 0]
merged[W1_ZGHQ3 %in% c(3, 4), W1_ZGHQ3_bin := 1]
suppressWarnings(merged[, W1_ZGHQ4_bin := NULL])
merged[W1_ZGHQ4 %in% c(1, 2), W1_ZGHQ4_bin := 0]
merged[W1_ZGHQ4 %in% c(3, 4), W1_ZGHQ4_bin := 1]
suppressWarnings(merged[, W1_ZGHQ5_bin := NULL])
merged[W1_ZGHQ5 %in% c(1, 2), W1_ZGHQ5_bin := 0]
merged[W1_ZGHQ5 %in% c(3, 4), W1_ZGHQ5_bin := 1]
suppressWarnings(merged[, W1_ZGHQ6_bin := NULL])
merged[W1_ZGHQ6 %in% c(1, 2), W1_ZGHQ6_bin := 0]
merged[W1_ZGHQ6 %in% c(3, 4), W1_ZGHQ6_bin := 1]
suppressWarnings(merged[, W1_ZGHQ7_bin := NULL])
merged[W1_ZGHQ7 %in% c(1, 2), W1_ZGHQ7_bin := 0]
merged[W1_ZGHQ7 %in% c(3, 4), W1_ZGHQ7_bin := 1]
suppressWarnings(merged[, W1_ZGHQ8_bin := NULL])
merged[W1_ZGHQ8 %in% c(1, 2), W1_ZGHQ8_bin := 0]
merged[W1_ZGHQ8 %in% c(3, 4), W1_ZGHQ8_bin := 1]
suppressWarnings(merged[, W1_ZGHQ9_bin := NULL])
merged[W1_ZGHQ9 %in% c(1, 2), W1_ZGHQ9_bin := 0]
merged[W1_ZGHQ9 %in% c(3, 4), W1_ZGHQ9_bin := 1]
suppressWarnings(merged[, W1_ZGHQ10_bin := NULL])
merged[W1_ZGHQ10 %in% c(1, 2), W1_ZGHQ10_bin := 0]
merged[W1_ZGHQ10 %in% c(3, 4), W1_ZGHQ10_bin := 1]
suppressWarnings(merged[, W1_ZGHQ11_bin := NULL])
merged[W1_ZGHQ11 %in% c(1, 2), W1_ZGHQ11_bin := 0]
merged[W1_ZGHQ11 %in% c(3, 4), W1_ZGHQ11_bin := 1]
suppressWarnings(merged[, W1_ZGHQ12_bin := NULL])
merged[W1_ZGHQ12 %in% c(1, 2), W1_ZGHQ12_bin := 0]
merged[W1_ZGHQ12 %in% c(3, 4), W1_ZGHQ12_bin := 1]

merged[, W1_ZGHQ := rowSums(.SD, na.rm=TRUE), .SDcols = c("W1_ZGHQ1_bin", "W1_ZGHQ2_bin", "W1_ZGHQ3_bin", "W1_ZGHQ4_bin", "W1_ZGHQ5_bin", "W1_ZGHQ6_bin", "W1_ZGHQ7_bin", "W1_ZGHQ8_bin", "W1_ZGHQ9_bin", "W1_ZGHQ10_bin", "W1_ZGHQ11_bin", "W1_ZGHQ12_bin")]
merged[, W1_ZGHQ_misscount := rowSums(is.na(.SD)), .SDcols = c("W1_ZGHQ1_bin", "W1_ZGHQ2_bin", "W1_ZGHQ3_bin", "W1_ZGHQ4_bin", "W1_ZGHQ5_bin", "W1_ZGHQ6_bin", "W1_ZGHQ7_bin", "W1_ZGHQ8_bin", "W1_ZGHQ9_bin", "W1_ZGHQ10_bin", "W1_ZGHQ11_bin", "W1_ZGHQ12_bin")]
merged[W1_ZGHQ_misscount>4, W1_ZGHQ := NA]
merged[W1_ZGHQ_misscount<=4, W1_ZGHQ := (W1_ZGHQ/(12-W1_ZGHQ_misscount))*12]

merged[W2_ZGHQ1 %in% c(-9, -8, -2, -1), W2_ZGHQ1 := NA]
merged[W2_ZGHQ2 %in% c(-9, -8, -2, -1), W2_ZGHQ2 := NA]
merged[W2_ZGHQ3 %in% c(-9, -8, -2, -1), W2_ZGHQ3 := NA]
merged[W2_ZGHQ4 %in% c(-9, -8, -2, -1), W2_ZGHQ4 := NA]
merged[W2_ZGHQ5 %in% c(-9, -8, -2, -1), W2_ZGHQ5 := NA]
merged[W2_ZGHQ6 %in% c(-9, -8, -2, -1), W2_ZGHQ6 := NA]
merged[W2_ZGHQ7 %in% c(-9, -8, -2, -1), W2_ZGHQ7 := NA]
merged[W2_ZGHQ8 %in% c(-9, -8, -2, -1), W2_ZGHQ8 := NA]
merged[W2_ZGHQ9 %in% c(-9, -8, -2, -1), W2_ZGHQ9 := NA]
merged[W2_ZGHQ10 %in% c(-9, -8, -2, -1), W2_ZGHQ10 := NA]
merged[W2_ZGHQ11 %in% c(-9, -8, -2, -1), W2_ZGHQ11 := NA]
merged[W2_ZGHQ12 %in% c(-9, -8, -2, -1), W2_ZGHQ12 := NA]

suppressWarnings(merged[, W2_ZGHQ1_bin := NULL])
merged[W2_ZGHQ1 %in% c(1, 2), W2_ZGHQ1_bin := 0]
merged[W2_ZGHQ1 %in% c(3, 4), W2_ZGHQ1_bin := 1]
suppressWarnings(merged[, W2_ZGHQ2_bin := NULL])
merged[W2_ZGHQ2 %in% c(1, 2), W2_ZGHQ2_bin := 0]
merged[W2_ZGHQ2 %in% c(3, 4), W2_ZGHQ2_bin := 1]
suppressWarnings(merged[, W2_ZGHQ3_bin := NULL])
merged[W2_ZGHQ3 %in% c(1, 2), W2_ZGHQ3_bin := 0]
merged[W2_ZGHQ3 %in% c(3, 4), W2_ZGHQ3_bin := 1]
suppressWarnings(merged[, W2_ZGHQ4_bin := NULL])
merged[W2_ZGHQ4 %in% c(1, 2), W2_ZGHQ4_bin := 0]
merged[W2_ZGHQ4 %in% c(3, 4), W2_ZGHQ4_bin := 1]
suppressWarnings(merged[, W2_ZGHQ5_bin := NULL])
merged[W2_ZGHQ5 %in% c(1, 2), W2_ZGHQ5_bin := 0]
merged[W2_ZGHQ5 %in% c(3, 4), W2_ZGHQ5_bin := 1]
suppressWarnings(merged[, W2_ZGHQ6_bin := NULL])
merged[W2_ZGHQ6 %in% c(1, 2), W2_ZGHQ6_bin := 0]
merged[W2_ZGHQ6 %in% c(3, 4), W2_ZGHQ6_bin := 1]
suppressWarnings(merged[, W2_ZGHQ7_bin := NULL])
merged[W2_ZGHQ7 %in% c(1, 2), W2_ZGHQ7_bin := 0]
merged[W2_ZGHQ7 %in% c(3, 4), W2_ZGHQ7_bin := 1]
suppressWarnings(merged[, W2_ZGHQ8_bin := NULL])
merged[W2_ZGHQ8 %in% c(1, 2), W2_ZGHQ8_bin := 0]
merged[W2_ZGHQ8 %in% c(3, 4), W2_ZGHQ8_bin := 1]
suppressWarnings(merged[, W2_ZGHQ9_bin := NULL])
merged[W2_ZGHQ9 %in% c(1, 2), W2_ZGHQ9_bin := 0]
merged[W2_ZGHQ9 %in% c(3, 4), W2_ZGHQ9_bin := 1]
suppressWarnings(merged[, W2_ZGHQ10_bin := NULL])
merged[W2_ZGHQ10 %in% c(1, 2), W2_ZGHQ10_bin := 0]
merged[W2_ZGHQ10 %in% c(3, 4), W2_ZGHQ10_bin := 1]
suppressWarnings(merged[, W2_ZGHQ11_bin := NULL])
merged[W2_ZGHQ11 %in% c(1, 2), W2_ZGHQ11_bin := 0]
merged[W2_ZGHQ11 %in% c(3, 4), W2_ZGHQ11_bin := 1]
suppressWarnings(merged[, W2_ZGHQ12_bin := NULL])
merged[W2_ZGHQ12 %in% c(1, 2), W2_ZGHQ12_bin := 0]
merged[W2_ZGHQ12 %in% c(3, 4), W2_ZGHQ12_bin := 1]

merged[, W2_ZGHQ := rowSums(.SD, na.rm=TRUE), .SDcols = c("W2_ZGHQ1_bin", "W2_ZGHQ2_bin", "W2_ZGHQ3_bin", "W2_ZGHQ4_bin", "W2_ZGHQ5_bin", "W2_ZGHQ6_bin", "W2_ZGHQ7_bin", "W2_ZGHQ8_bin", "W2_ZGHQ9_bin", "W2_ZGHQ10_bin", "W2_ZGHQ11_bin", "W2_ZGHQ12_bin")]
merged[, W2_ZGHQ_misscount := rowSums(is.na(.SD)), .SDcols = c("W2_ZGHQ1_bin", "W2_ZGHQ2_bin", "W2_ZGHQ3_bin", "W2_ZGHQ4_bin", "W2_ZGHQ5_bin", "W2_ZGHQ6_bin", "W2_ZGHQ7_bin", "W2_ZGHQ8_bin", "W2_ZGHQ9_bin", "W2_ZGHQ10_bin", "W2_ZGHQ11_bin", "W2_ZGHQ12_bin")]
merged[W2_ZGHQ_misscount>4, W2_ZGHQ := NA]
merged[W2_ZGHQ_misscount<=4, W2_ZGHQ := (W2_ZGHQ/(12-W2_ZGHQ_misscount))*12]

var_label(merged$W1_ZGHQ) <- "Wave 1 GHQ-12 (higher scores worse)"
var_label(merged$W2_ZGHQ) <- "Wave 1 GHQ-12 (higher scores worse)"

```

We have measures of wellbeing from two post-pandemic waves and use these to explore evidence of change in wellbeing between the two waves both overall, and between sub-groups of the data where this might be expected. We plot the overall distribution of reported wellbeing in both Waves 1 (age 16/17) and 2 (age 17/18) in @fig-distribution-lifesat.

::: {#fig-distribution-lifesat}
```{r}
#| label: data-distribution-lifesat
ZLifeSat_cov <- cbind(
    merged[
        W1_ZLifeSat>0 & W2_ZLifeSat>0 &
        W2_AllFamilyFull_weight_yp>=0, W1_ZLifeSat],
    merged[
        W1_ZLifeSat>0 & W2_ZLifeSat>0 &
        W2_AllFamilyFull_weight_yp>=0, W2_ZLifeSat]
        ) |>
  cov.wt(x=_,
        wt = merged[
            W1_ZLifeSat>0 & W2_ZLifeSat>0 &
            W2_AllFamilyFull_weight_yp>=0, W2_AllFamilyFull_weight_yp],
            cor = TRUE)

svyplotdata <- merged |> restrict_sample() |> create_survey_design()
w1_lifesat_mean <- round(svymean(~as.numeric(W1_ZLifeSat), svyplotdata), digits = 2)
w1_lifesat_sd <- round(sqrt(svyvar(~as.numeric(W1_ZLifeSat), svyplotdata)), digits = 2)
w2_lifesat_mean <- round(svymean(~as.numeric(W2_ZLifeSat), svyplotdata), digits = 2)
w2_lifesat_sd <- round(sqrt(svyvar(~as.numeric(W2_ZLifeSat), svyplotdata)), digits = 2)
rm(svyplotdata)

merged |>
  restrict_sample() |>
  setnames("W1_ZLifeSat", "Wave 1") |>
  setnames("W2_ZLifeSat", "Wave 2") |>
  melt(data = _, measure = patterns("Wave")) |>
  create_survey_design() |>
ggsurvey() +
  geom_histogram(aes(value, fill=variable),
    binwidth = 1, alpha=0.3, position = "identity") +
  labs(x = "Wellbeing (0-10)", y = "Count", fill = "Wave") +
  annotate(geom = "text",
    x = 2.5, y = 1500,
    label=paste0("Wave 1 Mean = ", w1_lifesat_mean, "; SD = ", w1_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 1250,
    label=paste0("Wave 2 Mean = ", w2_lifesat_mean, "; SD = ", w2_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 1000,
    label=paste0("Correlation = ", round(ZLifeSat_cov$cor[1,2], digits=2))
  )
```

**Notes:** Histogram weighted for survey design and non-response.

Histogram of distribution of subjective wellbeing in Wave 1 and 2

:::

Young people report a mean wellbeing score of `{r} w1_lifesat_mean` in Wave 1 and `{r} w2_lifesat_mean` at Wave 2, with the standard deviation declining slightly from `{r} w1_lifesat_sd` to `{r} w2_lifesat_sd`. These are not particularly substantial changes, providing little evidence of change between these two post-pandemic time points. However, in interpreting this (lack of) aggregate change, we must be mindful of this cohort's wider context.

One interpretation would be that, as we know there was a decline in mental health and wellbeing among young people at the onset of the pandemic and its restrictions [@Newlove-Delgado2021], we would hope to see an upward trajectory in wellbeing in subsequent years to be confident of a 'bounce back', with this lack of change suggesting a plateau at a lower level than before the pandemic. That could be the case. A finding of minimal change is consistent with the findings of @Henseke2022 (albeit for a wider age range of young people aged 16-29). Similarly, the UK Office For National Statistics' annual population survey also suggests that life satisfaction has not returned to pre-pandemic levels in the general population [@OfficeforNationalStatistics2023b].

Fundamentally, using these data alone we are unable to adjudicate between multiple potential plausible scenarios. Others, using a wider range of datasets are better placed to do so. For example, @Hensekemimeo suggest that young people's wellbeing may have already returned to pre-pandemic levels, thus explaining a lack of trend for this reason. These findings would also be consistent with an upward post-pandemic trend being cancelled out by a countervailing age effect (for example) that would be expected based on the wider literature on wellbeing across the life course [@Blanchflower2021].

However, this is not the focus of our paper. Aggregate stability at the cohort level does not mean that there are not individual-level differences or differential change in reported wellbeing. The correlation between the reported measures in Waves 1 and 2 is `{r} round(ZLifeSat_cov$cor[1,2], digits=2)`. While some of this likely reflects natural fluctuation in young people's wellbeing due to daily idiosyncratic shocks, it provides a basis to explore evidence of systematic difference in change between the two waves, along with the differences in levels at each wave.

### Social support

Social support is concerned with the extent to which an individual is, or perceives they are, "cared for, esteemed, and valued by people in his or her social network" [p. 691, @Demaray2005]. As such, it directly relates to the SPF framework used by this paper, specifically status and affection. As such, we would anticipate that individuals with greater social support will have higher levels of wellbeing [@Li2021, @Magson2021]. Furthermore, because of the potential for substitution between components of the SPF in the production of wellbeing [@Ormel1999], we would also anticipate social support buffering shocks to other aspects; this has been observed empirically where the ability to draw on social support can help to buffer shocks to wellbeing in the face of adversity [@Aksoy2024, @Kearns2015, @McMahon2023].

To capture this factor, we use the social provisions scale [@Cutrona2018], specifically a shortened three-item variant available in COSMO in which young people are asked to respond (using the categories "Not true", "Partly true" or "Very true") to the statements:

1. I have family and friends who help me feel safe, secure and happy
2. There is someone I trust whom I would turn to for advice if I were having problems
3. There is no one I feel close to [Negatively coded]
```{r}
#| label: data-recode-psych
suppressWarnings(val_labels(merged$sps_1) <- NULL)
suppressWarnings(merged[, sps_1 := NULL])
merged[W1_ZSOCPROV_01>=0 & !is.na(W1_ZSOCPROV_01), sps_1 := W1_ZSOCPROV_01]
merged[, sps_1 := mapvalues(sps_1, from=c(1, 2, 3), to=c(2, 1, 0))]
var_label(merged$sps_1) <- "I have family and friends who help me feel safe, secure and happy"
val_labels(merged$sps_1) <- NULL
val_label(merged$sps_1, 0) <- "Not true"
val_label(merged$sps_1, 1) <- "Partly true"
val_label(merged$sps_1, 2) <- "Very true"

suppressWarnings(val_labels(merged$sps_2) <- NULL)
suppressWarnings(merged[, sps_2 := NULL])
merged[W1_ZSOCPROV_02>=0 & !is.na(W1_ZSOCPROV_02), sps_2 := W1_ZSOCPROV_02]
merged[, sps_2 := mapvalues(sps_2, from=c(1, 2, 3), to=c(2, 1, 0))]
var_label(merged$sps_2) <- "There is someone I trust whom I would turn to for advice if I were having problems"
val_labels(merged$sps_2) <- NULL
val_label(merged$sps_2, 0) <- "Not true"
val_label(merged$sps_2, 1) <- "Partly true"
val_label(merged$sps_2, 2) <- "Very true"

suppressWarnings(val_labels(merged$sps_3) <- NULL)
suppressWarnings(merged[, sps_3 := NULL])
merged[W1_ZSOCPROV_03>=0 & !is.na(W1_ZSOCPROV_03), sps_3 := W1_ZSOCPROV_03]
merged[, sps_3 := mapvalues(sps_3, from=c(1, 2, 3), to=c(0, 1, 2))]
var_label(merged$sps_3) <- "There is no one I feel close to"
val_labels(merged$sps_3) <- NULL
val_label(merged$sps_3, 0) <- "Very true"
val_label(merged$sps_3, 1) <- "Partly true"
val_label(merged$sps_3, 2) <- "Not true"

suppressWarnings(merged[, c('sps_total') := NULL])
merged[, sps_total := rowSums(.SD), .SDcols = patterns('sps_*')]
var_label(merged$sps_total) <- "Social Provisions Scale"

merged[, sps_1 := to_factor(sps_1)]
merged[, sps_2 := to_factor(sps_2)]
merged[, sps_3 := to_factor(sps_3)]

```

```{r}
#| label: data-standardise-psych

standardise_psych <- function(survey_data) {

  survey_data$variables$sps_total <- survey_data$variables$sps_total /
                               sqrt(svyvar(~sps_total, survey_data, na.rm = TRUE))
  survey_data$variables$sps_total <- survey_data$variables$sps_total -
                               svymean(~sps_total, survey_data, na.rm = TRUE)

  return(survey_data)
}
```

::: {#fig-psych-dist}
```{r}
#| label: data-psych-dist

mean <- round(svymean(~sps_total, merged |> restrict_sample() |> create_survey_design() |> standardise_psych(), na.rm=TRUE), digits = 2)
sd <- round(sqrt(svyvar(~sps_total, merged |> restrict_sample() |> create_survey_design() |> standardise_psych(), na.rm=TRUE)), digits = 2)

merged |> restrict_sample() |> create_survey_design() |>
  standardise_psych() |>
  ggsurvey() +
    geom_histogram(aes(sps_total), bins = 7) +
    labs(x = "Social Provisions Scale", y = "Count") +
    annotate(geom = "text", x = -3, y = 2000,
    label = paste0("Mean = ", mean, "; SD= ", sd))
```

**Notes:** Distribution of social provisions scale. The scale is standardised to have mean 0 and standard deviation 1 in the analysis sample. Weighted for survey design and non-response.

Distribution of social provisions scale

:::

Following standard practice, we sum over the values of the three items and then standardise the resulting variable to have a mean of zero and a standard deviation of one for the purposes of interpretation. We plot the distribution of the social provisions scale in @fig-psych-dist. There is some evidence of a ceiling effect — the majority of respondents scoring the maximum value of 6 on the scale — but with a decent spread below this. We use this measure as a continuous variable in our analyses.

### Demographic characteristics

The impact of the pandemic on young people's wellbeing has differed depending upon their demographic characteristics [e.g., @Anders2023]. Both to estimate differences between young people based on these characteristics, and to control for these measures in other analyses, we make use of the rich set of demographic measures collected in COSMO. Specifically, we construct the following measures of demographic characteristics.

* *Gender*: There are longstanding concerns about differences in wellbeing by gender, which have only been exacerbated by the pandemic [@Davillas2021a]. We construct a variable for this characterised based on young people's reports at either wave (where a subsequent report is given precedence if they differ), young people are grouped into 'female', 'male' and 'non-binary+', where the final category is a combination of those who explicitly report being non-binary or choose to identify in any other way (since these other groups are too small for analysis).
* *Ethnicity*: There is evidence of a greater initial effect on young people's mental health if they are part of an ethnic minority [@Proto2021]. As with gender, our measure is based on self-reports at either wave (where a subsequent report is given precedence if they differ), young people are grouped into 'White', 'Mixed', 'Black', 'Asian' and 'Other'. While these categories are broad, they are chosen for consistency with the UK's major ethnic group classifications while avoiding groups that are too small for analysis purposes.
* *Parental education*: Generally viewed as a core component of socioeconomic status, which may affect wellbeing through the status component of the SPF [@Ormel1999], we construct a measure of parental education based on the highest level of education reported by either parent at either wave (where a subsequent report is given precedence if they differ), grouping parents into 'Graduate', 'Below Graduate' and 'No Quals'.
* *Housing tenure*: Housing tenure is another component of a family's socioeconomic status, hence with potential implications for young people's wellbeing. We construct a measure of housing tenure based on young people's reports at either wave (where a subsequent report is given precedence if they differ), grouping families into those who own their home (either with a mortgage or outright; 'Own House') and all others (which predominantly include social and private renting; 'Other').
* *Area deprivation*: We also include an area-based measure of deprivation of participants' home address, both as a correlate of socioeconomic stats due to residential sorting and given more direct implications this can have for potentially wellbeing-enhancing amenities. COSMO provides decile groups of the UK's Income Deprivation Affecting Children Index (IDACI), which is constructed at the 'lower-layer super-output area' (the smallest geographical areas in UK statistical geography, containing an average population of 1,500).
```{r}
#| label: data-recode-demos

suppressWarnings(val_labels(merged$gender) <- NULL)
suppressWarnings(merged[, gender := NULL])
merged[W1_ZGENDER >= 0 & !is.na(W1_ZGENDER), gender := W1_ZGENDER]
merged[W2_ZGENDER >= 0 & !is.na(W2_ZGENDER), gender := W2_ZGENDER]
merged[, gender := mapvalues(gender, from=c(1, 2, 3, 4), to = c(0, 1, 2, 2))]

var_label(merged$gender) <- "Gender"
val_labels(merged$gender) <- NULL
val_label(merged$gender, 0) <- "Male"
val_label(merged$gender, 1) <- "Female"
val_label(merged$gender, 2) <- "Non-Binary+"
merged[, gender := to_factor(gender)]

suppressWarnings(val_labels(merged$ethnic) <- NULL)
suppressWarnings(merged[, ethnic := NULL])
merged[W1_ZYPETHNIC >= 0 & !is.na(W1_ZYPETHNIC), ethnic := W1_ZYPETHNIC]
merged[W2_ZYPETHNIC >= 0 & !is.na(W2_ZYPETHNIC), ethnic := W2_ZYPETHNIC]
merged[, ethnic := mapvalues(ethnic, from=c(1, 2, 3, 4, 5), to = c(0, 1, 2, 3, 4))]

var_label(merged$ethnic) <- "Ethnicity"
val_labels(merged$ethnic) <- NULL
val_label(merged$ethnic, 0) <- "White"
val_label(merged$ethnic, 1) <- "Mixed"
val_label(merged$ethnic, 2) <- "Black"
val_label(merged$ethnic, 3) <- "Asian"
val_label(merged$ethnic, 4) <- "Other"
merged[, ethnic := to_factor(ethnic)]

val_labels(merged$W1_XEDUC1) <- NULL
val_labels(merged$W1_XEDUCP1) <- NULL
val_labels(merged$W2_XEDUC1) <- NULL
val_labels(merged$W2_XEDUCP1) <- NULL
merged$W1_XEDUC1 <- as.numeric(merged$W1_XEDUC1)
merged$W1_XEDUCP1 <- as.numeric(merged$W1_XEDUCP1)
merged$W1_XEDUC2 <- as.numeric(merged$W2_XEDUC1)
merged$W1_XEDUCP2 <- as.numeric(merged$W2_XEDUCP1)

suppressWarnings(merged[, parentEd1 := NULL])
merged[W1_XEDUC1 >= 0 & !is.na(W1_XEDUC1), parentEd1 := W1_XEDUC1]
merged[(W1_XEDUCP1 < parentEd1) & (W1_XEDUCP1 >= 0 & !is.na(W1_XEDUCP1)), parentEd1 := W1_XEDUCP1]
suppressWarnings(merged[, parentEd2 := NULL])
merged[W2_XEDUC1 >= 0 & !is.na(W2_XEDUC1), parentEd2 := W2_XEDUC1]
merged[(W2_XEDUCP1 < parentEd2) & (W2_XEDUCP1 >= 0 & !is.na(W2_XEDUCP1)), parentEd2 := W2_XEDUCP1]
suppressWarnings(merged[, parentEd := NULL])
merged[!is.na(parentEd1), parentEd := parentEd1]
merged[((parentEd2 < parentEd1) | is.na(parentEd1)) & !is.na(parentEd2), parentEd := parentEd2]
merged[, parentEd := mapvalues(parentEd, from=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), to=c(3, 3, 3, 3, 3, 2, 2, 2, 2, 1))]
merged[is.na(parentEd), parentEdMiss := 1]
merged[!is.na(parentEd), parentEdMiss := 0]
merged[is.na(parentEd), parentEd := 0]

var_label(merged$parentEd) <- "Parental Education"
val_labels(merged$parentEd) <- NULL
val_label(merged$parentEd, 3) <- "Graduate"
val_label(merged$parentEd, 2) <- "Below Graduate"
val_label(merged$parentEd, 1) <- "No Quals"
val_label(merged$parentEd, 0) <- "Unknown"
merged[, parentEd := to_factor(parentEd)]

val_labels(merged$W1_XNSSEC) <- NULL
val_labels(merged$W1_XPNSSEC) <- NULL
val_labels(merged$W2_XNSSEC) <- NULL
val_labels(merged$W2_XPNSSEC) <- NULL
merged$W1_XNSSEC <- as.numeric(merged$W1_XNSSEC)
merged$W1_XPNSSEC <- as.numeric(merged$W1_XPNSSEC)
merged$W2_XNSSEC <- as.numeric(merged$W2_XNSSEC)
merged$W2_XPNSSEC <- as.numeric(merged$W2_XPNSSEC)

suppressWarnings(merged[, parentNSSEC1:= NULL])
merged[W1_XNSSEC >= 0 & !is.na(W1_XNSSEC), parentNSSEC1 := W1_XNSSEC]
merged[(W1_XPNSSEC < parentNSSEC1) & (W1_XPNSSEC >= 0 & !is.na(W1_XPNSSEC)), parentNSSEC1 := W1_XPNSSEC]
suppressWarnings(merged[, parentNSSEC2 := NULL])
merged[W2_XNSSEC >= 0 & !is.na(W2_XNSSEC), parentNSSEC2 := W2_XNSSEC]
merged[(W2_XPNSSEC < parentNSSEC2) & (W2_XPNSSEC >= 0 & !is.na(W2_XPNSSEC)), parentNSSEC2 := W2_XPNSSEC]
suppressWarnings(merged[, parentNSSEC := NULL])
merged[!is.na(parentNSSEC1), parentNSSEC := parentNSSEC1]
merged[((parentNSSEC2 < parentNSSEC1) | is.na(parentNSSEC1)) & !is.na(parentNSSEC2), parentNSSEC := parentNSSEC2]
merged[, parentNSSEC := mapvalues(parentNSSEC, from=c(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16), to=c(3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, NA))]
merged[is.na(parentNSSEC), parentNSSECMiss := 1]
merged[!is.na(parentNSSEC), parentNSSECMiss := 0]
merged[is.na(parentNSSEC), parentNSSEC := 0]

var_label(merged$parentNSSEC) <- "Parental NS-SEC"
val_labels(merged$parentNSSEC) <- NULL
val_label(merged$parentNSSEC, 3) <- "Higher/managerial occupations"
val_label(merged$parentNSSEC, 2) <- "Intermediate occupations"
val_label(merged$parentNSSEC, 1) <- "Routine/manual occupations or never worked"
val_label(merged$parentNSSEC, 0) <- "Unknown"
merged[, parentNSSEC := to_factor(parentNSSEC)]

merged$W1_XTENURE <- as.numeric(merged$W1_XTENURE)
merged$W2_XTENURE <- as.numeric(merged$W2_XTENURE)

suppressWarnings(merged[, ownHouse := NULL])
merged[W1_XTENURE >= 0 & !is.na(W1_XTENURE), ownHouse := W1_XTENURE]
merged[((W2_XTENURE > W1_XTENURE) | is.na(W1_XTENURE)) & (W2_XTENURE >= 0 & !is.na(W2_XTENURE)), ownHouse := W2_XTENURE]
merged[, ownHouse := mapvalues(ownHouse, from=c(1, 2, 3, 4, 5, 6, 7, 8, 10), to=c(2, 2, 2, 1, 1, 1, 1, 1, 1))]
merged[is.na(ownHouse), ownHouseMiss := 1]
merged[!is.na(ownHouse), ownHouseMiss := 0]
merged[is.na(ownHouse), ownHouse := 0]

val_labels(merged$ownHouse) <- NULL
val_label(merged$ownHouse, 2) <- "Own House"
val_label(merged$ownHouse, 1) <- "Other"
val_label(merged$ownHouse, 0) <- "Unknown"
merged[, ownHouse := to_factor(ownHouse)]
var_label(merged$ownHouse) <- "Housing Tenure"

suppressWarnings(merged[, qidaci := NULL])
merged[, qidaci := mapvalues(W1_IDAC_decile_yp, from=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), to=c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5))]
var_label(merged$qidaci) <- "IDACI Quintile Group"
val_labels(merged$qidaci) <- NULL
val_label(merged$qidaci, 1) <- "1 (High Deprivation)"
val_label(merged$qidaci, 2) <- "2"
val_label(merged$qidaci, 3) <- "3"
val_label(merged$qidaci, 4) <- "4"
val_label(merged$qidaci, 5) <- "5 (Low Deprivation)"
merged[, qidaci := to_factor(qidaci)]

suppressWarnings(merged[, didaci := NULL])
merged[, didaci := mapvalues(W1_IDAC_decile_yp, from=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), to=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))]
var_label(merged$didaci) <- "IDACI Quintile Group"
val_labels(merged$didaci) <- NULL
val_label(merged$didaci, 1) <- "1 (High Deprivation)"
val_label(merged$didaci, 2) <- "2"
val_label(merged$didaci, 3) <- "3"
val_label(merged$didaci, 4) <- "4"
val_label(merged$didaci, 5) <- "5"
val_label(merged$didaci, 6) <- "6"
val_label(merged$didaci, 7) <- "7"
val_label(merged$didaci, 8) <- "8"
val_label(merged$didaci, 9) <- "9"
val_label(merged$didaci, 10) <- "10 (Low Deprivation)"
merged[, didaci := to_factor(didaci)]

val_label(merged$W1_SURVEY_SUB_yp, 202109) <- "Sep 2021"
val_label(merged$W1_SURVEY_SUB_yp, 202110) <- "Oct 2021"
val_label(merged$W1_SURVEY_SUB_yp, 202111) <- "Nov 2021"
val_label(merged$W1_SURVEY_SUB_yp, 202112) <- "Dec 2021"
val_label(merged$W1_SURVEY_SUB_yp, 202201) <- "Jan 2022"
val_label(merged$W1_SURVEY_SUB_yp, 202202) <- "Feb 2022"
val_label(merged$W1_SURVEY_SUB_yp, 202203) <- "Mar 2022"
val_label(merged$W1_SURVEY_SUB_yp, 202204) <- "Apr 2022"
merged[, w1_survey_month := to_factor(W1_SURVEY_SUB_yp)]
var_label(merged$w1_survey_month) <- "W1 Month of Interview"
val_label(merged$W2_SURVEY_SUB_yp, 202110) <- "Oct 2021"
val_label(merged$W2_SURVEY_SUB_yp, 202111) <- "Nov 2021"
val_label(merged$W2_SURVEY_SUB_yp, 202112) <- "Dec 2021"
val_label(merged$W2_SURVEY_SUB_yp, 202201) <- "Jan 2022"
val_label(merged$W2_SURVEY_SUB_yp, 202202) <- "Feb 2022"
val_label(merged$W2_SURVEY_SUB_yp, 202203) <- "Mar 2022"
val_label(merged$W2_SURVEY_SUB_yp, 202204) <- "Apr 2022"
merged[, w2_survey_month := to_factor(W2_SURVEY_SUB_yp)]
var_label(merged$w2_survey_month) <- "W2 Month of Interview"
```

```{r}
#| label: data-ses-poly-pca
#| output: false

merged_pca <- merged |>
  restrict_sample() |>
  _[, parentEd := as.numeric(parentEd)] |>
  _[, ownHouse := as.numeric(ownHouse)]

merged_pca_poly <- merged_pca |>
  _[, .(parentEd, ownHouse,
        W1_IDAC_decile_yp, W1_IMD_decile_yp)]

suppressWarnings(sespcor <- principal(merged_pca_poly,
                  cor = "mixed",
                  weight = merged_pca$scaledweight))
merged_pca$ses_poly <- predict(sespcor, data = merged_pca_poly)

suppressWarnings(merged[, ses_poly := NULL])
merged <- merge(merged, merged_pca[, .(W2_INDserial_yp, ses_poly)],
                by = 'W2_INDserial_yp', all.x = TRUE, no.dups = FALSE
                )
rm(merged_pca, merged_pca_poly)

```

To allow exploration of differences in wellbeing by socioeconomic status (SES) in a simple way, we create a combined index of SES (with mean 0 and standard deviation 0 in our analysis sample) across our measures of parental education, housing tenure and home neighbourhood deprivation. We describe how we do this and demonstrate that it captures the underlying SES measures on which it is based in @sec-appendix-ses.

```{r}
#| label: data-standardise-ses-poly

standardise_ses_poly <- function(survey_data) {
  survey_data$variables$ses_poly <- survey_data$variables$ses_poly /
                               sqrt(svyvar(~ses_poly, survey_data))
  survey_data$variables$ses_poly <- survey_data$variables$ses_poly -
                               svymean(~ses_poly, survey_data)
  return(survey_data)
}
```

```{r}
#| label: data-create-qses-poly-groups

create_qses_groups <- function(data) {
  newdata <- data

  newdata$variables$qses_poly <- xtile(data$variables$ses_poly, n = 5, wt = data$variables$scaledweight)

  var_label(newdata$variables$qses_poly) <- "SES Quintile Groups"
  val_labels(newdata$variables$qses_poly) <- NULL
  val_label(newdata$variables$qses_poly, 1) <- "1 (Low SES)"
  val_label(newdata$variables$qses_poly, 2) <- "2"
  val_label(newdata$variables$qses_poly, 3) <- "3"
  val_label(newdata$variables$qses_poly, 4) <- "4"
  val_label(newdata$variables$qses_poly, 5) <- "5 (High SES)"
  newdata$variables$qses_poly <- to_factor(newdata$variables$qses_poly)

  return(newdata)
}

```

Having constructed this set of measures, we report the prevalence of demographics in our cohort along with mean levels of self-reported wellbeing by these categories at Wave 1, Wave 2, and mean difference between the two in @tbl-demographics-lifesat.
```{r}
#| label: tbl-demographics-lifesat
#| tbl-cap: Mean subjective wellbeing score by demographic characteristics

uvregdata <- merged |> restrict_sample() |> create_survey_design() |>
  standardise_ses_poly() |> create_qses_groups() |> standardise_psych()
uvregdata$variables$overall <- 1

NsDemoLifeSat <-
  tbl_svysummary(uvregdata, statistic = list(gtsummary::all_categorical() ~ "{n_unweighted}", gtsummary::all_continuous() ~ "{n_unweighted}"), include = c('overall', 'gender', 'ethnic', 'parentEd', 'ownHouse', 'qidaci', 'qses_poly'), label = list('overall' ~ "Overall", 'gender' ~ "Gender", ethnic ~ "Ethnicity", 'parentEd' ~ "Parental Education", 'ownHouse' ~ "Housing Tenure", 'qidaci' ~ "IDACI Quintile Group"), missing = "no") |>
  modify_header(stat_0 ~ "**N**") |>
  modify_footnote(stat_0 ~ NA)

prevalenceDemoLifeSat <- merged |> restrict_sample() |> create_survey_design() |>
  standardise_ses_poly() |> create_qses_groups() |> 
  standardise_psych() |>
  tbl_svysummary(statistic = list(gtsummary::all_categorical() ~ "{p}", gtsummary::all_continuous() ~ "{mean}"), 
      percent = "cell", 
      include = c('gender', 'ethnic', 'parentEd', 'ownHouse', 'qidaci', 'qses_poly'), label = list('gender' ~ "Gender", 'ethnic' ~ "Ethnicity", 'parentEd' ~ "Parental Education", 'ownHouse' ~ "Housing Tenure", 'qidaci' ~ "IDACI Quintile Group", 'qses_poly' ~ "SES Quintile Groups"),
      missing="no") |>
  modify_header(stat_0 ~ "**Prevalence (%)**") |>
  modify_footnote(stat_0 ~ NA)

wave1DemoLifeSat <- 
  tbl_uvregression(uvregdata, method = svyglm, y=W1_ZLifeSat,
                  formula = "{y} ~ {x} + 0", conf.int=FALSE,
                   include = c('overall', 'gender', 'ethnic', 'parentEd', 'ownHouse', 'qidaci', 'qses_poly'), label = list('overall' ~ "Overall", 'ownHouse' ~ "Housing Tenure"), hide_n = TRUE,
                   estimate_fun = function(x) style_sigfig(x, digits = 3)) |>
  modify_column_hide(column = c(p.value)) |>
  modify_header(estimate = "**Wave 1**")

wave2DemoLifeSat <- 
  tbl_uvregression(uvregdata, method = svyglm, y=W2_ZLifeSat,
                  formula = "{y} ~ {x} + 0", conf.int=FALSE,
                   include = c('overall', 'gender', 'ethnic', 'parentEd', 'ownHouse', 'qidaci', 'qses_poly'), label = list('overall' ~ "Overall", 'ownHouse' ~ "Housing Tenure"),  hide_n = TRUE,
                   estimate_fun = function(x) style_sigfig(x, digits = 3)) |>
  modify_column_hide(column = c(p.value)) |>
  modify_header(estimate = "**Wave 2**")

diffDemoLifeSat <- 
  tbl_uvregression(uvregdata, method = svyglm, y=ZLifeSatDiff,
                  formula = "{y} ~ {x} + 0", conf.int=FALSE,
                   include = c('overall', 'gender', 'ethnic', 'parentEd', 'ownHouse', 'qidaci', 'qses_poly'), label = list('overall' ~ "Overall", 'ownHouse' ~ "Housing Tenure"), hide_n = TRUE,
                   estimate_fun = function(x) style_sigfig(x, digits = 3)) |>
  modify_column_hide(column = c(p.value)) |>
  modify_header(estimate = "**Difference**")

tbl_demographics_lifesat <- tbl_merge(
  tbls = list(NsDemoLifeSat, prevalenceDemoLifeSat, wave1DemoLifeSat, wave2DemoLifeSat, diffDemoLifeSat)) |>
  modify_spanning_header(everything() ~ NA)
tbl_demographics_lifesat |>
  as_gt() |> tab_source_note(md("**Notes:** Reporting means where otherwise specified. All estimates are weighted and account for the complex survey design. The difference is calculated as Wave 2 - Wave 1."))

rm(uvregdata)
```

`{r} inline_text(tbl_demographics_lifesat, variable = gender, level = "Male", column = "stat_0_2")`% of the sample are male, `{r} inline_text(tbl_demographics_lifesat, variable = gender, level = "Female", column = "stat_0_2")`% are female and `{r} inline_text(tbl_demographics_lifesat, variable = gender, level = "Non-Binary+", column = "stat_0_2")`% are non-binary or report in another way. Average reported wellbeing differs substantially between these groups with boys (`{r} inline_text(tbl_demographics_lifesat, variable = gender, level = "Male", column = "estimate_3")` in Wave 1) reporting higher levels of wellbeing than girls (`{r} inline_text(tbl_demographics_lifesat, variable = gender, level = "Female", column = "estimate_3")`). This is consistent with existing work on inequalities in young people's wellbeing (e.g. @Anders2023, @Davillas2021a), both before the pandemic and as a result of its impact. Non-binary+ young people report lower levels of wellbeing still than girls, although there is evidence of an increase for this group between Waves 1 and 2; we should be mindful, however, of the smaller sample size for this group.

By ethnicity, the highest levels of reported wellbeing are for Black young people (`{r} inline_text(tbl_demographics_lifesat, variable = ethnic, level = "Black", column = "estimate_3")` in Wave 1), followed by White young people (`{r} inline_text(tbl_demographics_lifesat, variable = ethnic, level = "White", column = "estimate_3")`), with the lowest among young people who reported a Mixed ethnicity. These differences are small and, other than the small group of young people placed into the Other category, there is little evidence of change over time.

There is a broadly consistent gradient in wellbeing across our quintile groups of socioeconomic status, from `{r} inline_text(tbl_demographics_lifesat, variable = qses_poly, level = "1 (Low SES)", column = "estimate_3")` to `{r} inline_text(tbl_demographics_lifesat, variable = qses_poly, level = "5 (High SES)", column = "estimate_3")` (both for Wave 1 but with a similar picture in Wave 2). Again, these appear to be rather small differences and there is no evidence of consistent change between the two waves.

Overall, this initial analysis highlights gender as the most important demographic difference in wellbeing for this sample of young people in England.

### Perceived ongoing impact

Next, we seek to quantify differences in young people's wellbeing by their own perceptions of the ongoing impact of the pandemic. This takes seriously young people's own reports of the ongoing impact of the pandemic on their wellbeing. To capture these perceptions, we use a question asked to young people at the second wave of COSMO, asking "Would you say the pandemic is still having an effect on [your mental wellbeing], whether positive or negative?" If they agree with this question then they are subsequently asked to distinguish whether this impact is positive, negative or they don't know.
```{r}
#| label: data-recode-covid_impact_mh

suppressWarnings(val_labels(merged$covid_impact_mh) <- NULL)
suppressWarnings(merged[, covid_impact_mh := NULL])
merged[W2_ZCoronaImpact2_05>=0 & !is.na(W2_ZCoronaImpact2_05), covid_impact_mh := W2_ZCoronaImpact2_05]
merged[, covid_impact_mh := mapvalues(covid_impact_mh, from=c(0, 1), to=c(0, 1))]
var_label(merged$covid_impact_mh) <- "Continuing impact of pandemic on mental wellbeing"
val_labels(merged$covid_impact_mh) <- NULL
val_label(merged$covid_impact_mh, 0) <- "No"
val_label(merged$covid_impact_mh, 1) <- "Yes"
merged[, covid_impact_mh := to_factor(covid_impact_mh)]

suppressWarnings(val_labels(merged$covid_impact_mh_dir) <- NULL)
suppressWarnings(merged[, covid_impact_mh_dir := NULL])
merged[!is.na(W2_ZImPosNeg_05), covid_impact_mh_dir := W2_ZImPosNeg_05]
merged[, covid_impact_mh_dir := mapvalues(covid_impact_mh_dir, from=c(-8, 1, 2), to=c(2, 1, 3))]
var_label(merged$covid_impact_mh_dir) <- "Direction of continuing impact of pandemic on mental wellbeing"
val_labels(merged$covid_impact_mh_dir) <- NULL
val_label(merged$covid_impact_mh_dir, 1) <- "Positive"
val_label(merged$covid_impact_mh_dir, 2) <- "Don't know"
val_label(merged$covid_impact_mh_dir, 3) <- "Negative"
merged[, covid_impact_mh_dir := to_factor(covid_impact_mh_dir)]

suppressWarnings(val_labels(merged$covid_impact_mh_full) <- NULL)
suppressWarnings(merged[, covid_impact_mh_full := NULL])
merged[covid_impact_mh=="No", covid_impact_mh_full := 0]
merged[covid_impact_mh=="Yes" & covid_impact_mh_dir=="Negative", covid_impact_mh_full := 1]
merged[covid_impact_mh=="Yes" & covid_impact_mh_dir=="Don't know", covid_impact_mh_full := 2]
merged[covid_impact_mh=="Yes" & covid_impact_mh_dir=="Positive", covid_impact_mh_full := 3]
var_label(merged$covid_impact_mh_full) <- "Continuing impact of pandemic on mental wellbeing"
val_labels(merged$covid_impact_mh_full) <- NULL
val_label(merged$covid_impact_mh_full, 0) <- "No"
val_label(merged$covid_impact_mh_full, 1) <- "Negative"
val_label(merged$covid_impact_mh_full, 2) <- "Don't know"
val_label(merged$covid_impact_mh_full, 3) <- "Positive"
merged[, covid_impact_mh_full := to_factor(covid_impact_mh_full)]

suppressWarnings(val_labels(merged$covid_impact_mh_neg) <- NULL)
suppressWarnings(merged[, covid_impact_mh_neg := NULL])
merged[!is.na(covid_impact_mh), covid_impact_mh_neg := 0]
merged[covid_impact_mh=="Yes" & covid_impact_mh_dir=="Negative", covid_impact_mh_neg := 1]
var_label(merged$covid_impact_mh_neg) <- "Negative continuing impact of pandemic on mental wellbeing"
val_labels(merged$covid_impact_mh_neg) <- NULL
val_label(merged$covid_impact_mh_neg, 0) <- "No"
val_label(merged$covid_impact_mh_neg, 1) <- "Yes"
merged[, covid_impact_mh_neg := to_factor(covid_impact_mh_neg)]
```

```{r}
#| label: tbl-covid-impact-life-sat
#| tbl-cap: Mean subjective wellbeing score by whether and how the pandemic continues to affect mental wellbeing

covid_impact_life_sat <- merged |>
restrict_sample() |>
create_survey_design() |>
  tbl_svysummary(
    by = covid_impact_mh_full,
    missing = "no",
    include = c('W1_ZLifeSat', 'W2_ZLifeSat', 'ZLifeSatDiff'),
    label = list(W1_ZLifeSat ~ "Wave 1", W2_ZLifeSat ~ "Wave 2", ZLifeSatDiff ~ "Difference"),
    statistic = list(gtsummary::all_continuous() ~ "{mean}", gtsummary::all_categorical() ~ "{n} ({p}%)")
  ) |>
  add_overall(last = TRUE) |>
  add_p() |>
  modify_header(label = "**Variable**, N = {N_unweighted}", all_stat_cols() ~ "**{level}** ({round(p, digits=2)*100}%)") |>
  bold_labels()
covid_impact_life_sat |>
  as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and account for the complex survey design. The difference is calculated as Wave 2 - Wave 1."))
```

@tbl-covid-impact-life-sat shows that `{r} merged |> restrict_sample() |> create_survey_design() |> group_by(covid_impact_mh_full) |> summarise(p = survey_prop(proportion = TRUE)) |> filter(covid_impact_mh_full=="No") |> select(p) |> as.numeric() |> round(digits = 2)*100`% of young people report that the pandemic is continuing to have an impact on their mental wellbeing, with `{r} merged |> restrict_sample() |> create_survey_design() |> group_by(covid_impact_mh_full) |> summarise(p = survey_prop(proportion = TRUE)) |> filter(covid_impact_mh_full=="Negative") |> select(p) |> as.numeric() |> round(digits = 2)*100`% of these reporting that this impact is negative. Perhaps unsurprisingly, much smaller proportion of young people report that the ongoing impact is positive (`{r} merged |> restrict_sample() |> create_survey_design() |> group_by(covid_impact_mh_full) |> summarise(p = survey_prop(proportion = TRUE)) |> filter(covid_impact_mh_full=="Positive") |> select(p) |> as.numeric() |> round(digits = 2)*100`%) or that they don't know if the impact is positive or negative (`{r} merged |> restrict_sample() |> create_survey_design() |> group_by(covid_impact_mh_full) |> summarise(p = survey_prop(proportion = TRUE)) |> filter(covid_impact_mh_full=="Don't know") |> select(p) |> as.numeric() |> round(digits = 2)*100`%).

Those who report no impact of the pandemic on their mental wellbeing have the highest self-reported wellbeing (`{r} covid_impact_life_sat$table_body$stat_1[1]` in Wave 1; `{r} covid_impact_life_sat$table_body$stat_1[2]` in Wave 2), while those who report that it had a negative impact on their mental wellbeing report the lowest (`{r} covid_impact_life_sat$table_body$stat_2[1]` in Wave 1; `{r} covid_impact_life_sat$table_body$stat_2[2]` in Wave 2). Those who say it is still having an impact but that it is positive, or that they don't know if it is positive or negative, report somewhere between the other two groups but, as noted, these are a very small proportion of the sample.

These groups are also distinguished by the change in their reported wellbeing between Waves 1 and 2. Those who report that the pandemic is continuing to have a negative impact on their mental wellbeing do, indeed, report a decline in wellbeing (`{r} covid_impact_life_sat$table_body$stat_2[3]`) between the two waves, while those who report that it has had no impact (`{r} covid_impact_life_sat$table_body$stat_1[3]`) or that it is having a positive impact report an increase (`{r} covid_impact_life_sat$table_body$stat_4[3]`). Those who report that it is still having an impact but that they don't know if it is positive or negative report a slight decline (`{r} covid_impact_life_sat$table_body$stat_3[3]`). 

These last two groups are small, so these estimates should be treated with caution. In subsequent analyses we combine these two groups with the group who report no impact. This allows for an overall comparison of those who report an ongoing negative impact with the rest of the sample.

### Adverse life events

Finally, we explore whether subjective wellbeing is associated with adverse life events that occurred during the COVID-19 pandemic. In Wave 1, COSMO asked participants whether they had experienced each of the following life events since the onset of the pandemic in March 2020:

1. A parent/guardian or carer lost their job or business
2. My family could not afford to buy enough food, or had to use a food bank
3. My family could not afford to pay their bills/rent/mortgage
4. I was seriously ill in hospital
5. A close family member or friend is or was seriously ill in hospital
6. A close family member or friend died
7. Increase in number of arguments with parents/guardians
8. Increase in number of arguments between parents/guardians
9. Moving to a new home
10. Parents/guardians separated or divorced

The question is worded to capture events whether or not they are directly attributable to the pandemic, its restrictions and disruptions, but it is reasonable to believe many were caused or exacerbated by the circumstances of the pandemic. Participants were then asked whether they had experienced these events over the past twelve months (i.e., for most participants a year since they responded to the Wave 1 survey) in Wave 2.
```{r}
#| label: data-recode-lifeevents

suppressWarnings(val_labels(merged$w1_event_parentlostjob) <- NULL)
suppressWarnings(val_labels(merged$w2_event_parentlostjob) <- NULL)
suppressWarnings(val_labels(merged$event_parentlostjob) <- NULL)
suppressWarnings(merged[, w1_event_parentlostjob := NULL])
suppressWarnings(merged[, w2_event_parentlostjob := NULL])
suppressWarnings(merged[, event_parentlostjob := NULL])
merged[, W1_ZLIFEEVENTS_01 := as.numeric(W1_ZLIFEEVENTS_01)]
merged[, W2_ZLIFEEVENTS_01 := as.numeric(W2_ZLIFEEVENTS_01)]
merged[W1_ZLIFEEVENTS_01>=0 & !is.na(W1_ZLIFEEVENTS_01),
    w1_event_parentlostjob := W1_ZLIFEEVENTS_01]
merged[W2_ZLIFEEVENTS_01>=0 & !is.na(W2_ZLIFEEVENTS_01),
    w2_event_parentlostjob := W2_ZLIFEEVENTS_01]
merged[, event_parentlostjob := w1_event_parentlostjob]
merged[is.na(event_parentlostjob) | w2_event_parentlostjob>event_parentlostjob, event_parentlostjob := w2_event_parentlostjob]

val_labels(merged$event_parentlostjob) <- NULL
val_label(merged$event_parentlostjob, 0) <- "No"
val_label(merged$event_parentlostjob, 1) <- "Yes"

suppressWarnings(val_labels(merged$w1_event_nofood) <- NULL)
suppressWarnings(val_labels(merged$w2_event_nofood) <- NULL)
suppressWarnings(val_labels(merged$event_nofood) <- NULL)
suppressWarnings(merged[, w1_event_nofood := NULL])
suppressWarnings(merged[, w2_event_nofood := NULL])
suppressWarnings(merged[, event_nofood := NULL])
merged[, W1_ZLIFEEVENTS_02 := as.numeric(W1_ZLIFEEVENTS_02)]
merged[, W2_ZLIFEEVENTS_02 := as.numeric(W2_ZLIFEEVENTS_02)]
merged[W1_ZLIFEEVENTS_02>=0 & !is.na(W1_ZLIFEEVENTS_02),
    w1_event_nofood := W1_ZLIFEEVENTS_02]
merged[W2_ZLIFEEVENTS_02>=0 & !is.na(W2_ZLIFEEVENTS_02),
    w2_event_nofood := W2_ZLIFEEVENTS_02]
merged[, event_nofood := w1_event_nofood]
merged[is.na(event_nofood) | w2_event_nofood>event_nofood, event_nofood := w2_event_nofood]
val_labels(merged$event_nofood) <- NULL
val_label(merged$event_nofood, 0) <- "No"
val_label(merged$event_nofood, 1) <- "Yes"

suppressWarnings(val_labels(merged$w1_event_nobills) <- NULL)
suppressWarnings(val_labels(merged$w2_event_nobills) <- NULL)
suppressWarnings(val_labels(merged$event_nobills) <- NULL)
suppressWarnings(merged[, w1_event_nobills := NULL])
suppressWarnings(merged[, w2_event_nobills := NULL])
suppressWarnings(merged[, event_nobills := NULL])
merged[, W1_ZLIFEEVENTS_03 := as.numeric(W1_ZLIFEEVENTS_03)]
merged[, W2_ZLIFEEVENTS_03 := as.numeric(W2_ZLIFEEVENTS_03)]
merged[W1_ZLIFEEVENTS_03>=0 & !is.na(W1_ZLIFEEVENTS_03),
    w1_event_nobills := W1_ZLIFEEVENTS_03]
merged[W2_ZLIFEEVENTS_03>=0 & !is.na(W2_ZLIFEEVENTS_03),
    w2_event_nobills := W2_ZLIFEEVENTS_03]
merged[, event_nobills := w1_event_nobills]
merged[is.na(event_nobills) | w2_event_nobills>event_nobills, event_nobills := w2_event_nobills]
val_labels(merged$event_nobills) <- NULL
val_label(merged$event_nobills, 0) <- "No"
val_label(merged$event_nobills, 1) <- "Yes"

suppressWarnings(val_labels(merged$w1_event_seriousill) <- NULL)
suppressWarnings(val_labels(merged$w2_event_seriousill) <- NULL)
suppressWarnings(val_labels(merged$event_seriousill) <- NULL)
suppressWarnings(merged[, w1_event_seriousill := NULL])
suppressWarnings(merged[, w2_event_seriousill := NULL])
suppressWarnings(merged[, event_seriousill := NULL])
merged[, W1_ZLIFEEVENTS_04 := as.numeric(W1_ZLIFEEVENTS_04)]
merged[, W2_ZLIFEEVENTS_04 := as.numeric(W2_ZLIFEEVENTS_04)]
merged[W1_ZLIFEEVENTS_04>=0 & !is.na(W1_ZLIFEEVENTS_04),
    w1_event_seriousill := W1_ZLIFEEVENTS_04]
merged[W2_ZLIFEEVENTS_04>=0 & !is.na(W2_ZLIFEEVENTS_04),
    w2_event_seriousill := W2_ZLIFEEVENTS_04]
merged[, event_seriousill := w1_event_seriousill]
merged[is.na(event_seriousill) | w2_event_seriousill > event_seriousill, event_seriousill := w2_event_seriousill]
val_labels(merged$event_seriousill) <- NULL
val_label(merged$event_seriousill, 0) <- "No"
val_label(merged$event_seriousill, 1) <- "Yes"

suppressWarnings(val_labels(merged$w1_event_familyseriousill) <- NULL)
suppressWarnings(val_labels(merged$w2_event_familyseriousill) <- NULL)
suppressWarnings(val_labels(merged$event_familyseriousill) <- NULL)
suppressWarnings(merged[, w1_event_familyseriousill := NULL])
suppressWarnings(merged[, w2_event_familyseriousill := NULL])
suppressWarnings(merged[, event_familyseriousill := NULL])
merged[, W1_ZLIFEEVENTS_05 := as.numeric(W1_ZLIFEEVENTS_05)]
merged[, W2_ZLIFEEVENTS_05 := as.numeric(W2_ZLIFEEVENTS_05)]
merged[W1_ZLIFEEVENTS_05>=0 & !is.na(W1_ZLIFEEVENTS_05),
    w1_event_familyseriousill := W1_ZLIFEEVENTS_05]
merged[W2_ZLIFEEVENTS_05>=0 & !is.na(W2_ZLIFEEVENTS_05),
    w2_event_familyseriousill := W2_ZLIFEEVENTS_05]
merged[, event_familyseriousill := w1_event_familyseriousill]
merged[is.na(event_familyseriousill) | w2_event_familyseriousill>event_familyseriousill, event_familyseriousill := w2_event_familyseriousill]
val_labels(merged$event_familyseriousill) <- NULL
val_label(merged$event_familyseriousill, 0) <- "No"
val_label(merged$event_familyseriousill, 1) <- "Yes"

suppressWarnings(val_labels(merged$w1_event_familydied) <- NULL)
suppressWarnings(val_labels(merged$w2_event_familydied) <- NULL)
suppressWarnings(val_labels(merged$event_familydied) <- NULL)
suppressWarnings(merged[, w1_event_familydied := NULL])
suppressWarnings(merged[, w2_event_familydied := NULL])
suppressWarnings(merged[, event_familydied := NULL])
merged[, W1_ZLIFEEVENTS_06 := as.numeric(W1_ZLIFEEVENTS_06)]
merged[, W2_ZLIFEEVENTS_06 := as.numeric(W2_ZLIFEEVENTS_06)]
merged[W1_ZLIFEEVENTS_06>=0 & !is.na(W1_ZLIFEEVENTS_06),
    w1_event_familydied := W1_ZLIFEEVENTS_06]
merged[W2_ZLIFEEVENTS_06>=0 & !is.na(W2_ZLIFEEVENTS_06),
    w2_event_familydied := W2_ZLIFEEVENTS_06]
merged[, event_familydied := w1_event_familydied]
merged[is.na(event_familydied) | w2_event_familydied > event_familydied, event_familydied := w2_event_familydied]
val_labels(merged$event_familydied) <- NULL
val_label(merged$event_familydied, 0) <- "No"
val_label(merged$event_familydied, 1) <- "Yes"

suppressWarnings(merged[, w1_event_arguewithparents := NULL])
suppressWarnings(merged[, w2_event_arguewithparents := NULL])
suppressWarnings(merged[, event_arguewithparents := NULL])
merged[, W1_ZLIFEEVENTS_07 := as.numeric(W1_ZLIFEEVENTS_07)]
merged[, W2_ZLIFEEVENTS_07 := as.numeric(W2_ZLIFEEVENTS_07)]
merged[W1_ZLIFEEVENTS_07>=0 & !is.na(W1_ZLIFEEVENTS_07),
    w1_event_arguewithparents := W1_ZLIFEEVENTS_07]
merged[W2_ZLIFEEVENTS_07>=0 & !is.na(W2_ZLIFEEVENTS_07),
    w2_event_arguewithparents := W2_ZLIFEEVENTS_07]
merged[, event_arguewithparents := w1_event_arguewithparents]
merged[is.na(event_arguewithparents) | w2_event_arguewithparents>event_arguewithparents, event_arguewithparents := w2_event_arguewithparents]
val_labels(merged$event_arguewithparents) <- NULL
val_label(merged$event_arguewithparents, 0) <- "No"
val_label(merged$event_arguewithparents, 1) <- "Yes"

suppressWarnings(val_labels(merged$event_arguebetweenparents) <- NULL)
suppressWarnings(merged[, w1_event_arguebetweenparents := NULL])
suppressWarnings(merged[, w2_event_arguebetweenparents := NULL])
suppressWarnings(merged[, event_arguebetweenparents := NULL])
merged[, W1_ZLIFEEVENTS_08 := as.numeric(W1_ZLIFEEVENTS_08)]
merged[, W2_ZLIFEEVENTS_08 := as.numeric(W2_ZLIFEEVENTS_08)]
merged[W1_ZLIFEEVENTS_08>=0 & !is.na(W1_ZLIFEEVENTS_08),
    w1_event_arguebetweenparents := W1_ZLIFEEVENTS_08]
merged[W2_ZLIFEEVENTS_08>=0 & !is.na(W2_ZLIFEEVENTS_08),
    w2_event_arguebetweenparents := W2_ZLIFEEVENTS_08]
merged[, event_arguebetweenparents := w1_event_arguebetweenparents]
merged[is.na(event_arguebetweenparents) | w2_event_arguebetweenparents>event_arguebetweenparents, event_arguebetweenparents := w2_event_arguebetweenparents]
val_labels(merged$event_arguebetweenparents) <- NULL
val_label(merged$event_arguebetweenparents, 0) <- "No"
val_label(merged$event_arguebetweenparents, 1) <- "Yes"

suppressWarnings(val_labels(merged$event_movehouse) <- NULL)
suppressWarnings(merged[, w1_event_movehouse := NULL])
suppressWarnings(merged[, w2_event_movehouse := NULL])
suppressWarnings(merged[, event_movehouse := NULL])
merged[, W1_ZLIFEEVENTS_09 := as.numeric(W1_ZLIFEEVENTS_09)]
merged[, W2_ZLIFEEVENTS_09 := as.numeric(W2_ZLIFEEVENTS_09)]
merged[W1_ZLIFEEVENTS_09>=0 & !is.na(W1_ZLIFEEVENTS_09),
    w1_event_movehouse := W1_ZLIFEEVENTS_09]
merged[W2_ZLIFEEVENTS_09>=0 & !is.na(W2_ZLIFEEVENTS_09),
    w2_event_movehouse := W2_ZLIFEEVENTS_09]
merged[, event_movehouse := w1_event_movehouse]
merged[is.na(event_movehouse) | w2_event_movehouse>event_movehouse, event_movehouse := w2_event_movehouse]
val_labels(merged$event_movehouse) <- NULL
val_label(merged$event_movehouse, 0) <- "No"
val_label(merged$event_movehouse, 1) <- "Yes"

suppressWarnings(val_labels(merged$event_parentsseparated) <- NULL)
suppressWarnings(merged[, w1_event_parentsseparated := NULL])
suppressWarnings(merged[, w2_event_parentsseparated := NULL])
suppressWarnings(merged[, event_parentsseparated := NULL])
merged[, W1_ZLIFEEVENTS_10 := as.numeric(W1_ZLIFEEVENTS_10)]
merged[, W2_ZLIFEEVENTS_10 := as.numeric(W2_ZLIFEEVENTS_10)]
merged[W1_ZLIFEEVENTS_10>=0 & !is.na(W1_ZLIFEEVENTS_10),
    w1_event_parentsseparated := W1_ZLIFEEVENTS_10]
merged[W2_ZLIFEEVENTS_10>=0 & !is.na(W2_ZLIFEEVENTS_10),
    w2_event_parentsseparated := W2_ZLIFEEVENTS_10]
merged[, event_parentsseparated := w1_event_parentsseparated]
merged[is.na(event_parentsseparated) | w2_event_parentsseparated>event_parentsseparated, event_parentsseparated := w2_event_parentsseparated]
val_labels(merged$event_parentsseparated) <- NULL
val_label(merged$event_parentsseparated, 0) <- "No"
val_label(merged$event_parentsseparated, 1) <- "Yes"

suppressWarnings(merged[, c('event_count', 'event_count_group', 'w1_event_count', 'w1_event_count_group', 'w2_event_count', 'w2_event_count_group') := NULL])
merged[, event_count := rowSums(.SD), .SDcols=c('event_parentlostjob', 'event_nofood', 'event_nobills', 'event_seriousill', 'event_familyseriousill', 'event_familydied', 'event_arguewithparents', 'event_arguebetweenparents', 'event_movehouse', 'event_parentsseparated')]
merged[, w1_event_count := rowSums(.SD), .SDcols=c('w1_event_parentlostjob', 'w1_event_nofood', 'w1_event_nobills', 'w1_event_seriousill', 'w1_event_familyseriousill', 'w1_event_familydied', 'w1_event_arguewithparents', 'w1_event_arguebetweenparents', 'w1_event_movehouse', 'w1_event_parentsseparated')]
merged[, w2_event_count := rowSums(.SD), .SDcols=c('w2_event_parentlostjob', 'w2_event_nofood', 'w2_event_nobills', 'w2_event_seriousill', 'w2_event_familyseriousill', 'w2_event_familydied', 'w2_event_arguewithparents', 'w2_event_arguebetweenparents', 'w2_event_movehouse', 'w2_event_parentsseparated')]

merged[, event_parentlostjob := to_factor(event_parentlostjob)]
merged[, event_nofood := to_factor(event_nofood)]
merged[, event_nobills := to_factor(event_nobills)]
merged[, event_seriousill := to_factor(event_seriousill)]
merged[, event_familyseriousill := to_factor(event_familyseriousill)]
merged[, event_familydied := to_factor(event_familydied)]
merged[, event_arguewithparents := to_factor(event_arguewithparents)]
merged[, event_arguebetweenparents := to_factor(event_arguebetweenparents)]
merged[, event_movehouse := to_factor(event_movehouse)]
merged[, event_parentsseparated := to_factor(event_parentsseparated)]

merged[, w1_event_parentlostjob := to_factor(w1_event_parentlostjob)]
merged[, w1_event_nofood := to_factor(w1_event_nofood)]
merged[, w1_event_nobills := to_factor(w1_event_nobills)]
merged[, w1_event_seriousill := to_factor(w1_event_seriousill)]
merged[, w1_event_familyseriousill := to_factor(w1_event_familyseriousill)]
merged[, w1_event_familydied := to_factor(w1_event_familydied)]
merged[, w1_event_arguewithparents := to_factor(w1_event_arguewithparents)]
merged[, w1_event_arguebetweenparents := to_factor(w1_event_arguebetweenparents)]
merged[, w1_event_movehouse := to_factor(w1_event_movehouse)]
merged[, w1_event_parentsseparated := to_factor(w1_event_parentsseparated)]

merged[, w2_event_parentlostjob := to_factor(w2_event_parentlostjob)]
merged[, w2_event_nofood := to_factor(w2_event_nofood)]
merged[, w2_event_nobills := to_factor(w2_event_nobills)]
merged[, w2_event_seriousill := to_factor(w2_event_seriousill)]
merged[, w2_event_familyseriousill := to_factor(w2_event_familyseriousill)]
merged[, w2_event_familydied := to_factor(w2_event_familydied)]
merged[, w2_event_arguewithparents := to_factor(w2_event_arguewithparents)]
merged[, w2_event_arguebetweenparents := to_factor(w2_event_arguebetweenparents)]
merged[, w2_event_movehouse := to_factor(w2_event_movehouse)]
merged[, w2_event_parentsseparated := to_factor(w2_event_parentsseparated)]

merged[, event_count_group := mapvalues(event_count, from=c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), to=c(0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3))]
var_label(merged$event_count_group) <- "Life Events (grouped)"
val_labels(merged$event_count_group) <- NULL
val_label(merged$event_count_group, 0) <- "0"
val_label(merged$event_count_group, 1) <- "1"
val_label(merged$event_count_group, 2) <- "2"
val_label(merged$event_count_group, 3) <- "3+"
merged[, event_count_group := to_factor(event_count_group)]

merged[, w1_event_count_group := mapvalues(w1_event_count, from=c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9), to=c(0, 1, 2, 3, 3, 3, 3, 3, 3, 3))]
var_label(merged$w1_event_count_group) <- "Life Events (grouped; Wave 1 only)"
val_labels(merged$w1_event_count_group) <- NULL
val_label(merged$w1_event_count_group, 0) <- "0"
val_label(merged$w1_event_count_group, 1) <- "1"
val_label(merged$w1_event_count_group, 2) <- "2"
val_label(merged$w1_event_count_group, 3) <- "3+"
merged[, w1_event_count_group := to_factor(w1_event_count_group)]

var_label(merged$event_parentlostjob) <- "Parent lost job"
var_label(merged$event_nofood) <- "Couldn't afford food"
var_label(merged$event_nobills) <- "Couldn't afford bills"
var_label(merged$event_seriousill) <- "Seriously ill"
var_label(merged$event_familyseriousill) <- "Close family member seriously ill"
var_label(merged$event_familydied) <- "Close family member died"
var_label(merged$event_arguewithparents) <- "More arguments with parents"
var_label(merged$event_arguebetweenparents) <- "More arguments between parents"
var_label(merged$event_movehouse) <- "Moved home"
var_label(merged$event_parentsseparated) <- "Parents separated"
```

`{r} merged |> restrict_sample() |> create_survey_design() |> group_by(event_count_group) |> summarise(p = survey_prop(proportion = TRUE)) |> filter(event_count_group=="0") |> select(p) |> as.numeric() |> round(digits = 2)*100`% of pupils experience no events at all, while `{r} merged |> restrict_sample() |> create_survey_design() |> group_by(event_count_group) |> summarise(p = survey_prop(proportion = TRUE)) |> filter(event_count_group=="3+") |> select(p) |> as.numeric() |> round(digits = 2)*100`% experience three or more events. We report the proportion of young people experiencing each of the ten specific adverse life events in the first column of @tbl-events.

We initially anticipated using the simple count of number of adverse events experienced in analyses. However, the substantial differences in prevalence of the events means this would be inappropriately imposing the same importance, or severity, for all the events. Instead, we want to allow these to differ, such that lower probability/higher impact events are given more weight in our analysis. We create a composite index of adverse life events using a polychoric principal component analysis (PCA) of the ten measured adverse life events.
```{r}
#| label: data-lifeevents-pca-poly
#| output: false

merged_pca <- merged |>
  restrict_sample() |>
  _[, event_parentlostjob := as.numeric(event_parentlostjob)] |>
  _[, event_nofood := as.numeric(event_nofood)] |>
  _[, event_nobills := as.numeric(event_nobills)] |>
  _[, event_seriousill := as.numeric(event_seriousill)] |>
  _[, event_familyseriousill := as.numeric(event_familyseriousill)] |>
  _[, event_familydied := as.numeric(event_familydied)] |>
  _[, event_arguewithparents := as.numeric(event_arguewithparents)] |>
  _[, event_arguebetweenparents := as.numeric(event_arguebetweenparents)] |>
  _[, event_movehouse := as.numeric(event_movehouse)] |>
  _[, event_parentsseparated := as.numeric(event_parentsseparated)]

merged_pca_poly <- merged_pca |>
  _[, .(event_parentlostjob, event_nofood, event_nobills, event_seriousill, event_familyseriousill, event_familydied, event_arguewithparents, event_arguebetweenparents, event_movehouse, event_parentsseparated)]

suppressWarnings(event_pcor_pca <- principal(merged_pca_poly,
                  cor = "mixed",
                  weight = merged_pca$scaledweight))
merged_pca$event_index_poly <- predict(event_pcor_pca, data = merged_pca_poly)

suppressWarnings(merged[, event_index_poly := NULL])
merged <- merge(merged, merged_pca[, .(W2_INDserial_yp, event_index_poly)],
                by = 'W2_INDserial_yp', all.x = TRUE, no.dups = FALSE
                )
rm(merged_pca, merged_pca_poly)

# Wave 1 variant
merged_pca <- merged |>
  restrict_sample() |>
  _[, w1_event_parentlostjob := as.numeric(w1_event_parentlostjob)] |>
  _[, w1_event_nofood := as.numeric(w1_event_nofood)] |>
  _[, w1_event_nobills := as.numeric(w1_event_nobills)] |>
  _[, w1_event_seriousill := as.numeric(w1_event_seriousill)] |>
  _[, w1_event_familyseriousill := as.numeric(w1_event_familyseriousill)] |>
  _[, w1_event_familydied := as.numeric(w1_event_familydied)] |>
  _[, w1_event_arguewithparents := as.numeric(w1_event_arguewithparents)] |>
  _[, w1_event_arguebetweenparents := as.numeric(w1_event_arguebetweenparents)] |>
  _[, w1_event_movehouse := as.numeric(w1_event_movehouse)] |>
  _[, w1_event_parentsseparated := as.numeric(w1_event_parentsseparated)]

merged_pca_poly <- merged_pca |>
  _[, .(w1_event_parentlostjob, w1_event_nofood, w1_event_nobills, w1_event_seriousill, w1_event_familyseriousill, w1_event_familydied, w1_event_arguewithparents, w1_event_arguebetweenparents, w1_event_movehouse, w1_event_parentsseparated)]

suppressWarnings(event_pcor_pca <- principal(merged_pca_poly,
                  cor = "mixed",
                  weight = merged_pca$scaledweight))
merged_pca$w1_event_index_poly <- predict(event_pcor_pca, data = merged_pca_poly)

suppressWarnings(merged[, w1_event_index_poly := NULL])
merged <- merge(merged, merged_pca[, .(W2_INDserial_yp, w1_event_index_poly)],
                by = 'W2_INDserial_yp', all.x = TRUE, no.dups = FALSE
                )
rm(merged_pca, merged_pca_poly)

```

```{r}
#| label: data-standardise-events-index

standardise_event_index_poly <- function(survey_data) {
  survey_data$variables$event_index_poly <- survey_data$variables$event_index_poly /
                               sqrt(svyvar(~event_index_poly, survey_data))
  survey_data$variables$event_index_poly <- survey_data$variables$event_index_poly -
                               svymean(~event_index_poly, survey_data)
  survey_data$variables$w1_event_index_poly <- survey_data$variables$w1_event_index_poly /
                               sqrt(svyvar(~w1_event_index_poly, survey_data))
  survey_data$variables$w1_event_index_poly <- survey_data$variables$w1_event_index_poly -
                               svymean(~w1_event_index_poly, survey_data)

  return(survey_data)
}
```

:::{#fig-events-index}

```{r}
#| label: data-events-index

mean <- round(svymean(~event_index_poly, merged |> restrict_sample() |> create_survey_design() |> standardise_event_index_poly(), na.rm=TRUE), digits = 2)
sd <- round(sqrt(svyvar(~event_index_poly, merged |> restrict_sample() |> create_survey_design() |> standardise_event_index_poly(), na.rm=TRUE)), digits = 2)

quantilesdf <- merged |> restrict_sample() |> create_survey_design() |> standardise_event_index_poly()
quantiles <- pctile(quantilesdf$variables$event_index_poly, probs = c(1/3, 2/3), wt = quantilesdf$variables$scaledweight, na.rm=TRUE)
rm(quantilesdf)

merged |> restrict_sample() |> create_survey_design() |> standardise_event_index_poly() |>
ggsurvey(aes(event_index_poly)) +
  geom_density() +
  geom_area(
    aes(x = stage(event_index_poly, after_stat = oob_censor(x, c(NA, quantiles[1]))), fill="Low"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(event_index_poly, after_stat = oob_censor(x, c(quantiles[1], quantiles[2]))), fill="Medium"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(event_index_poly, after_stat = oob_censor(x, c(quantiles[2], NA))), fill="High"),
    stat = "density"
  ) +
  labs(x="Adverse Life Events Index", y="Proportion", fill = "Adverse Event Groups") +
  annotate(geom = "text", x = 2, y = 0.75,
    label=paste0("Mean = ", mean, "; SD= ", sd))

```

**Notes:** Adverse events index based on polychoric principal component analysis of measured adverse life events. The index is standardised to have mean 0 and standard deviation 1 in the analysis sample. Weighted for survey design and non-response.

Distribution of Adverse Events Index, colour-coded by tertile group

:::

The first principal component explains `{r} round(event_pcor_pca$Vaccounted[2,1], digits=2)*100`% of the variance in the ten adverse life events. We standardise this index to have mean 0 and standard deviation 1 in our analysis sample, plot the distribution in @fig-events-index, and use it to split it into three groups based on the tertiles of the index (accounting for sample weighting). We label these groups as "Low", "Medium" and "High" to reflect the relative impact of adverse events experienced by each of these groups.
```{r}
#| label: data-create-qevents-groups

create_qevent_groups <- function(data) {
  newdata <- data

  newdata$variables$qevent_index_poly <- xtile(data$variables$event_index_poly, n = 3, wt = data$variables$scaledweight)

  var_label(newdata$variables$qevent_index_poly) <- "Adverse Event Tercile Groups"
  val_labels(newdata$variables$qevent_index_poly) <- NULL
  val_label(newdata$variables$qevent_index_poly, 1) <- "Low"
  val_label(newdata$variables$qevent_index_poly, 2) <- "Medium"
  val_label(newdata$variables$qevent_index_poly, 3) <- "High"
  newdata$variables$qevent_index_poly <- to_factor(newdata$variables$qevent_index_poly)

  newdata$variables$w1_qevent_index_poly <- xtile(data$variables$w1_event_index_poly, n = 3, wt = data$variables$scaledweight)

  var_label(newdata$variables$w1_qevent_index_poly) <- "Adverse Event Tercile Groups (Wave 1 only)"
  val_labels(newdata$variables$w1_qevent_index_poly) <- NULL
  val_label(newdata$variables$w1_qevent_index_poly, 1) <- "Low"
  val_label(newdata$variables$w1_qevent_index_poly, 2) <- "Medium"
  val_label(newdata$variables$w1_qevent_index_poly, 3) <- "High"
  newdata$variables$w1_qevent_index_poly <- to_factor(newdata$variables$w1_qevent_index_poly)

  return(newdata)
}

```

```{r}
#| label: tbl-events
#| tbl-cap: Adverse life events experiences by Adverse Events Index group

tbl_events_index_events <- merged |> restrict_sample() |> create_survey_design() |> create_qevent_groups() |>
          tbl_svysummary(
            by = qevent_index_poly, # split table by group
            statistic = list(gtsummary::all_categorical() ~ "{p}", gtsummary::all_continuous() ~ "{mean}"),
            percent = "column",
            include = c('event_parentlostjob', 'event_nofood', 'event_nobills', 'event_seriousill', 'event_familyseriousill', 'event_familydied', 'event_arguewithparents', 'event_arguebetweenparents', 'event_movehouse', 'event_parentsseparated',
            'event_count_group',
            'event_count'),
            label = list('event_count_group' ~ "Number of events (grouped)", 'event_count' ~ "Number of events (mean)"),
            missing = "no") |>
  add_overall(last = TRUE) |>
  modify_header(label = "**Variable**, N = {N_unweighted}", all_stat_cols() ~ "**{level}** ({round(p, digits=2)*100}%)") |> # update the column header
  bold_labels()
tbl_events_index_events |>
  as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and account for the complex survey design."))
```

We report the prevalence of each of the ten adverse life events by the three groups of the index in @tbl-events. This demonstrates that these groups are capturing different levels of exposure to adverse life events, while reflecting the differential prevalence of the ten events. Students in the "Low" group are not likely to have experienced any of the events, with the exception of a close family member dying. In contrast, students in the "High" group are likely to have experienced multiple events.
```{r}
#| label: tbl-events-lifesat
#| tbl-cap: Mean subjective wellbeing score by experience of adverse life events reported since onset of pandemic

tbl_events_lifesat <- merged |> restrict_sample() |> create_survey_design() |> create_qevent_groups() |>
  tbl_svysummary(
    by = qevent_index_poly, # split table by group
    missing = "no", # don't list missing data separately
    include = c('W1_ZLifeSat', 'W2_ZLifeSat', 'ZLifeSatDiff'),
    label = list(W1_ZLifeSat ~ "Wave 1", W2_ZLifeSat ~ "Wave 2", ZLifeSatDiff ~ "Difference"),
    statistic = list(gtsummary::all_continuous() ~ "{mean}", gtsummary::all_categorical() ~ "{n} ({p}%)")
  ) |>
#  add_n() |> # add column with total number of non-missing observations
  add_overall(last = TRUE) |>
  add_p() |> # test for a difference between groups
  modify_header(label = "**Variable**, N = {N_unweighted}", all_stat_cols() ~ "**{level}** ({round(p, digits=2)*100}%)") |> # update the column header
  bold_labels()
tbl_events_lifesat |>
  as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and account for the complex survey design."))
```

We find that mean wellbeing score differs by experience of such events (@tbl-events-lifesat). Wellbeing is lower for those who experience a higher prevalence of adverse life events, ranging from `{r} inline_text(tbl_events_lifesat, variable = W1_ZLifeSat, column = "stat_1")` for those with low experience of adverse life events to `{r} inline_text(tbl_events_lifesat, variable = W1_ZLifeSat, column = "stat_3")` for those with a high level of experience. This pattern is consistent across Waves 1 and 2, but there is no significant evidence of difference in the patterns of change over time. 

However, as with all our descriptive analyses, we are mindful that there is the potential for a lot of differences in socioeconomic and demographic characteristics between those who experience adverse life events and those who do not. For this reason, as well as for our other analyses, we use regression models to help us unpack these findings further.

## Analytical approach {#sec-regression}

To extend our descriptive analyses and, hence, provide a more nuanced understanding of the factors associated with young people's wellbeing since the pandemic, we use regression modelling. All analyses are carried out using the statistical software R [@R2024], with the survey package [@R-survey] used to account for the complex survey design of the data, including design and non-response weights, along with adjustments to statistical inference due to stratification and clustering of the sample.

We break this section into three sub-sections, aligned with the research aims in this paper: demographic differences in subjective wellbeing; the importance of perceived ongoing impact of the pandemic; and the importance of adverse life events during the pandemic.

### Demographic differences in subjective wellbeing {#sec-regression-lifesat}

First, we use linear regression models to explore differences in young people's wellbeing. These models all take the form

$LifeSat_{it} = \beta_0 + \beta'_{1} SES_{i} + \beta'_{2} Gender_{i} + \beta'_{3} Ethnicity_{i} + X'_{i} + \varepsilon_{it}$

where $LifeSat$ is wellbeing score for person $i$ at time $t$, $SES$ is a vector of binary variables for quintile groups of SES (leaving the highest SES quintile group as the omitted category), $Gender$ is a vector of binary variables for gender (Female and Non-binary+, leaving Male as the omitted category), $Ethnicity$ is a vector of binary variables for ethnicity (Asian, Black, Mixed, Other, leaving the largest category, White, omitted as the baseline), $X$ is a vector of covariates varying between model specifications discussed below, and $\varepsilon$ is the error term. We estimate these models separately for each time point of the survey, and then again for Wave 2 with an additional covariate of Wave 1 wellbeing score to provide estimates of difference adjusting for Wave 1 wellbeing as a baseline.

:::{#tbl-regression-lifesat-lookup}

| Variable       | L1       | L2       | L3       | L4       | L5                                 | L6       | L7                                      | L8       |
|----------------|----------|----------|----------|----------|------------------------------------|----------|-----------------------------------------|----------|
| Gender         | Included |          |          | Included | Interacted w/ Ethnicity and SES    | Included | Interacted w/ Social Support            | Included |
| Ethnicity      |          | Included |          | Included | Interacted w/ Gender and SES       | Included | Interacted w/ Social Support            | Included |
| SES            |          |          | Included | Included | Interacted w/ Gender and Ethnicity | Included | Interacted w/ Social Support            | Included |
| Social Support |          |          |          |          |                                    | Included | Interacted w/ Gender, Ethnicity and SES | Included |
| Adverse Events |          |          |          |          |                                    |          |                                         | Included |

**Notes**: L1-L7 refer to the model number. SES = Socioeconomic status.

Model specifications for regression analysis of subjective wellbeing.

:::

We estimate a series of models summarised in @tbl-regression-lifesat-lookup, beginning with simple models including gender (L1), ethnicity (L2), and SES (L3) entered separately, replicating the descriptive analyses and unconditional estimates of differences in wellbeing reported in @tbl-demographics-lifesat. Next, we include all three demographic characteristics at the same time in L4, along with the addition of a month of interview variable to allow for potential confounding due to the timing of the survey. This model, hence, provides estimates of demographic differences in wellbeing, conditional on the other demographic characteristics included. 

We then explore potential intersectional differences in wellbeing between demographics in L5 [@CodiroliMcmaster2019] by including a full set of interaction terms between our SES, gender and ethnicity variables.

Next, motivated by understanding the potential importance of social support in explaining these differences, we add social provisions score in L6. Differences between the coefficients on our demographic characteristics between L4 and L6 will, hence, provide information on the extent to which differences in social support explain the unadjusted differences.

L7 explores whether the importance of social support varies by demographic characteristics. As with L5, we include interaction terms, this time between our demographic characteristics and the two social support measures to allow for the moderation of the relationship between these measures and wellbeing.

Finally, L8 explores the importance of adverse life events in explaining demographic differences in wellbeing. We include the adverse life events index in this model, along with the demographic characteristics and social support measures. Comparing coefficients on the demographic characteristics in L6 and L8 hence provides information on the extent to which differences in adverse life events may explain demographic differences in wellbeing. We do not run a model exploring the interaction between adverse life events and demographic characteristics at this point as we will explore this in a subsequent section.

```{r}
#| label: regression-lifesat
regressiondata <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_ses_poly() |> standardise_psych() |> standardise_event_index_poly() |> create_qses_groups() |> create_qevent_groups()

ls_w1_m1 <- svyglm(W1_ZLifeSat ~ gender + 
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w1_m2 <- svyglm(W1_ZLifeSat ~ ethnic + 
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w1_m3 <- svyglm(W1_ZLifeSat ~ qses_poly + 
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w1_m4 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic + 
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w1_m5 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                gender:qses_poly + ethnic:qses_poly + ethnic:gender + 
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w1_m6 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + 
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w1_m7 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + sps_total:gender + sps_total:ethnic + sps_total: qses_poly + 
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w1_m8 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + event_index_poly +
                w1_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m1 <- svyglm(W1_ZLifeSat ~ gender + 
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m2 <- svyglm(W1_ZLifeSat ~ ethnic + 
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m3 <- svyglm(W1_ZLifeSat ~ qses_poly + 
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m4 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic + 
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m5 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                gender:qses_poly + ethnic:qses_poly + ethnic:gender + 
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m6 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + 
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m7 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + sps_total:gender + sps_total:ethnic + sps_total: qses_poly + 
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_w2_m8 <- svyglm(W1_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + event_index_poly +
                w2_survey_month,
                regressiondata, family=gaussian()
                )

ls_d_m1 <- svyglm(W2_ZLifeSat ~ gender + 
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

ls_d_m2 <- svyglm(W2_ZLifeSat ~ ethnic + 
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

ls_d_m3 <- svyglm(W2_ZLifeSat ~ qses_poly + 
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

ls_d_m4 <- svyglm(W2_ZLifeSat ~ qses_poly + gender + ethnic + 
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

ls_d_m5 <- svyglm(W2_ZLifeSat ~ qses_poly + gender + ethnic +
                gender:qses_poly + ethnic:qses_poly + ethnic:gender +
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

ls_d_m6 <- svyglm(W2_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total +
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

ls_d_m7 <- svyglm(W2_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + sps_total:gender + sps_total:ethnic + sps_total: qses_poly +
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

ls_d_m8 <- svyglm(W2_ZLifeSat ~ qses_poly + gender + ethnic +
                sps_total + event_index_poly +
                w2_survey_month + W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

rm(regressiondata)
```

### Importance of perceived impact of the pandemic on wellbeing {#sec-regression-percept}
In this section, we again use linear regression models to estimate differences in subjective wellbeing. However, this time we focus on differences explained by young people's perceptions of the ongoing impact of the pandemic on their life. The models take the form:

$LifeSat_{it} = \beta_0 + \beta'_{1} PandemicImpactPercep_{i} + X'_{i} + \varepsilon_{it}$

where $LifeSat$ is wellbeing score for person $i$ at time $t$, $PandemicImpactPercep$ is a binary variable indicating that person $i$ reports that the pandemic is continuing to have a negative impact on their life, $X$ is a vector of other covariates, which varies between model specifications (discussed further below), and $\varepsilon$ is the error term. We estimate these models separately for each time point of the survey, and then again for Wave 2 with an additional covariate of Wave 1 wellbeing to provide estimates of difference adjusting for Wave 1 wellbeing as a baseline.

:::{#tbl-regression-percept-lookup}

| Variable         | P1       | P2       | P3       | P4                                                   |
|------------------|----------|----------|----------|------------------------------------------------------|
| Perceived Impact | Included | Included | Included | Interacted with Demographics, SES and Social Support |
| Demographics     |          | Included | Included | Interacted with Perceived Impact                     |
| SES              |          | Included | Included | Interacted with Perceived Impact                     |
| Social Support   |          |          | Included | Interacted with Perceived Impact                     |

**Notes**: P1-P4 refer to the model number. SES = Socioeconomic status.

Model specifications for regression analysis of subjective wellbeing.

:::

The series of models is summarised in @tbl-regression-percept-lookup, with the first model (P1) replicating our descriptive findings by including no additional covariates, meaning the coefficient on $PandemicImpactPercep$ reports the difference between those who report that the pandemic had a negative impact on their mental wellbeing and the rest of the cohort.

Next, in P2, we include demographic (gender, ethnicity), methodological (month of survey) and socioeconomic status (parental education, housing tenure, and area-level deprivation) covariates. We do this, rather than including combined SES quintile groups, now that we are not trying to interpret an overall SES association but rather adjust for these as flexibly as possible. Our focal coefficient from this model thus estimates the difference in wellbeing associated with a continuing negative perception of the pandemic on wellbeing among those with similar socio-demographic characteristics.

We then explore the extent to which differences in wellbeing associated with a negative perceived impact of the pandemic are explained by social support. In P3, we add social provisions score and compare the estimate on our focal variable coefficient between models P2 and P3.

Finally, in P4, we explore evidence of variation in the difference in wellbeing associated with a negative perceived impact of the pandemic by demographic and social support measures. We do this by including a full set of interaction terms between our focal variable and the socio-demographic and social support variables in P3. Examining the coefficients on these interaction terms will provide evidence on this point.

```{r}
#| label: regression-percept
regressiondata <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_ses_poly() |> standardise_psych() |> standardise_event_index_poly() |> create_qses_groups() |> create_qevent_groups()


lp_w1_m1 <- svyglm(W1_ZLifeSat ~ covid_impact_mh_neg +
               w1_survey_month,
               regressiondata, family=gaussian()
               )

lp_w1_m2 <- svyglm(W1_ZLifeSat ~ covid_impact_mh_neg + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month,
                regressiondata, family=gaussian()
                )
lp_w1_m3 <- svyglm(W1_ZLifeSat ~ covid_impact_mh_neg +
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month +
                sps_total,
                regressiondata, family=gaussian()
                )

lp_w1_m4 <- svyglm(W1_ZLifeSat ~ covid_impact_mh_neg +
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month +
                sps_total +
                gender:covid_impact_mh_neg + ethnic:covid_impact_mh_neg + parentEd:covid_impact_mh_neg + ownHouse:covid_impact_mh_neg + qidaci:covid_impact_mh_neg + sps_total:covid_impact_mh_neg,
                regressiondata, family=gaussian()
                )

lp_w2_m1 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg +
               w2_survey_month,
               regressiondata, family=gaussian()
               )

lp_w2_m2 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + 
                gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month,
                regressiondata, family=gaussian()
                )

lp_w2_m3 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + 
                gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month + 
                sps_total,
                regressiondata, family=gaussian()
                )

lp_w2_m4 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + 
                gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month + 
                sps_total +
                gender:covid_impact_mh_neg + ethnic: covid_impact_mh_neg + parentEd:covid_impact_mh_neg + ownHouse:covid_impact_mh_neg + qidaci:covid_impact_mh_neg + sps_total:covid_impact_mh_neg,
                regressiondata, family=gaussian()
                )

lp_d_m1 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg +
                w1_survey_month + w2_survey_month +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

lp_d_m2 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

lp_d_m3 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month + 
                sps_total +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

lp_d_m4 <- svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month + 
                sps_total +
                gender:covid_impact_mh_neg + ethnic:covid_impact_mh_neg + parentEd:covid_impact_mh_neg + ownHouse:covid_impact_mh_neg + qidaci:covid_impact_mh_neg + sps_total:covid_impact_mh_neg +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

rm(regressiondata)
```

### Importance of adverse life events during the pandemic {#sec-regression-lifeevents}

For our final aim, we explore the importance of adverse life events during the pandemic in explaining young people's wellbeing post-pandemic.

To do so, we use linear regression models to explore the extent to which differences in self-reported wellbeing depend on the adverse life experiences they faced, including conditional on their perception of the impact of the pandemic on their wellbeing. The models used for this purpose take the form:

$LifeSat_{it} = \beta_0 + \beta'_{1} TAdverseEventIndex_{i} + X'_{i} + \varepsilon_{it}$

where $LifeSat$ is the wellbeing score for person $i$ at time $t$, $TAdverseEventIndex$ is a vector of binary variables indicating person $i$'s location in the distribution of the adverse life event index (high and medium, leaving low as a baseline), $X$ is a vector of other covariates, which varies between model specifications (discussed further below), and $\varepsilon$ is the error term. We estimate these models separately for each time point of the survey, and then again for Wave 2 with an additional covariate of Wave 1 wellbeing to provide estimates of difference adjusting for Wave 1 wellbeing as a baseline. Where we are modelling wellbeing measured at Wave 1, a variant of our events index is used that is based on Wave 1 event reports only.

:::{#tbl-regression-lifeevents-lookup}

| Variable         | E1       | E2       | E3       | E4       | E5                                                   |
|------------------|----------|----------|----------|----------|------------------------------------------------------|
| Adverse Events   | Included | Included | Included | Included | Interacted with Demographics, SES, Social Support and Perceived Impact |
| Demographics     |          | Included | Included | Included | Interacted with Adverse Events                        |
| SES              |          | Included | Included | Included | Interacted with Adverse Events                        |
| Social Support   |          |          | Included | Included | Interacted with Adverse Events                        |
| Perceived Impact |          |          |          | Included | Interacted with Adverse Events                        |  

**Notes**: E1-E5 refer to the model number. SES = Socioeconomic status.

Model specifications for regression analysis of subjective wellbeing by life events.

:::

Our models are summarised in @tbl-regression-lifeevents-lookup, with the first model (E1) again replicating our descriptive findings by including only the tercile groups of the adverse life events index, meaning the coefficients on each level of $TAdverseEventIndex$ report the difference between those who experience medium and high levels of adverse events, as applicable, compared to the low adverse life events group. In preliminary work to inform our approach, we explored alternative ways of including information on adverse life events in our modelling, including using the index as a continuous variable and including a set of binary variables for the individual adverse life events, as listed in @sec-data. We found that including tercile groups provided the most interpretable results without substantively affecting model fit.

Next, in E2, we add in demographic characteristics (gender, ethnicity) and socioeconomic status indicators (parental education, housing tenure, and area-level deprivation). We also include month of survey at this point. Our coefficient estimates associated with adverse life events from this model thus provides an estimate of difference in wellbeing associated with greater experiences of adverse life events during the pandemic among those with similar socio-demographic characteristics, as well as the extent to which differential distribution of such life events across socio-demographic groups explains differences in reported wellbeing.

We then explore the extent to which differences in wellbeing associated with greater experience of adverse life events during the pandemic are explained by the social support available to young people. In E3, we add covariates for our social provisions scale scores and compare the estimate on our focal variable between models E2 and E3. It may be noted that this is very similar to model L6 from the earlier section but here adverse life events are our focus and, hence, are entered using the tercile groups to aide interpretation.

Next, we include the covariate for perceived ongoing impact of the pandemic that was the focal variable of the previous section. As we hypothesise that at least some of the formation of ongoing perceptions of negative impact from the pandemic, this model (E4) is likely not a reliable guide to the association between adverse events and wellbeing since including the perception variable is over-controlling. However, the model is useful as a point of comparison with P3 in demonstrating the extent to which the difference in wellbeing associated with a negative perception of the ongoing impact of the pandemic on wellbeing is explained by having experienced adverse life events.

Finally, analogously to previous sections, we include interactions of our focal variables (experience of adverse life events) with our socio-demographic and social support measures in model E5. This allows us to see if there is evidence of variation in the importance of having experienced adverse life events for post-pandemic wellbeing between different groups of young people.

```{r}
#| label: regression-lifeevents-lifesat
regressiondata <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_ses_poly() |> standardise_psych() |> standardise_event_index_poly() |> create_qses_groups() |> create_qevent_groups()

le_w1_m1 <- svyglm(W1_ZLifeSat ~ qevent_index_poly + w1_survey_month,
               regressiondata, family=gaussian()
               )

le_w1_m2 <- svyglm(W1_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month,
                regressiondata, family=gaussian()
                )
le_w1_m3 <- svyglm(W1_ZLifeSat ~ qevent_index_poly +
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month +
                sps_total,
                regressiondata, family=gaussian()
                )

le_w1_m4 <- svyglm(W1_ZLifeSat ~ qevent_index_poly +
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month +
                sps_total +
                covid_impact_mh_neg,
                regressiondata, family=gaussian()
                )

le_w1_m5 <- svyglm(W1_ZLifeSat ~ qevent_index_poly +
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month +
                sps_total +
                covid_impact_mh_neg +
                gender:qevent_index_poly + ethnic: covid_impact_mh_neg + parentEd:qevent_index_poly + ownHouse:qevent_index_poly + qidaci:qevent_index_poly + 
                sps_total:qevent_index_poly,
                regressiondata, family=gaussian()
                )

le_w2_m1 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + w2_survey_month,
               regressiondata, family=gaussian()
               )

le_w2_m2 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month,
                regressiondata, family=gaussian()
                )

le_w2_m3 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month + 
                sps_total,
                regressiondata, family=gaussian()
                )

le_w2_m4 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month + 
                sps_total +
                covid_impact_mh_neg,
                regressiondata, family=gaussian()
                )

le_w2_m5 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month + 
                sps_total +
                covid_impact_mh_neg +
                gender:qevent_index_poly + ethnic:covid_impact_mh_neg + parentEd:qevent_index_poly + ownHouse:qevent_index_poly + qidaci:qevent_index_poly + sps_total:qevent_index_poly,
                regressiondata, family=gaussian()
                )

le_d_m1 <- svyglm(W2_ZLifeSat ~ qevent_index_poly +
                w1_survey_month + w2_survey_month +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

le_d_m2 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

le_d_m3 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month + 
                sps_total +
                covid_impact_mh_neg +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

le_d_m4 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month + 
                sps_total +
                covid_impact_mh_neg +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

le_d_m5 <- svyglm(W2_ZLifeSat ~ qevent_index_poly + 
                gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month + 
                sps_total +
                covid_impact_mh_neg +
                gender:qevent_index_poly + ethnic: covid_impact_mh_neg + parentEd:qevent_index_poly + ownHouse:qevent_index_poly + qidaci:qevent_index_poly + sps_total:qevent_index_poly +
                W1_ZLifeSat,
                regressiondata, family=gaussian()
                )

rm(regressiondata)
```

## Results {#sec-results}

In this section, we report the results of the regression models outlined in the previous section, beginning with demographic differences in wellbeing [@sec-results-lifesat], then the importance of perceived ongoing impact of the pandemic [@sec-results-percep] and, finally, the importance of adverse life events during the pandemic [@sec-results-events]. We primarily report our results graphically [@R-ggstats], focussing attention on the estimates pertinent to addressing our research aims and allowing for easy comparison across models, supplemented with illustration of interactions between characteristics [@marginaleffects2024], where relevant. We provide full regression tables of the results for each model, which are included in @sec-appendix-regression for reference.

### Demographic differences in subjective wellbeing {#sec-results-lifesat}

First, we explore overall differences in wellbeing, through the series of models summarised in @tbl-regression-lifesat-lookup. The core results are plotted in @fig-results-lifesat-gender for gender, @fig-results-lifesat-ethnic for ethnicity, and @fig-results-lifesat-ses for SES. In each case, results are presented for Wave 1, Wave 2, and Wave 2 adjusted for Wave 1, with the discussion starting out with Wave 1 in each case, before focussing on any notable differences in the pattern for Wave 2, or Wave 2 adjusted for Wave 1. Full tables of results for these models are reported in @sec-appendix-regression, specifically @tbl-results-lifesat-w1 for Wave 1, @tbl-results-lifesat-w2 for Wave 2, and @tbl-results-lifesat-diff for Wave 2 adjusted for Wave 1.

```{r}
#| label: results-lifesat-w1

tblest1 <- tbl_regression(ls_w1_m1, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(ls_w1_m2, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(ls_w1_m3, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(ls_w1_m4, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest5 <- tbl_regression(ls_w1_m5, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest6 <- tbl_regression(ls_w1_m6, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest7 <- tbl_regression(ls_w1_m7, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest8 <- tbl_regression(ls_w1_m8, intercept = TRUE,
                          label = list(
                            event_index_poly ~ "Adverse Event Index"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_lifesat_w1 <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4, tblest5, tblest6, tblest7, tblest8),
          tab_spanner = c("L1", "L2", "L3", "L4", "L5", "L6", "L7", "L8")) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

```{r}
#| label: results-lifesat-w2

tblest1 <- tbl_regression(ls_w2_m1, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(ls_w2_m2, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(ls_w2_m3, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(ls_w2_m4, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest5 <- tbl_regression(ls_w2_m5, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest6 <- tbl_regression(ls_w2_m6, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest7 <- tbl_regression(ls_w2_m7, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest8 <- tbl_regression(ls_w2_m8, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey",
                            event_index_poly ~ "Adverse Event Index"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_lifesat_w2 <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4, tblest5, tblest6, tblest7, tblest8),
          tab_spanner = c("L1", "L2", "L3", "L4", "L5", "L6", "L7", "L8")) |>
          modify_table_body(~.x |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

```{r}
#| label: results-lifesat-diff

tblest1 <- tbl_regression(ls_d_m1, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(ls_d_m2, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(ls_d_m3, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(ls_d_m4, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest5 <- tbl_regression(ls_d_m5, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest6 <- tbl_regression(ls_d_m6, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest7 <- tbl_regression(ls_d_m7, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest8 <- tbl_regression(ls_d_m8, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey",
                            event_index_poly ~ "Adverse Event Index"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_lifesat_d <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4, tblest5, tblest6, tblest7, tblest8),
          tab_spanner = c("L1", "L2", "L3", "L4", "L5", "L6", "L7", "L8")) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

:::{#fig-results-lifesat-gender}
```{r}
#| label: results-lifesat-gender
#| fig-subcap:
#|  - "Wave 1"
#|  - "Wave 2"
#|  - "Wave 2 adjusted for Wave 1"
#| layout-nrow: 3

svyestimations <- list("L1" = ls_w1_m1,
                       "L4" = ls_w1_m4,
                       "L6" = ls_w1_m6,
                       "L8" = ls_w1_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("gender"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")

svyestimations <- list("L1" = ls_w2_m1,
                       "L4" = ls_w2_m4,
                       "L6" = ls_w2_m6,
                       "L8" = ls_w2_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("gender"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")

svyestimations <- list("L1" = ls_d_m1,
                       "L4" = ls_d_m4,
                       "L6" = ls_d_m6,
                       "L8" = ls_d_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("gender"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")
```

**Notes:** Reporting coefficients from underlying regression models reported in @tbl-results-lifesat-w1, @tbl-results-lifesat-w2, and @tbl-results-lifesat-diff.

Differences in wellbeing by gender

:::

In the case of gender (@fig-results-lifesat-gender), we replicate the descriptive findings (@tbl-demographics-lifesat) in model L1 (except for the inclusion of controls for month of interview), finding that girls' wellbeing is `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = gender, level = "Female", column = "estimate_1")))` points lower than for boys, and a larger reduction for those grouped as non-binary+ where the reduction is `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = gender, level = "Non-Binary+", column = "estimate_1")))` points compared to boys. There is essentially no change when we adjust for ethnicity and SES in model L4, with the differences remaining `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = gender, level = "Female", column = "estimate_4")))` points for girls and `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = gender, level = "Non-Binary+", column = "estimate_4")))` points for non-binary+ young people.

However, some of the difference in levels of wellbeing for non-binary+ young people appears to be explained by variation in social support. When we include the social provisions scale in model L6, the difference in wellbeing reduces to `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = gender, level = "Non-Binary+", column = "estimate_6")))` points for those identifying as non-binary+ compared to boys. This makes a similar difference for non-binary+ young people's wellbeing at Wave 2, but no difference for girls at any wave, nor for non-binary+ youth when considering Wave 2 wellbeing after adjusting for their wellbeing at Wave 1.

A small part of the remaining difference in wellbeing appears to be explained by experiences of adverse life events, reducing to `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = gender, level = "Non-Binary+", column = "estimate_8")))` for non-binary+ young people and to `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = gender, level = "Female", column = "estimate_8")))` for girls, although the difference between models L6 and L8 is not statistically significant for the non-binary+ group, nor quite statistically significant at the 5% level for girls.

We do not find consistent differences in wellbeing by ethnicity or gender after adjusting for covariates; reporting of these results may be found in @sec-appendix-supplementary-results.

### Perceived continuing impact of the pandemic on wellbeing {#sec-results-percep}

Next, we discuss differences in wellbeing by perceived continuing impact of the pandemic using the models summarised in @tbl-regression-percept-lookup. The core results are plotted in @fig-results-percep. Full tables of results for these models are reported in @sec-appendix-regression, @tbl-results-percep-w1 (Wave 1), @tbl-results-percep-w2 (Wave 2) and @tbl-results-percep-diff (Wave 2 adjusting for Wave 1).

```{r}
#| label: results-percep-w1

tblest1 <- tbl_regression(lp_w1_m1, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(lp_w1_m2, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(lp_w1_m3, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(lp_w1_m4, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_percep_w1 <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4),
          tab_spanner = c("P1", "P2", "P3", "P4")) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

```{r}
#| label: results-percep-w2

tblest1 <- tbl_regression(lp_w2_m1, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(lp_w2_m2, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(lp_w2_m3, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(lp_w2_m4, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_percep_w2 <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4),
          tab_spanner = c("P1", "P2", "P3", "P4")) |>
          modify_table_body(~.x |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

```{r}
#| label: results-percep-diff

tblest1 <- tbl_regression(lp_d_m1, intercept = TRUE,
                          label = list(
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(lp_d_m2, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(lp_d_m3, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(lp_d_m4, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_percep_d <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4),
          tab_spanner = c("P1", "P2", "P3", "P4")) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

:::{#fig-results-percep}
```{r}
#| label: results-percep

w1 <- ggcoef_compare(list("P1" = lp_w1_m1, "P2" = lp_w1_m2, "P3" = lp_w1_m3),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(covid_impact_mh_neg),
               variable_labels = c(covid_impact_mh_neg = "Wave 1"),
               facet_labeller = label_wrap_gen(20),
               return_data = TRUE
               )
w2 <- ggcoef_compare(list("P1" = lp_w2_m1, "P2" = lp_w2_m2, "P3" = lp_w2_m3),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(covid_impact_mh_neg),
               variable_labels = c(covid_impact_mh_neg = "Wave 2"),
               facet_labeller = label_wrap_gen(20),
               return_data = TRUE
               )
d <- ggcoef_compare(list("P1" = lp_d_m1, "P2" = lp_d_m2, "P3" = lp_d_m3),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(covid_impact_mh_neg),
               variable_labels = c(covid_impact_mh_neg = "Wave 2 adjusted for Wave 1"),
               facet_labeller = label_wrap_gen(20),
               return_data = TRUE
               )
ggcoef_plot(rbind(w1, w2, d),
  colour = "model", 
  errorbar_coloured = TRUE,
  dodged = TRUE) +
  labs(x = "Differences in wellbeing")
```

**Notes:** Reporting coefficients from underlying regression models reported in @tbl-results-percep-w1, @tbl-results-percep-w2, and @tbl-results-percep-diff.

Differences in wellbeing by perceived continuing impact of pandemic on wellbeing

:::

Results from unconditional model P1 indicate that young people who perceive a negative continuing impact of the pandemic on their wellbeing report `{r} abs(as.numeric(inline_text(results_percep_w1, variable = covid_impact_mh_neg, level = "Yes", column = "estimate_1")))` points lower wellbeing score than those who do not perceive such an impact. Perhaps surprisingly, given the greater time that has elapsed since the pandemic, this difference is larger at Wave 2, with a `{r} abs(as.numeric(inline_text(results_percep_w2, variable = covid_impact_mh_neg, level = "Yes", column = "estimate_1")))` point difference between these two groups. However, we should recall that the report of a negative continuing impact of the pandemic is collected at Wave 2, so may reflect this being more contemporary with the report.

A fairly small part of the difference in wellbeing score is explained by inclusion of demographic characteristics (in P2) and social support (in P3). The differences are reduced to `{r} abs(as.numeric(inline_text(results_percep_w1, variable = covid_impact_mh_neg, level = "Yes", column = "estimate_3")))` points and `{r} abs(as.numeric(inline_text(results_percep_w2, variable = covid_impact_mh_neg, level = "Yes", column = "estimate_3")))` points at Wave 1 and Wave 2, respectively, once all of these covariates have been included. This highlights a significant unexplained component of wellbeing unexplained by young people's observable characteristics and social support — although we will return to whether more of this difference can be explained by adverse life events during the pandemic in the next section.

The unconditional difference in wellbeing by perceived continuing impact of the pandemic on wellbeing at Wave 2 is lower in models where we have adjusted for Wave 1 wellbeing (`{r} abs(as.numeric(inline_text(results_percep_d, variable = covid_impact_mh_neg, level = "Yes", column = "estimate_1")))` points). However, demographic and social support controls make essentially no difference for this outcome, with the difference remaining `{r} abs(as.numeric(inline_text(results_percep_d, variable = covid_impact_mh_neg, level = "Yes", column = "estimate_3")))` points once these have been included, with a very similar magnitude to that seen in the fully adjusted model for Wave 1.

We do not find evidence that social support mediates differences in wellbeing by perceived impact of the pandemic (see @sec-appendix-sec-appendix-supplementary-results).

### Adverse life events {#sec-results-events}

Next, we turn to the importance of adverse life events for young people's wellbeing. This is explored through the series of models summarised in @tbl-regression-lifeevents-lookup; full results are reported in @tbl-results-events-w1, @tbl-results-events-w2 and @tbl-results-events-diff in @sec-appendix-regression. The core results are plotted in @fig-results-events, demonstrating the association unconditionally (E1), adjusting for demographic measures (E2), and adjusting also for social support (E3).

```{r}
#| label: results-events-w1

tblest1 <- tbl_regression(le_w1_m1, intercept = TRUE) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(le_w1_m2, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(le_w1_m3, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(le_w1_m4, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest5 <- tbl_regression(le_w1_m5, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_events_w1 <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4, tblest5),
          tab_spanner = c("E1", "E2", "E3", "E4", "E5")) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

```{r}
#| label: results-events-w2

tblest1 <- tbl_regression(le_w2_m1, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(le_w2_m2, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(le_w2_m3, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(le_w2_m4, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest5 <- tbl_regression(le_w2_m5, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_events_w2 <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4, tblest5),
          tab_spanner = c("E1", "E2", "E3", "E4", "E5")) |>
          modify_table_body(~.x |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

```{r}
#| label: results-events-diff

tblest1 <- tbl_regression(le_d_m1, intercept = TRUE,
                          label = list(
                            w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest2 <- tbl_regression(le_d_m2, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest3 <- tbl_regression(le_d_m3, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest4 <- tbl_regression(le_d_m4, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )
tblest5 <- tbl_regression(le_d_m5, intercept = TRUE,
                          label = list(
                              ownHouse ~ "Housing Tenure",
                              w2_survey_month ~ "W2 Month of Survey"
                          )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs, df.residual),
            label = list(nobs ~ "N", df.residual ~ "Residual DoF")
           )

theme_gtsummary_compact()
results_events_d <- tbl_merge(tbls = list(tblest1, tblest2, tblest3, tblest4, tblest5),
          tab_spanner = c("E1", "E2", "E3", "E4", "E5")) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic"))
reset_gtsummary_theme()
```

:::{#fig-results-events}

```{r}
#| label: results-events
#| fig-subcap:
#|  - "Wave 1"
#|  - "Wave 2"
#|  - "Wave 2 adjusted for Wave 1"
#| layout-nrow: 3

ggcoef_compare(list("E1" = le_w1_m1, "E2" = le_w1_m2, "E3" = le_w1_m3),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(qevent_index_poly),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")
ggcoef_compare(list("E1" = le_w2_m1, "E2" = le_w2_m2, "E3" = le_w2_m3),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(qevent_index_poly),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")
ggcoef_compare(list("E1" = le_d_m1, "E2" = le_d_m2, "E3" = le_d_m3),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(qevent_index_poly),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")
```

**Notes:** Reporting coefficients from underlying regression models reported in @tbl-results-events-w1, @tbl-results-events-w2, and @tbl-results-events-diff.

Differences in wellbeing by experience of adverse life events

:::

Those who have experienced more adverse life events during the pandemic do report substantially lower wellbeing scores, with the unconditional difference between the low and high prevalence groups being `{r} abs(as.numeric(inline_text(results_events_w1, variable = qevent_index_poly, level = "High", column = "estimate_1")))` points at Wave 1 and `{r} abs(as.numeric(inline_text(results_events_w2, variable = qevent_index_poly, level = "High", column = "estimate_1")))` points at Wave 2. A small part of this difference is explained by demographic characteristics (in E2). However, more is explained by social support (in E3), especially in terms of the those who experienced the most adverse life events (i.e., the High tercile group), bringing the gap between low and high prevalence groups to `{r} abs(as.numeric(inline_text(results_events_w1, variable = qevent_index_poly, level = "High", column = "estimate_3")))` points at Wave 1 and `{r} abs(as.numeric(inline_text(results_events_w2, variable = qevent_index_poly, level = "High", column = "estimate_3")))` points at Wave 2.

As has become familiar, the patterns are similar but substantially attenuated when considering differences at Wave 2 that control for differences at Wave 1. Nevertheless, there remains a substantial difference (`{r} abs(as.numeric(inline_text(results_events_d, variable = qevent_index_poly, level = "High", column = "estimate_3")))` points) in wellbeing at Wave 2 by adverse events experienced even after controlling for wellbeing at Wave 1, demographic characteristics and social support.

:::{#fig-results-events-perception}

```{r}
#| label: results-events-perception

w1 <- ggcoef_compare(list("P3" = lp_w1_m3, "E4" = le_w1_m4),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(covid_impact_mh_neg),
               variable_labels = c(covid_impact_mh_neg = "Wave 1"),
               facet_labeller = label_wrap_gen(20),
               return_data = TRUE
               )
w2 <- ggcoef_compare(list("P3" = lp_w2_m3, "E4" = le_w2_m4),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(covid_impact_mh_neg),
               variable_labels = c(covid_impact_mh_neg = "Wave 2"),
               facet_labeller = label_wrap_gen(20),
               return_data = TRUE
               )
d <- ggcoef_compare(list("P3" = lp_d_m3, "E4" = le_d_m4),
               intercept = FALSE,
               add_reference_rows = TRUE,
               include = c(covid_impact_mh_neg),
               variable_labels = c(covid_impact_mh_neg = "Wave 2 adjusted for Wave 1"),
               facet_labeller = label_wrap_gen(20),
               return_data = TRUE
               )
ggcoef_plot(rbind(w1, w2, d),
  colour = "model", 
  errorbar_coloured = TRUE,
  dodged = TRUE) +
  labs(x = "Differences in wellbeing")
            
```

**Notes:** Reporting coefficients from underlying regression models reported in @tbl-results-percep-w1, @tbl-results-percep-w2, and @tbl-results-percep-diff, and @tbl-results-events-w1, @tbl-results-events-w2, and @tbl-results-events-diff.

Differences in wellbeing by perceived ongoing negative impact of the pandemic, with and without controlling for adverse life events

:::

Building on the models reported in @fig-results-events, we also explore whether the association between adverse life events and wellbeing is mediated by the perceived ongoing impact of the pandemic on wellbeing. The core results are plotted in @fig-results-events-perception, which compares our model including the perceived ongoing impact of the pandemic on wellbeing (E4) with the analogous model excluding our events measure from earlier analyses (P3). The results suggest that only a fairly small part of the perceived ongoing impact of the pandemic on wellbeing is explained by the experience of adverse life events during the pandemic.

We also explored whether there was evidence that adverse events matter more for some groups than others, but find little evidence of this. These results are reported in column E5 of @tbl-results-events-w1, @tbl-results-events-w2 and @tbl-results-events-diff in @sec-appendix-regression.

## Discussion {#sec-discussion}

In this paper we have provided new evidence in relation to our three research questions. We:
1. estimate differences in post-pandemic wellbeing among this cohort by demographic characteristics;
2. validate and quantify young people's own perceptions of the impact of the pandemic on their wellbeing and; 
3. consider the role of adverse experiences during the pandemic — and how they may interact with existing predictors of wellbeing — in explaining differences in post-pandemic wellbeing.

### Differences in wellbeing by demographic characteristics

We contribute to evidence on ongoing issues of gender differences in wellbeing, which other evidence demonstrates to have been exacerbated by the pandemic [e.g., @Davillas2021a]. Girls and those who identify as non-binary or in another way report lower wellbeing scores (on a scale from 1-10 around 0.5 for girls; around 1.5 for non-binary+ young people) than boys. This is even after adjusting for other demographic characteristics, self-reported levels of social support, and experience of adverse life events. These are substantial differences that are relevant to the higher rates of mental health challenges for those in these groups. We also note that the residual differences in wellbeing by gender raises the possibility that these are due to variations by gender in the relative importance of different aspects of the social production function itself [@Steverink2020], rather than simply that the inputs of this function differ by gender. 

### Perceived continuing impact of the pandemic on wellbeing

Our analysis makes innovative use of young people's own perceptions of the ongoing impact of the pandemic on their mental wellbeing in order to validate and quantify these reports. The findings of these analyses illustrate the importance of taking such reports seriously: those who indicate an ongoing negative impact in their lives have substantially lower subjective wellbeing scores — more than 1 point on a 1-10 scale — with similar differences across demographic groups. Moreover, these differences are only partially explained by demographic characteristics, social support, or adverse life events experienced during the pandemic, leaving a substantial difference associated with this perception. This demonstrates that such perceptions are informative in their own right, analogously to how educational expectations [@Anders2017b] and aspirations [@Hart2016] can be informative of young people's educational trajectories over and above other factors. As with that literature, our finding should not be taken to mean such perceptions should be considered causal. To relate this to our theoretical framework, it is probable that there are elements of the social production function that underly these young people's perceptions. Nevertheless, we argue that this does not diminish the informational value of young people's perceptions and, hence, the importance of taking them seriously. This implies that, in partial contrast to our point above, there are limits on the extent to which we can target support simply on the basis of demographic characteristcs. Self-identification is likely necessary to identify those who are most in need of support, albeit with risks given that self-reporting behaviour in the context of a survey likely differs from self-reporting for the purposes of intervention.

### Importance of adverse life events

Adverse life events experienced during the pandemic are found to predict lower subjective wellbeing, which is consistent with these undermining aspects of the social production function, such as affection for events such as arguments within the home, or comfort in situations of financial distress [@Chesters2025]. This is consistent with previous findings that adverse life events are associated with lower wellbeing [@McKnight2002]. However, contrary to our expectations, and others' findings [@Ferreira2021, @Kearns2015, @Aksoy2024], while social support predicts higher wellbeing scores [which is consistent with previous findings, e.g., @Hombrados-Mendieta2019], we did not find evidence that it mediates or buffers the impact of adverse life events in the context of our population and its setting. One potential reason for this is that the source of the social support matters: @Lee2016 find that only support support from friends (not family or partners) matters in a study of the stress-buffering role of social support for loneliness and we would expect this to be the source of social support most likely to be cut off by COVID-19 restrictions. More methodologically, with hindsight we note that, while our measures of social support are contemporaneous with our wellbeing measures, they are not contemporaneous with the timing of the adverse events themselves, which may mean they are not providing an accurate depiction of perceived social support during the disruption of the pandemic.

## Conclusions and limitations {#sec-conclusions}

This paper contributes to existing literature on young people's wellbeing in England in the aftermath of the COVID-19 pandemic by exploring levels of wellbeing at two time points since the pandemic and the factors associated with these levels. In particular, we build on existing work showing that the pandemic has had a negative impact on young people's wellbeing [e.g., @Mansfield2022], along with evidence of recovery in wellbeing in the latter phases of the pandemic [@Henseke2022].

This study benefits from a large, representative, longitudinal dataset, with direct reports from both young people and parents to improve the quality of data collected. Nevertheless, in drawing these conclusions, we are mindful of the limitations of this study, most particularly that our data lacks any pre-pandemic baseline measures of wellbeing, which would substantially increase our ability to understand the longer-term dynamics of the changes (or lack thereof) in wellbeing that we have observed. We should also be aware that our data is drawn from a single cohort of young people in England, whose final years in compulsory education were especially disrupted by the impacts of the pandemic, which is important context in any attempt to generalise our findings to other populations.

Our findings indicate continuing challenges of inequalities in young people's wellbeing and, hence, the importance of ongoing targeted support to overcome these. The large differences associated with identifying as non-binary or in another way suggest an especially acute need for support among this group. The practicalities of providing support at scale are now much harder for our specific cohort, since many of them have now left education entirely. Nevertheless, many of the issues discussed will apply similarly to those still working their way through the education system who could be reached through schools and colleges. As well as the negative implications for the life experiences of these young people, ignoring this issue has potential implications for national economic performance [@Deaton2008a], including via increased risk of mental health challenges [@Lombardo2018].

## References {.unnumbered}

:::{#refs}
:::

::: {#appendix-count}

## Appendix: Construction of SES measure {#sec-appendix-ses}

To allow exploration of differences in wellbeing by socioeconomic status (SES) in a simple way, we create a combined index of SES across our measures of parental education, housing tenure and home neighbourhood deprivation. Specifically, given the categorical nature of these variables, we estimate a polychoric correlation matrix of these measures and use principal component analysis [@R-psych] to extract a single component that explains maximum shared variance. Our extracted principal component score explains `{r} round(sespcor$Vaccounted[2,1], digits=2)*100`% of the overall variance of our SES measures. We standardise the measure's distribution to have mean 0 and standard deviation 1 in our analysis sample, plot its distribution in @fig-ses_poly, and use it to split our sample into five quintile groups of equal size (accounting for sample weighting).

::: {#fig-ses_poly}
```{r}
#| label: data-ses_poly

mean <- round(svymean(~ses_poly, merged |> restrict_sample() |> create_survey_design() |> standardise_ses_poly(), na.rm=TRUE), digits = 2)
sd <- round(sqrt(svyvar(~ses_poly, merged |> restrict_sample() |> create_survey_design() |> standardise_ses_poly(), na.rm=TRUE)), digits = 2)

quantilesdf <- merged |> restrict_sample() |> create_survey_design() |> standardise_ses_poly()
quantiles <- pctile(quantilesdf$variables$ses_poly, probs = c(0.2, 0.4, 0.6, 0.8), wt = quantilesdf$variables$scaledweight, na.rm=TRUE)
rm(quantilesdf)

merged |> restrict_sample() |> create_survey_design() |>
  standardise_ses_poly() |>
ggsurvey(aes(ses_poly)) +
  geom_density() +
  geom_area(
    aes(x = stage(ses_poly, after_stat = oob_censor(x, c(NA, quantiles[1]))), fill="Q1 (Low SES)"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses_poly, after_stat = oob_censor(x, c(quantiles[1], quantiles[2]))), fill="Q2"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses_poly, after_stat = oob_censor(x, c(quantiles[2], quantiles[3]))), fill="Q3"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses_poly, after_stat = oob_censor(x, c(quantiles[3], quantiles[4]))), fill="Q4"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses_poly, after_stat = oob_censor(x, c(quantiles[4], NA))), fill="Q5 (High SES)"),
    stat = "density"
  ) +
  labs(x="SES Z-score (polychoric)", y="Proportion", fill = "Quintile Group") +
  annotate(geom = "text", x = -1.5, y = 0.3,
    label=paste0("Mean = ", mean, "; SD= ", sd))
```

**Notes:** SES measure based on polychoric principal component analysis of parental education, housing tenure and IDACI decile group. Density plot weighted for survey design and non-response.

Distribution of SES summary measure, colour-coded by quintile group

:::

We demonstrate that this measure captures the underlying SES measures on which it is based in @tbl-data-descriptives-qses_poly by reporting the average levels of parental education, housing tenure and IDACI quintile group across the five quintile groups of the constructed SES measure.
```{r}
#| label: tbl-data-descriptives-qses_poly
#| tbl-cap: Distribution of underlying socioeconomic characteristics by SES quintile group (SES quintile group based on polychoric principal component analysis of parental education, housing tenure and IDACI decile group)

merged |> restrict_sample() |> create_survey_design() |>
  standardise_ses_poly() |> create_qses_groups() |>
            tbl_svysummary(
              by = qses_poly,
              include = c('parentEd', 'ownHouse', 'qidaci'),
              statistic = list(gtsummary::all_categorical() ~ "{p}", gtsummary::all_continuous() ~ "{mean}"),
              percent = "column",
              missing = "no"
            ) |>
            modify_footnote(all_stat_cols() ~ NA) |>
            as_gt() |> tab_source_note(md("**Notes:** Reporting column percentages within each variable. All estimates are weighted for survey design and non-response."))
```

::: {.landscape}

## Appendix: Full regression tables {#sec-appendix-regression}

### Demographic differences in wellbeing

```{r}
#| label: tbl-results-lifesat-w1
#| tbl-cap: Differences in wellbeing at Wave 1
theme_gtsummary_compact()
results_lifesat_w1 |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-results-lifesat-w2
#| tbl-cap: Differences in wellbeing at Wave 2
theme_gtsummary_compact()
results_lifesat_w2 |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-results-lifesat-diff
#| tbl-cap: Differences in wellbeing at Wave 2 (conditional on Wave 1 wellbeing)
theme_gtsummary_compact()
results_lifesat_d |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

### Perceived continuing impact of the pandemic on wellbeing

```{r}
#| label: tbl-results-percep-w1
#| tbl-cap: Differences in wellbeing at Wave 1 by perceived continuing impact of pandemic on wellbeing
theme_gtsummary_compact()
results_percep_w1 |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-results-percep-w2
#| tbl-cap: Differences in wellbeing at Wave 2 by perceived continuing impact of pandemic on wellbeing
theme_gtsummary_compact()
results_percep_w2 |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-results-percep-diff
#| tbl-cap: Differences in wellbeing at Wave 2 (conditional on Wave 1 wellbeing) by perceived continuing impact of pandemic on wellbeing
theme_gtsummary_compact()
results_percep_d |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

### Adverse life events

```{r}
#| label: tbl-results-events-w1
#| tbl-cap: Differences in wellbeing at Wave 1 by number of life events experienced during pandemic
theme_gtsummary_compact()
results_events_w1 |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-results-events-w2
#| tbl-cap: Differences in wellbeing at Wave 2 by number of life events experienced during pandemic
theme_gtsummary_compact()
results_events_w2 |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-results-events-diff
#| tbl-cap: Differences in wellbeing at Wave 2 (conditional on Wave 1 wellbeing) by number of life events experienced during pandemic
theme_gtsummary_compact()
results_events_d |>
          as_gt() |> tab_source_note(md("**Notes:** All estimates are weighted and inference accounts for the complex survey design."))
reset_gtsummary_theme()
```

:::

## Appendix: Supplementary Results {#sec-appendix-supplementary-results}

### Demographic differences in wellbeing

:::{#fig-results-lifesat-ethnic}
```{r}
#| label: results-lifesat-ethnic
#| fig-subcap:
#|  - "Wave 1"
#|  - "Wave 2"
#|  - "Wave 2 adjusted for Wave 1"
#| layout-nrow: 3

svyestimations <- list("L2" = ls_w1_m2,
                       "L4" = ls_w1_m4,
                       "L6" = ls_w1_m6,
                       "L8" = ls_w1_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("ethnic"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")

svyestimations <- list("L2" = ls_w2_m2,
                       "L4" = ls_w2_m4,
                       "L6" = ls_w2_m6,
                       "L8" = ls_w2_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("ethnic"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")

svyestimations <- list("L2" = ls_d_m2,
                       "L4" = ls_d_m4,
                       "L6" = ls_d_m6,
                       "L8" = ls_d_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("ethnic"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")
```

**Notes:** Reporting coefficients from underlying regression models reported in @tbl-results-lifesat-w1, @tbl-results-lifesat-w2, and @tbl-results-lifesat-diff.

Differences in wellbeing by ethnicity

:::

Across Waves 1 and 2 (panels 1 and 2 of @fig-results-lifesat-ethnic), the only significant unconditional differences in young people's wellbeing are between those classified as White and those classified as of Mixed ethnicity. No difference emerges when other demographic characteristics are included in model L4. However, these lower levels among those with Mixed ethnicity are explained by differences in social support, while, conversely, including this covariate reveals a significant difference in wellbeing between those classified as White and those classified as Black and Asian in model L6. This latter finding implies that if Black and Asian young people reported the same scores on the social provisions scale as White young people, their wellbeing scores would be higher. This difference is only present at Wave 2 for those with an Asian ethnicity, and is not present for any group when we are looking at Wave 2 wellbeing having adjusting for wellbeing at Wave 1.

The differences that emerged for Black and Asian young people in model L6 appear slightly attenuated by differences in adverse life events (`{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = ethnic, level = "Black", column = "estimate_8")))` for Black young people and `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = ethnic, level = "Asian", column = "estimate_8")))` for Asian young people), but not by much and the estimates in L6 and L8 are not statistically significant from one another.

:::{#fig-results-lifesat-ses}
```{r}
#| label: results-lifesat-ses
#| fig-subcap:
#|  - "Wave 1"
#|  - "Wave 2"
#|  - "Wave 2 adjusted for Wave 1"
#| layout-nrow: 3

svyestimations <- list("L3" = ls_w1_m3,
                       "L4" = ls_w1_m4,
                       "L6" = ls_w1_m6,
                       "L8" = ls_w1_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("qses_poly"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")

svyestimations <- list("L3" = ls_w2_m3,
                       "L4" = ls_w2_m4,
                       "L6" = ls_w2_m6,
                       "L8" = ls_w2_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("qses_poly"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")

svyestimations <- list("L3" = ls_d_m3,
                       "L4" = ls_d_m4,
                       "L6" = ls_d_m6,
                       "L8" = ls_d_m8
                       )
ggcoef_compare(svyestimations,
               intercept = FALSE,
               include = c("qses_poly"),
               facet_labeller = label_wrap_gen(20)
               ) +
               labs(x = "Differences in wellbeing")
```

**Notes:** Reporting coefficients from underlying regression models reported in @tbl-results-lifesat-w1, @tbl-results-lifesat-w2, and @tbl-results-lifesat-diff.

Differences in wellbeing by SES

:::

There is evidence of a gradient in wellbeing by SES, with a roughly linear pattern across SES quintile groups at both Waves 1 and 2. However, the differences are only significant in the unconditional model (L3) once we reach the top two quintile groups, compared to the bottom. The overall difference between the top and bottom quintile groups is `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = qses_poly, level = "5 (High SES)", column = "estimate_3")))` points at Wave 1 and a bit larger (`{r} abs(as.numeric(inline_text(results_lifesat_w2, variable = qses_poly, level = "5 (High SES)", column = "estimate_3")))` points) at Wave 2.

There is essentially no difference when gender and ethnicity are included in model L4, but some of the SES gradient is attenuated by differences in social support when these are included in model L6. For Wave 1, the difference between the bottom and the second-highest quintile groups becomes statistically insignificant, although this is not the case for differences at Wave 2, given their slightly larger overall magnitude. The conditional difference between the top and bottom quintile groups is `{r} abs(as.numeric(inline_text(results_lifesat_w1, variable = qses_poly, level = "5 (High SES)", column = "estimate_6")))` points at Wave 1 and, again, a bit larger (`{r} abs(as.numeric(inline_text(results_lifesat_w2, variable = qses_poly, level = "5 (High SES)", column = "estimate_6")))` points) at Wave 2.

Ultimately, even these differences between the top and bottom SES quintile groups are attenuated to statistical insignificance when we adjust for experiences of adverse life events in model L8 (although we should note that the differences in coefficients between models L6 and L8 are not themselves statistically significant). This is the case for both Waves 1 and 2, and for Wave 2 after adjusting for Wave 1 wellbeing. It would seem that, between them, we can account for much of the socioeconomic variation in wellbeing with social support and experiences of adverse life events — although it is important to note that this is not the same as saying that socioeconomic inequalities in wellbeing are unimportant, especially as socioeconomic status is likely to affect levels of social support and adverse life events.

We explore the potential for intersectional differences between the demographic characteristics using model L5, but find little evidence of any clear or consistent patterns of this type. Similarly, we allow for moderation of the importance of social support by demographic characteristics in model L7, but find little evidence of this either.

:::{#fig-pred-diff-gender}

```{r}
#| label: results-pred-diff-gender
#| fig-subcap:
#|  - "Wave 1"
#|  - "Wave 2"
#|  - "Wave 2 adjusted for Wave 1"
#| layout-nrow: 3

prediction_data <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_ses_poly() |> standardise_psych() |> standardise_event_index_poly() |> create_qses_groups() |> create_qevent_groups()

plot_predictions(lp_w1_m4,
  by = c("gender", "covid_impact_mh_neg"),
  wts = prediction_data$probs
  ) +
  labs(x = "Gender",
       y = "Difference in wellbeing",
       colour = "COVID Lasting Impact on WB")

plot_predictions(lp_w2_m4,
  by = c("gender", "covid_impact_mh_neg"),
  wts = prediction_data$probs
  ) +
  labs(x = "Gender",
       y = "Difference in wellbeing",
       colour = "COVID Lasting Impact on WB")

plot_predictions(lp_d_m4,
  by = c("gender", "covid_impact_mh_neg"),
  wts = prediction_data$probs
  ) +
  labs(x = "Gender",
       y = "Difference in wellbeing",
       colour = "COVID Lasting Impact on WB")
rm(prediction_data)
```

**Notes:** Predictions derived from underlying regression models reported in @tbl-results-percep-w1, @tbl-results-percep-w2, and @tbl-results-percep-diff.

Predicted wellbeing by perceived ongoing impact of pandemic on wellbeing and gender

:::

### Perceived continuing impact of the pandemic on wellbeing

We also explore whether the difference associated with this perception is moderated by social provisions (@fig-pred-diff-sps), finding little variation in the difference in wellbeing by perceived ongoing impact of the pandemic on wellbeing depending on the level of social provisions.

:::{#fig-pred-diff-sps}

```{r}
#| label: results-pred-diff-sps
#| fig-subcap:
#| - Wave 1
#| - Wave 2
#| - Wave 2 adjusted for Wave 1
#| layout-nrow: 3

prediction_data <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_ses_poly() |> standardise_psych() |> standardise_event_index_poly() |> create_qses_groups() |> create_qevent_groups()

plot_predictions(lp_w1_m4,
  by = c("sps_total", "covid_impact_mh_neg"),
  wts = prediction_data$probs
  ) +
  guides(fill = "none") +
  labs(x = "Social Provisions Scale Total Score",
       y = "Difference in wellbeing",
       colour = "COVID Lasting Impact on WB")

plot_predictions(lp_w2_m4,
  by = c("sps_total", "covid_impact_mh_neg"),
  wts = prediction_data$probs
  ) +
  guides(fill = "none") +
  labs(x = "Social Provisions Scale Total Score",
       y = "Difference in wellbeing",
       colour = "COVID Lasting Impact on WB")

plot_predictions(lp_d_m4,
  by = c("sps_total", "covid_impact_mh_neg"),
  wts = prediction_data$probs
  ) +
  guides(fill = "none") +
  labs(x = "Social Provisions Scale Total Score",
       y = "Difference in wellbeing",
       colour = "COVID Lasting Impact on WB")

rm(prediction_data)
```

**Notes:** Predictions derived from underlying regression models reported in @tbl-results-percep-w1, @tbl-results-percep-w2, and @tbl-results-percep-diff.

Predicted wellbeing by perceived ongoing impact of pandemic on wellbeing and Social Provisions Scale Total Score

:::

## Appendix: Multiple Imputation {#sec-appendix-mi}

```{r}
#| label: appendix-multiple-imputation
#| output: off

merged_for_mi <- merged |>
  _[W1_ZLifeSat >= 0 & W2_ZLifeSat >= 0, ] |>
  _[(W2_ZCoronaImpact2_05>=0 & !is.na(W2_ZCoronaImpact2_05)) &
                  (!is.na(W2_ZImPosNeg_05) & W2_ZImPosNeg_05!=-9), ] |>
  _[!is.na(W1_ZLifeSat) & !is.na(W2_ZLifeSat), ] |>
  _[!is.na(W2_AllFamilyFull_weight_yp) & W2_AllFamilyFull_weight_yp > 0 & !is.na(W2_PSU_all_yp) & !is.na(W2_SchoolStratum_v2_yp), ] |>
  _[parentEdMiss==1, parentEd := NA] |>
    _[parentNSSECMiss==1, parentNSSEC := NA] |>
    _[ownHouseMiss==1, ownHouse := NA] |>
  _[, .(W2_INDserial_yp, W2_AllFamilyFull_weight_yp, W2_PSU_all_yp, W2_SchoolStratum_v2_yp,
        W1_ZLifeSat, W2_ZLifeSat,
        covid_impact_mh_neg,
        event_index_poly,
        gender, ethnic, parentEd, parentNSSEC, ownHouse, W1_IDAC_decile_yp, W1_IMD_decile_yp,
        w1_survey_month, w2_survey_month,
        sps_total
        )] |>
    _[, W1_IDAC_decile_yp := as.numeric(W1_IDAC_decile_yp)] |>
    _[, W1_IMD_decile_yp := as.numeric(W1_IMD_decile_yp)] %>%
    .[, scaledweight := (W2_AllFamilyFull_weight_yp / sum(W2_AllFamilyFull_weight_yp))*nrow(.)]

imp <- mice(merged_for_mi, m=10, maxit=5, method="cart", seed=3423)

merged_mi <- NULL
merged_mi <- lapply(1:imp$m, function(n) complete(imp, action = n, inc = FALSE))

merged_mi <- lapply(1:imp$m, function(i) {

  merged_mi[[i]] <- merged_mi[[i]] |> as.data.frame() |> mutate(qidaci = mapvalues(W1_IDAC_decile_yp, from=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), to=c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5)))
  var_label(merged_mi[[i]]$qidaci) <- "IDACI Quintile Group"
  val_labels(merged_mi[[i]]$qidaci) <- NULL
  val_label(merged_mi[[i]]$qidaci, 1) <- "1 (High Deprivation)"
  val_label(merged_mi[[i]]$qidaci, 2) <- "2"
  val_label(merged_mi[[i]]$qidaci, 3) <- "3"
  val_label(merged_mi[[i]]$qidaci, 4) <- "4"
  val_label(merged_mi[[i]]$qidaci, 5) <- "5 (Low Deprivation)"
  merged_mi[[i]] <- merged_mi[[i]] |> as.data.frame() |> mutate(qidaci := to_factor(qidaci))

  merged_pca <- merged_mi[[i]] |> setDT() |>
  _[, parentEd := as.numeric(parentEd)] |>
  _[, ownHouse := as.numeric(ownHouse)]

  merged_pca_poly <- merged_pca |>
  _[, .(parentEd, ownHouse,
        W1_IDAC_decile_yp, W1_IMD_decile_yp)]

  suppressWarnings(sespcor <- principal(merged_pca_poly,
                  cor = "mixed",
                  weight = merged_pca$scaledweight))
  merged_pca$ses_poly <- predict(sespcor, data = merged_pca_poly)

  suppressWarnings(merged_mi[[i]][, ses_poly := NULL])
  merged_mi[[i]] <- merge(merged_mi[[i]], merged_pca[, .(W2_INDserial_yp, ses_poly)],
                by = 'W2_INDserial_yp', all.x = TRUE, no.dups = FALSE
                )
  rm(merged_pca, merged_pca_poly)

  merged_mi[[i]]$qses_poly <- xtile(merged_mi[[i]]$ses_poly, n = 5, wt = merged_mi[[i]]$scaledweight)
  var_label(merged_mi[[i]]$qses_poly) <- "SES Quintile Group"
  val_labels(merged_mi[[i]]$qses_poly) <- NULL
  val_label(merged_mi[[i]]$qses_poly, 1) <- "Q1 (Low)"
  val_label(merged_mi[[i]]$qses_poly, 2) <- "Q2"
  val_label(merged_mi[[i]]$qses_poly, 3) <- "Q3"
  val_label(merged_mi[[i]]$qses_poly, 4) <- "Q4"
  val_label(merged_mi[[i]]$qses_poly, 5) <- "Q5 (High)"
  merged_mi[[i]]$qses_poly <- to_factor(merged_mi[[i]]$qses_poly)

  merged_mi[[i]]$qevent_index_poly <- xtile(merged_mi[[i]]$event_index_poly, n = 3, wt = merged_mi[[i]]$scaledweight)
  var_label(merged_mi[[i]]$qevent_index_poly) <- "Adverse Event Tercile Groups"
  val_labels(merged_mi[[i]]$qevent_index_poly) <- NULL
  val_label(merged_mi[[i]]$qevent_index_poly, 1) <- "Low"
  val_label(merged_mi[[i]]$qevent_index_poly, 2) <- "Medium"
  val_label(merged_mi[[i]]$qevent_index_poly, 3) <- "High"
  merged_mi[[i]]$qevent_index_poly <- to_factor(merged_mi[[i]]$qevent_index_poly)

  return(merged_mi[[i]])
})

merged_mi_survey <- svydesign(id=~W2_PSU_all_yp, strat=~W2_SchoolStratum_v2_yp, weight=~W2_AllFamilyFull_weight_yp, data=imputationList(merged_mi), nest=TRUE)
```

```{r}
#| label: tbl-appendix-mi-regression-lifesat-w1
#| tbl-cap: Regression of wellbeing at Wave 1 on perceived negative impact of COVID-19 on mental wellbeing
theme_gtsummary_compact()
mi_lifesat_w1 <- with(merged_mi_survey, svyglm(W1_ZLifeSat ~ gender + ethnic + qses_poly + sps_total + event_index_poly + w1_survey_month, family=gaussian())) |>
as.mira()
mi_lifesat_w1 |>
tbl_regression(intercept = TRUE,
              label = list(
                w1_survey_month ~ "Wave 1 Survey Month",
                event_index_poly ~ "Adverse Event Index"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_lifesat_w1))$nimp, "imputations = ", min(summary(mi_lifesat_w1, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-lifesat-w2
#| tbl-cap: Regression of wellbeing at Wave 2 on perceived negative impact of COVID-19 on mental wellbeing
theme_gtsummary_compact()
mi_lifesat_w2 <- with(merged_mi_survey, svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + gender + ethnic + qses_poly + sps_total + event_index_poly + w2_survey_month, family=gaussian())) |>
as.mira()
mi_lifesat_w2 |> tbl_regression(intercept = TRUE,
              label = list(
                w2_survey_month ~ "Wave 2 Survey Month",
                event_index_poly ~ "Adverse Event Index"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_lifesat_w2))$nimp, "imputations = ", min(summary(mi_lifesat_w2, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-lifesat-diff
#| tbl-cap: Regression of wellbeing at Wave 2 (adjusted for wellbeing at Wave 1) on perceived negative impact of COVID-19 on mental wellbeing
theme_gtsummary_compact()
mi_lifesat_d <- with(merged_mi_survey, svyglm(W2_ZLifeSat ~ W1_ZLifeSat + covid_impact_mh_neg + gender + ethnic + qses_poly + sps_total + event_index_poly + w1_survey_month + w2_survey_month, family=gaussian())) |>
as.mira()
mi_lifesat_d |> tbl_regression(intercept = TRUE,
              label = list(
                w1_survey_month ~ "Wave 1 Survey Month",
                w2_survey_month ~ "Wave 2 Survey Month",
                event_index_poly ~ "Adverse Event Index"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_lifesat_d))$nimp, "imputations = ", min(summary(mi_lifesat_d, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-percept-w1
#| tbl-cap: Regression of wellbeing at Wave 1 on perceived negative impact of COVID-19 on mental wellbeing
theme_gtsummary_compact()
mi_percept_w1 <- with(merged_mi_survey, svyglm(W1_ZLifeSat ~ covid_impact_mh_neg + gender + ethnic + parentEd + ownHouse + qidaci + sps_total + w1_survey_month, family=gaussian())) |>
as.mira()
mi_percept_w1 |> tbl_regression(intercept = TRUE,
              label = list(
                parentEd ~ "Parental Education",
                ownHouse ~ "Housing Tenure",
                w1_survey_month ~ "Wave 1 Survey Month"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_percept_w1))$nimp, "imputations = ", min(summary(mi_percept_w1, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-percept-w2
#| tbl-cap: Regression of wellbeing at Wave 2 on perceived negative impact of COVID-19 on mental wellbeing
theme_gtsummary_compact()
mi_percept_w2 <- with(merged_mi_survey, svyglm(W2_ZLifeSat ~ covid_impact_mh_neg + gender + ethnic + parentEd + ownHouse + qidaci + sps_total + w2_survey_month, family=gaussian())) |>
as.mira()
mi_percept_w2 |> tbl_regression(intercept = TRUE,
              label = list(
                parentEd ~ "Parental Education",
                ownHouse ~ "Housing Tenure",
                w2_survey_month ~ "Wave 2 Survey Month"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_percept_w2))$nimp, "imputations = ", min(summary(mi_percept_w2, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-percept-diff
#| tbl-cap: Regression of wellbeing at Wave 2 (adjusted for wellbeing at Wave 1) on perceived negative impact of COVID-19 on mental wellbeing
theme_gtsummary_compact()
mi_percept_d <- with(merged_mi_survey, svyglm(W2_ZLifeSat ~ W1_ZLifeSat + covid_impact_mh_neg + gender + ethnic + parentEd + ownHouse + qidaci + sps_total + w1_survey_month + w2_survey_month, family=gaussian())) |>
as.mira()
mi_percept_d |> tbl_regression(intercept = TRUE,
              label = list(
                parentEd ~ "Parental Education",
                ownHouse ~ "Housing Tenure",
                w1_survey_month ~ "Wave 1 Survey Month",
                w2_survey_month ~ "Wave 2 Survey Month"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_percept_d))$nimp, "imputations = ", min(summary(mi_percept_d, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-events-w1
#| tbl-cap: Regression of wellbeing at Wave 1 on adverse life events during the pandemic
theme_gtsummary_compact()
mi_events_w1 <- with(merged_mi_survey, svyglm(W1_ZLifeSat ~ qevent_index_poly + covid_impact_mh_neg + gender + ethnic + parentEd + ownHouse + qidaci + sps_total + w1_survey_month, family=gaussian())) |>
as.mira()
mi_events_w1 |> tbl_regression(intercept = TRUE,
              label = list(
                parentEd ~ "Parental Education",
                ownHouse ~ "Housing Tenure",
                w1_survey_month ~ "Wave 1 Survey Month"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_events_w1))$nimp, "imputations = ", min(summary(mi_events_w1, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-events-w2
#| tbl-cap: Regression of wellbeing at Wave 2 on adverse life events during the pandemic
theme_gtsummary_compact()
mi_events_w2 <- with(merged_mi_survey, svyglm(W2_ZLifeSat ~ qevent_index_poly + covid_impact_mh_neg + gender + ethnic + parentEd + ownHouse + qidaci + sps_total + w2_survey_month, family=gaussian())) |>
as.mira()
mi_events_w2 |> tbl_regression(intercept = TRUE,
              label = list(
                parentEd ~ "Parental Education",
                ownHouse ~ "Housing Tenure",
                w2_survey_month ~ "Wave 2 Survey Month"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_events_w2))$nimp, "imputations = ", min(summary(mi_events_w2, type = "glance")$df.residual))))
reset_gtsummary_theme()
```

```{r}
#| label: tbl-appendix-mi-regression-events-diff
#| tbl-cap: Regression of wellbeing at Wave 2 (adjusted for wellbeing at Wave 1) on adverse life events during the pandemic
theme_gtsummary_compact()
mi_events_d <- with(merged_mi_survey, svyglm(W2_ZLifeSat ~ W1_ZLifeSat + qevent_index_poly + covid_impact_mh_neg + gender + ethnic + parentEd + ownHouse + qidaci + sps_total + w1_survey_month + w2_survey_month, family=gaussian())) |>
as.mira()
mi_events_d |> tbl_regression(intercept = TRUE,
              label = list(
                parentEd ~ "Parental Education",
                ownHouse ~ "Housing Tenure",
                w1_survey_month ~ "Wave 1 Survey Month",
                w2_survey_month ~ "Wave 2 Survey Month"
              )) |>
           add_significance_stars() |>
           add_glance_table(
            include = c(nobs),
            label = list(nobs ~ "N")
           ) |>
          modify_table_body(~.x |> arrange(variable == "w1_survey_month") |> arrange(variable == "w2_survey_month") |> arrange(row_type == "glance_statistic")) |>
          as_gt() |> tab_source_note(md(paste("**Notes:** All estimates are weighted and inference accounts for the complex survey design. Minimum residual degrees of freedom in any of the", glance(pool(mi_events_d))$nimp, "imputations = ", min(summary(mi_events_d, type = "glance")$df.residual))))
reset_gtsummary_theme()

```

:::
