```{r}
#| label: data-ewcdf-function
stat_ewcdf <- function(mapping = NULL, data = NULL,
                      geom = "step", position = "identity",
                      weight =  NULL, 
                      ...,
                      n = NULL,
                      pad = TRUE,
                      na.rm = FALSE,
                      show.legend = NA,
                      inherit.aes = TRUE) {
  layer(
    data = data,
    mapping = mapping,
    stat = StatEwcdf,
    geom = geom,
    position = position,
    show.legend = show.legend,
    inherit.aes = inherit.aes,
    params = list(
      n = n,
      pad = pad,
      na.rm = na.rm,
      weight = weight,
      ...
    )
  )
}

StatEwcdf <- ggproto("StatEwcdf", Stat,
                    compute_group = function(data, scales, weight, n = NULL, pad = TRUE) {
                      # If n is NULL, use raw values; otherwise interpolate
                      if (is.null(n)) {
                        x <- unique(data$x)
                      } else {
                        x <- seq(min(data$x), max(data$x), length.out = n)
                      }
                      
                      if (pad) {
                        x <- c(-Inf, x, Inf)
                      }
                      y <- ewcdf(data$x, weights=data$weight/sum(data$weight))(x)
                      
                      data.frame(x = x, y = y)
                    },
                    
                    default_aes = aes(y = stat(y)),
                    
                    required_aes = c("x")
)
```

```{r}
#| label: fig-distribution-lifesat
#| fig-cap: Distribution of life satisfaction in Wave 1 and 2
#| fig-subcap:
#|  - "Histogram"
#|  - "Kernel-smoothed distribution plot"
#|  - "Cumulative distribution function"
#| layout-ncol: 3

ZLifeSat_cov <- cbind(
    merged[
        W1_ZLifeSat>0 & W2_ZLifeSat>0 &
        W2_AllFamilyFull_weight_yp>=0, W1_ZLifeSat],
    merged[
        W1_ZLifeSat>0 & W2_ZLifeSat>0 &
        W2_AllFamilyFull_weight_yp>=0, W2_ZLifeSat]
        ) |>
  cov.wt(x=_,
        wt = merged[
            W1_ZLifeSat>0 & W2_ZLifeSat>0 &
            W2_AllFamilyFull_weight_yp>=0, W2_AllFamilyFull_weight_yp],
            cor = TRUE)

svyplotdata <- merged |>
restrict_sample() |>
create_survey_design()
w1_lifesat_mean <- round(svymean(~as.numeric(W1_ZLifeSat), svyplotdata), digits = 2)
w1_lifesat_sd <- round(sqrt(svyvar(~as.numeric(W1_ZLifeSat), svyplotdata)), digits = 2)
w2_lifesat_mean <- round(svymean(~as.numeric(W2_ZLifeSat), svyplotdata), digits = 2)
w2_lifesat_sd <- round(sqrt(svyvar(~as.numeric(W2_ZLifeSat), svyplotdata)), digits = 2)
rm(svyplotdata)

merged |>
  restrict_sample() |>
  setnames("W1_ZLifeSat", "Wave 1") |>
  setnames("W2_ZLifeSat", "Wave 2") |>
  melt(data = _, measure = patterns("Wave")) |>
  create_survey_design() |>
ggsurvey() +
  geom_histogram(aes(value, fill=variable),
    binwidth = 1, alpha=0.3, position = "identity") +
  labs(x = "Life Satisfaction (0-10)", y = "Count", fill = "Wave") +
  annotate(geom = "text",
    x = 2.5, y = 1500,
    label=paste0("Wave 1 Mean = ", w1_lifesat_mean, "; SD = ", w1_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 1250,
    label=paste0("Wave 2 Mean = ", w2_lifesat_mean, "; SD = ", w2_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 1000,
    label=paste0("Correlation = ", round(ZLifeSat_cov$cor[1,2], digits=2))
  )

merged |>
  restrict_sample() |>
  setnames("W1_ZLifeSat", "Wave 1") |>
  setnames("W2_ZLifeSat", "Wave 2") |>
  melt(data = _, measure = patterns("Wave")) |>
  create_survey_design() |>
ggsurvey() +
  geom_density(aes(value, colour=variable),
    bw = 0.6, position = "identity") +
  labs(x = "Life Satisfaction (0-10)", y = "Count", colour = "Wave") +
  annotate(geom = "text",
    x = 2.5, y = 0.2,
    label=paste0("Wave 1 Mean = ", w1_lifesat_mean, "; SD = ", w1_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 0.175,
    label=paste0("Wave 2 Mean = ", w2_lifesat_mean, "; SD = ", w2_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 0.15,
    label=paste0("Correlation = ", round(ZLifeSat_cov$cor[1,2], digits=2))
  )

merged |>
  restrict_sample() |>
  setnames("W1_ZLifeSat", "Wave 1") |>
  setnames("W2_ZLifeSat", "Wave 2") |>
  melt(data = _, measure = patterns("Wave")) |>
  create_survey_design() |>
ggsurvey() +
  stat_ecdf(aes(value, colour=variable)) +
  labs(x = "Life Satisfaction (0-10)", y = "Cumulative Distribution", colour = "Wave") +
  annotate(geom = "text",
    x = 2.5, y = 0.75,
    label=paste0("Wave 1 Mean = ", w1_lifesat_mean, "; SD = ", w1_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 0.625,
    label=paste0("Wave 2 Mean = ", w2_lifesat_mean, "; SD = ", w2_lifesat_sd)) +
  annotate(geom="text",
    x = 2.5, y = 0.50,
    label=paste0("Correlation = ", round(ZLifeSat_cov$cor[1,2], digits=2))
  )
```


```{r}
#| label: data-ses-pca
#| output: false

merged_pca <- merged %>%
  restrict_sample() %>%
  .[, parentEd := as.numeric(parentEd)] %>%
  .[, ownHouse := as.numeric(ownHouse)]
merged_pca_survey <- merged_pca %>%
                        create_survey_design

sespca <- svyprcomp(
  ~ parentEd + ownHouse +
  W1_IDAC_decile_mp + W1_IMD_decile_mp,
  design = merged_pca_survey, scale = TRUE, scores = TRUE)
merged_pca$ses <- as.numeric(predict(sespca)[, 1])

suppressWarnings(merged[, ses := NULL])
merged <- merge(merged, merged_pca[, .(W2_INDserial_yp, ses)],
                by = 'W2_INDserial_yp', all.x = TRUE, no.dups = FALSE
                )
rm(merged_pca, merged_pca_survey)
```


```{r}
#| label: data-ses-ses-poly-corr
#| output: false

testpca <- merged[!is.na(ses) & !is.na(ses_poly) & !is.na(W2_AllFamilyFull_weight_yp), .(ses, ses_poly, W2_AllFamilyFull_weight_yp)]
ses_ses_poly_corr <- weightedCorr(testpca$ses, testpca$ses_poly, weights = testpca$W2_AllFamilyFull_weight_yp, method = "pearson")
rm(testpca)
```


```{r}
#| label: data-standardise-ses

standardise_ses <- function(survey_data) {
  survey_data$variables$ses <- survey_data$variables$ses /
                               sqrt(svyvar(~ses, survey_data))
  survey_data$variables$ses <- survey_data$variables$ses -
                               svymean(~ses, survey_data)
  return(survey_data)
}
```


```{r}
#| label: data-create-qses-groups

create_qses_groups <- function(data) {
  newdata <- data

  newdata$variables$qses <- xtile(data$variables$ses, n = 5, wt = data$variables$scaledweight)

  var_label(newdata$variables$qses) <- "SES Quintile Groups"
  val_labels(newdata$variables$qses) <- NULL
  val_label(newdata$variables$qses, 1) <- "1 (Low SES)"
  val_label(newdata$variables$qses, 2) <- "2"
  val_label(newdata$variables$qses, 3) <- "3"
  val_label(newdata$variables$qses, 4) <- "4"
  val_label(newdata$variables$qses, 5) <- "5 (High SES)"
  newdata$variables$qses <- to_factor(newdata$variables$qses)
}
```

```{r}
#| label: fig-ses
#| fig-cap: Distribution of SES summary measure (SES measure based on principal component analysis of parental education, housing tenure and IDACI decile group)
#| fig-subcap:
#|  - "Overall"
#|  - "Split by quintile group"
#| layout-ncol: 2

mean <- round(svymean(~ses, merged %>% restrict_sample %>% create_survey_design %>% standardise_vars, na.rm=TRUE), digits = 2)
sd <- round(sqrt(svyvar(~ses, merged %>% restrict_sample %>% create_survey_design %>% standardise_vars, na.rm=TRUE)), digits = 2)

merged %>% restrict_sample() %>% create_survey_design() %>%
  standardise_vars() %>%
  ggsurvey() +
    geom_density(aes(ses)) +
    labs(x = "SES Z-score", y = "Proportion") +
    annotate(geom = "text", x = -3, y = 0.25,
    label = paste0("Mean = ", mean, "; SD= ", sd))

quantilesdf <- merged %>% restrict_sample %>% create_survey_design %>% standardise_vars
quantiles <- pctile(quantilesdf$variables$ses, probs = c(0.2, 0.4, 0.6, 0.8), wt = quantilesdf$variables$scaledweight, na.rm=TRUE)
rm(quantilesdf)

merged %>% restrict_sample() %>% create_survey_design() %>%
  standardise_vars() %>%
ggsurvey(aes(ses)) +
  geom_density() +
  geom_area(
    aes(x = stage(ses, after_stat = oob_censor(x, c(NA, quantiles[1]))), fill="Q1 (Low SES)"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses, after_stat = oob_censor(x, c(quantiles[1], quantiles[2]))), fill="Q2"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses, after_stat = oob_censor(x, c(quantiles[2], quantiles[3]))), fill="Q3"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses, after_stat = oob_censor(x, c(quantiles[3], quantiles[4]))), fill="Q4"),
    stat = "density"
  ) +
  geom_area(
    aes(x = stage(ses, after_stat = oob_censor(x, c(quantiles[4], NA))), fill="Q5 (High SES)"),
    stat = "density"
  ) +
  labs(x="SES Z-score", y="Proportion") +
  annotate(geom = "text", x = -3, y = 0.25,
    label=paste0("Mean = ", mean, "; SD= ", sd))

```

```{r}
#| label: tbl-data-descriptives-qses
#| tbl-cap: Distribution of underlying socioeconomic characteristics by SES quintile group (SES quintile group based on principal component analysis of parental education, housing tenure and IDACI decile group)

merged %>% restrict_sample() %>% create_survey_design() %>%
  standardise_vars() %>% create_qses_groups() %>%
            tbl_svysummary(
              by = qses,
              statistic = list(all_categorical() ~ "{p}", all_continuous() ~ "{mean}"),
            percent = "col",
            include = c('parentEd', 'ownHouse', 'parentNSSEC'),
            missing = "no"
            )
```

```{r}
#| label: tbl-data-ses-poly-crosstab
#| tbl-cap: Cross-tabulation of SES quintile group measures (classical vs polychoric)

crosstabdata <- merged %>% restrict_sample() %>% create_survey_design() %>%
  standardise_vars() %>% create_qses_groups()
tibble(crosstabdata$variables) %>%
  tbl_cross(row = qses,
            col = qses_poly,
            percent = "row") %>%
  bold_labels()
rm(crosstabdata)
```

```{r}
#| label: tbl-demographics-prevalence
#| tbl-cap: Prevalence of demographic characteristics in cohort

tbl-demographics-prevalence <- merged |> restrict_sample() |> create_survey_design() |>
  standardise_ses_poly() |> create_qses_groups() |> 
  standardise_psych() |>
tbl_svysummary(type = list(sps_total ~ "continuous"), statistic = list(all_categorical() ~ "{p}", all_continuous() ~ "{mean}"), percent = "cell", include = c('gender', 'ethnic', 'parentNSSEC', 'parentEd', 'ownHouse', 'qidaci', 'qses_poly', 'sps_total'), label = list(gender ~ "Gender", ethnic ~ "Ethnicity", 'parentNSSEC' ~ "Parental NS-SEC", 'parentEd' ~ "Parental Education", 'ownHouse' ~ "Housing Tenure", 'qidaci' ~ "IDACI Quintile Group", 'qses_poly' ~ "SES Quintile Group", 'sps_total' ~ "Social Provisions Scale"), missing="no") |>
  modify_header(stat_0 ~ "**N = {N_unweighted}**")
tbl-demographics-prevalence
```

```{r}
#| label: data-lifeevents-pca

merged_pca <- merged %>%
  restrict_sample() %>%
  .[, event_parentlostjob := as.numeric(event_parentlostjob)] %>%
  .[, event_nofood := as.numeric(event_nofood)] %>%
  .[, event_nobills := as.numeric(event_nobills)] %>%
  .[, event_seriousill := as.numeric(event_seriousill)] %>%
  .[, event_familyseriousill := as.numeric(event_familyseriousill)] %>%
  .[, event_familydied := as.numeric(event_familydied)] %>%
  .[, event_arguewithparents := as.numeric(event_arguewithparents)] %>%
  .[, event_arguebetweenparents := as.numeric(event_arguebetweenparents)] %>%
  .[, event_movehouse := as.numeric(event_movehouse)] %>%
  .[, event_parentsseparated := as.numeric(event_parentsseparated)]
merged_pca_survey <- merged_pca %>%
                        create_survey_design

event_pca <- svyprcomp(
  ~ event_parentlostjob + event_nofood + event_nobills + event_seriousill + event_familyseriousill + event_familydied + event_arguewithparents + event_arguebetweenparents + event_movehouse + event_parentsseparated,
  design = merged_pca_survey, scale = TRUE, scores = TRUE)
merged_pca$event_index <- as.numeric(-predict(event_pca)[, 1])

suppressWarnings(merged[, event_index := NULL])
merged <- merge(merged, merged_pca[, .(W2_INDserial_yp, event_index)],
                by = 'W2_INDserial_yp', all.x = TRUE, no.dups = FALSE
                )
rm(merged_pca, merged_pca_survey)

```

```{r}
#| label: tbl-events
#| tbl-cap: Proportion of young people experiencing Life Events since onset of pandemic

tbl_events <- merged |> restrict_sample() |> create_survey_design() |>
            tbl_svysummary(
              statistic = list(all_categorical() ~ "{p}", all_continuous() ~ "{mean}"),
            percent = "cell",
            include = c('event_parentlostjob', 'event_nofood', 'event_nobills', 'event_seriousill', 'event_familyseriousill', 'event_familydied', 'event_arguewithparents', 'event_arguebetweenparents', 'event_movehouse', 'event_parentsseparated',
            'event_count_group',
            'event_count'),
            label = list('event_count_group' ~ "Number of events (grouped)", 'event_count' ~ "Number of events (mean)"),
            missing = "no") |>
modify_header(label = "**Variable**", stat_0 ~ "**%**") |>
modify_footnote(update = stat_0 ~ "N = {N_unweighted}")
tbl_events |>
  as_gt() |> tab_source_note("Note: All estimates are weighted and account for the complex survey design.")
```

```{r}
#| label: data-events-events-poly-corr
#| output: false

testpca <- merged[!is.na(event_index) & !is.na(event_index_poly) & !is.na(W2_AllFamilyFull_weight_yp), .(event_index, event_index_poly, W2_AllFamilyFull_weight_yp)]
event_event_poly_corr <- weightedCorr(testpca$event_index, testpca$event_index_poly, weights = testpca$W2_AllFamilyFull_weight_yp, method = "pearson")
rm(testpca)

```

```{r}
#| label: fig-events
#| fig-cap: Number of Life Events since onset of pandemic
#| fig-subcap:
#|  - "Overall"
#|  - "Categorised"
#| layout-ncol: 2

mean <- round(svymean(~event_count, merged %>% restrict_sample %>% create_survey_design, na.rm=TRUE), digits = 2)
sd <- round(sqrt(svyvar(~event_count, merged %>% restrict_sample %>% create_survey_design, na.rm=TRUE)), digits = 2)

merged %>% restrict_sample() %>% create_survey_design() %>%
ggsurvey() +
  geom_histogram(aes(event_count), binwidth=1) +
  labs(x = "Number of events", y = "Count") +
  annotate(geom = "text", x = 5, y = 2000, label = paste0("Mean = ", mean, "; SD= ", sd))

merged %>% restrict_sample() %>% create_survey_design() %>%
ggsurvey() +
  geom_histogram(aes(event_count, fill = event_count_group), binwidth = 1) +
  labs(x = "Number of events", y = "Count", fill = "Number of events") +
  annotate(geom="text", x = 5, y = 2000, label = paste0("Mean = ", mean, "; SD= ", sd))

```


```{r}
#| label: data-peersupp

suppressWarnings(val_labels(merged$peersupp_1) <- NULL)
suppressWarnings(merged[, peersupp_1 := NULL])
merged[W1_ZPEERSUPP_01>=0 & !is.na(W1_ZPEERSUPP_01), peersupp_1 := W1_ZPEERSUPP_01]
merged[, peersupp_1 := mapvalues(peersupp_1, from=c(1, 2, 3, 4), to=c(0, 1, 2, 3))]
var_label(merged$peersupp_1) <- "My friends listen to what I have to say"
val_labels(merged$peersupp_1) <- NULL
val_label(merged$peersupp_1, 0) <- "Never true"
val_label(merged$peersupp_1, 1) <- "Sometimes true"
val_label(merged$peersupp_1, 2) <- "Often true"
val_label(merged$peersupp_1, 3) <- "Always true"

suppressWarnings(val_labels(merged$peersupp_2) <- NULL)
suppressWarnings(merged[, peersupp_2 := NULL])
merged[W1_ZPEERSUPP_02>=0 & !is.na(W1_ZPEERSUPP_02), peersupp_2 := W1_ZPEERSUPP_02]
merged[, peersupp_2 := mapvalues(peersupp_2, from=c(1, 2, 3, 4), to=c(0, 1, 2, 3))]
var_label(merged$peersupp_2) <- "I can count on my friends to help me when I have a problem"
val_labels(merged$peersupp_2) <- NULL
val_label(merged$peersupp_2, 0) <- "Never true"
val_label(merged$peersupp_2, 1) <- "Sometimes true"
val_label(merged$peersupp_2, 2) <- "Often true"
val_label(merged$peersupp_2, 3) <- "Always true"

suppressWarnings(val_labels(merged$peersupp_3) <- NULL)
suppressWarnings(merged[, peersupp_3 := NULL])
merged[W1_ZPEERSUPP_03>=0 & !is.na(W1_ZPEERSUPP_03), peersupp_3 := W1_ZPEERSUPP_03]
merged[, peersupp_3 := mapvalues(peersupp_3, from=c(1, 2, 3, 4), to=c(0, 1, 2, 3))]
var_label(merged$peersupp_3) <- "I share my thoughts and feelings with my friends"
val_labels(merged$peersupp_3) <- NULL
val_label(merged$peersupp_3, 0) <- "Never true"
val_label(merged$peersupp_3, 1) <- "Sometimes true"
val_label(merged$peersupp_3, 2) <- "Often true"
val_label(merged$peersupp_3, 3) <- "Always true"

suppressWarnings(merged[, c('peersupp_total') := NULL])
merged[, peersupp_total := rowSums(.SD), .SDcols = patterns('peersupp_*')]
var_label(merged$peersupp_total) <- "Peer Support Scale"

merged[, peersupp_1 := to_factor(peersupp_1)]
merged[, peersupp_2 := to_factor(peersupp_2)]
merged[, peersupp_3 := to_factor(peersupp_3)]

```

```{r}
#| label: data-standardise-psych

standardise_psych <- function(survey_data) {

  survey_data$variables$sps_total <- survey_data$variables$sps_total /
                               sqrt(svyvar(~sps_total, survey_data, na.rm = TRUE))
  survey_data$variables$sps_total <- survey_data$variables$sps_total -
                               svymean(~sps_total, survey_data, na.rm = TRUE)

  survey_data$variables$peersupp_total <- survey_data$variables$peersupp_total /
                               sqrt(svyvar(~peersupp_total, survey_data, na.rm = TRUE))
  survey_data$variables$peersupp_total <- survey_data$variables$peersupp_total -
                               svymean(~peersupp_total, survey_data, na.rm = TRUE)

  return(survey_data)
}
```

```{r}
#| label: fig-psych-dist
#| fig-cap: Distribution of social provisions scale

mean <- round(svymean(~peersupp_total, merged |> restrict_sample() |> create_survey_design() |> standardise_psych(), na.rm=TRUE), digits = 2)
sd <- round(sqrt(svyvar(~peersupp_total, merged |> restrict_sample() |> create_survey_design() |> standardise_psych(), na.rm=TRUE)), digits = 2)

merged |> restrict_sample() |> create_survey_design() |>
  standardise_psych() |>
  ggsurvey() +
    geom_histogram(aes(peersupp_total)) +
    labs(x = "Peer Support Scale", y = "Count") +
    annotate(geom = "text", x = -2, y = 600,
    label = paste0("Mean = ", mean, "; SD= ", sd))
```

```{r}
#| label: fig-pred-events-diff-gender
#| fig-cap: Predicted life satisfaction at Wave 2 (conditional on life satisfaction at Wave 1) by number of life events experienced during pandemic and gender

prediction_data <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_ses_poly() |> standardise_psych() |> standardise_event_index_poly() |> create_qses_groups() |> create_qevent_groups()
plot_predictions(le_d_m5,
  by = c("gender", "qevent_index_poly"),
  wts = prediction_data$probs
  ) +
  labs(x = "Gender",
       y = "Difference in Life Satisfaction",
       colour = "Adverse Life Events group")
rm(prediction_data)
```

```{r}
#| label: fig-pred-events-diff-sps
#| fig-cap: Predicted life satisfaction Wave 2 (conditional on life satisfaction at Wave 1) by number of life events experienced during pandemic and Social Provisions Scale Total Score

prediction_data <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_ses_poly() |> standardise_psych() |> standardise_event_index_poly() |> create_qses_groups() |> create_qevent_groups()
plot_predictions(le_d_m5,
  by = c("sps_total", "qevent_index_poly"),
  wts = prediction_data$probs
  ) +
  guides(fill = "none") +
  labs(x = "Social Provisions Scale Total Score",
       y = "Difference in Life Satisfaction",
       colour = "Adverse Life Events group")
rm(prediction_data)
```

## Appendix 2: Other descriptives {#sec-descriptives}

```{r}
#| label: tbl-data-qidaci-descriptives
#| tbl-cap: Distribution of underlying socioeconomic characteristics by IDACI quintile group

merged |> restrict_sample() |> create_survey_design() |>
            tbl_svysummary(
              by = qidaci,
              statistic = list(all_categorical() ~ "{p}", all_continuous() ~ "{mean}"),
            percent = "col",
            include = c('parentEd', 'ownHouse', 'parentNSSEC'),
            missing = "no"
            )
```

### Appendix 3: Instrumental variables analysis {#sec-iv}

```{r}
#| label: fig-appendix-iv-first
#| fig-cap: Histogram of predicted perceived negative impact of COVID-19 on mental health, instrumented by adverse life events during the pandemic
regressiondata <- merged |> restrict_sample() |> create_survey_design() |>
                         standardise_psych()

first1 <- svyglm(covid_impact_mh_neg ~ 
                  event_parentlostjob + event_nofood + event_nobills + event_seriousill + event_familydied + event_arguewithparents + event_arguebetweenparents + event_movehouse + event_parentsseparated +
                  gender + ethnic + parentEd + ownHouse + qidaci + 
                  peersupp_total + sps_total,
                  regressiondata, family = quasibinomial(link = "probit"))
regressiondata$variables$covid_impact_mh_neg_hat <- predict(first1)

ggsurvey(regressiondata, aes(x = covid_impact_mh_neg_hat)) +
  geom_histogram(binwidth = 0.05) +
  labs(x = "Predicted Perceived Negative Impact of Pandemic on Mental Health", y = "Count")
```

```{r}
#| label: appendix-iv-regression

ivreg1 <- svyivreg(W1_ZLifeSat ~ 
                  covid_impact_mh_neg +
                  gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month +
                  peersupp_total + sps_total | . -covid_impact_mh_neg + 
                  covid_impact_mh_neg_hat, 
                  regressiondata)
unadj1 <- svyglm(W1_ZLifeSat ~ 
                  covid_impact_mh_neg +
                  gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + 
                  peersupp_total + sps_total, 
                  regressiondata, family = gaussian())

first2 <- svyglm(covid_impact_mh_neg ~ 
                  event_parentlostjob + event_nofood + event_nobills + event_seriousill + event_familydied + event_arguewithparents + event_arguebetweenparents + event_movehouse + event_parentsseparated +
                  gender + parentEd + ownHouse + qidaci +  w1_survey_month + w2_survey_month + 
                  peersupp_total + sps_total,
                  regressiondata, family = quasibinomial(link = "probit"))
regressiondata$variables$covid_impact_mh_neg_hat <- predict(first2)

ivreg2 <- svyivreg(W2_ZLifeSat ~ 
                  covid_impact_mh_neg +
                  gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month +
                  peersupp_total + sps_total | . -covid_impact_mh_neg + 
                  covid_impact_mh_neg_hat, 
                  regressiondata)
unadj2 <- svyglm(W2_ZLifeSat ~ 
                  covid_impact_mh_neg +
                  gender + ethnic + parentEd + ownHouse + qidaci + w2_survey_month + 
                  peersupp_total + sps_total, 
                  regressiondata, family = gaussian())

firstd <- svyglm(covid_impact_mh_neg ~ 
                  event_parentlostjob + event_nofood + event_nobills + event_seriousill + event_familydied + event_arguewithparents + event_arguebetweenparents + event_movehouse + event_parentsseparated +
                  gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month + 
                  peersupp_total + sps_total + W1_ZLifeSat,
                  regressiondata, family = quasibinomial(link = "probit"))
regressiondata$variables$covid_impact_mh_neg_hat <- predict(firstd)

ivregd <- svyivreg(W2_ZLifeSat ~ 
                  covid_impact_mh_neg +
                  gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month +
                  peersupp_total + sps_total +
                  W1_ZLifeSat | . -covid_impact_mh_neg + 
                  covid_impact_mh_neg_hat, 
                  regressiondata)
unadjd <- svyglm(W2_ZLifeSat ~ 
                  covid_impact_mh_neg +
                  gender + ethnic + parentEd + ownHouse + qidaci + w1_survey_month + w2_survey_month + 
                  peersupp_total + sps_total +
                  W1_ZLifeSat, 
                  regressiondata, family = gaussian())
```

```{r}
#| label: tbl-appendix-iv-results-wave1
#| tbl-cap: Difference in life satisfaction predicted by perceived negative impact of COVID-19 on mental health, instrumented by adverse life events during pandemic - Wave 1
cm <- c('covid_impact_mh_negYes'    = "Perceived negative impact of COVID-19 on mental health",
        'event_parentlostjobYes'    = "Parent lost job",
        'event_nofoodYes'    = "Couldn't afford food",
        'event_nobillsYes'    = "Couldn't afford bills",
        'event_seriousillYes'    = "Seriously ill",
        'event_familydiedYes'    = "Someone in family died",
        'event_arguewithparentsYes'    = "Argued more with parents",
        'event_arguebetweenparentsYes'    = "More arguments between parents",
        'event_movehouseYes'    = "Moved house",
        'event_parentsseparatedYes'    = "Parents separated",
        'genderFemale'    = 'Female (cf. Male)',
        'genderNon-Binary+'    = 'Non-Binary+ (cf. Male)',
        'ethnicMixed' = "Ethnicity: Mixed (cf. White)",
        'ethnicAsian' = "Ethnicity: Asian (cf. White)",
        'ethnicBlack' = "Ethnicity: Black (cf. White)",
        'ethnicOther' = "Ethnicity: Other (cf. White)",
        'parentEdBelow Graduate'    = 'Parental Education: Below Graduate (cf. Graduate)',
        'parentEdNo Quals'    = 'Parental Education No Quals (cf. Graduate)',
        'parentEdUnknown'    = 'Parental Education Unknown (cf. Graduate)',
        'ownHouseOther'    = 'Housing Tenure: Other (cf. Own House)',
        'qidaci2'    = 'IDACI Quintile Group 2 (cf. Group 1 High Deprivation)',
        'qidaci3'    = 'IDACI Quintile Group 3 (cf. Group 1 High Deprivation)',
        'qidaci4'    = 'IDACI Quintile Group 4 (cf. Group 1 High Deprivation)',
        'qidaci5 (Low Deprivation)'    = 'IDACI Quintile Group 5 (Low Deprivation) (cf. Group 1 High Deprivation)',
        'peersupp_total'    = 'Peer Support Scale',
        'sps_total'    = 'Social Provisions Scale',
        'W1_ZLifeSat'    = 'Wave 1 Life Satisfaction',
        '(Intercept)' = 'Constant')

gm <- list(
  list("raw" = "nobs", "clean" = "N", "fmt" = 0),
  list("raw" = "resid_dof", "clean" = "Residual DoF", "fmt" = 0)
  )

gof_resid_dof <- function(model) data.frame("resid_dof" = summary(model)$df[2])

iv_w1 <- modelsummary(list("First" = first1, "Unadjusted" = unadj1, "IV" = ivreg1), output = "gt", stars = TRUE, statistic = "({conf.low}, {conf.high})", coef_map = cm, gof_map = gm, gof_function = gof_resid_dof)

iv_w1 <- iv_w1 |>
              tab_source_note(md("Notes: TBA")) |>
              opt_vertical_padding(scale = 0.5) |>
              opt_horizontal_padding(scale = 0.5) |>
              tab_options(table.font.size = 14)
iv_w1
```

```{r}
#| label: tbl-appendix-iv-results-wave2
#| tbl-cap: Difference in life satisfaction predicted by perceived negative impact of COVID-19 on mental health, instrumented by adverse life events during pandemic - Wave 2
iv_w2 <- modelsummary(list("First" = first2, "Unadjusted" = unadj2, "IV" = ivreg2), output = "gt", stars = TRUE, statistic = "({conf.low}, {conf.high})", coef_map = cm, gof_map = gm, gof_function = gof_resid_dof)

iv_w2 <- iv_w2 |>
              tab_source_note(md("Notes: TBA")) |>
              opt_vertical_padding(scale = 0.5) |>
              opt_horizontal_padding(scale = 0.5) |>
              tab_options(table.font.size = 14)
iv_w2
```

```{r}
#| label: tbl-appendix-iv-results-difference
#| tbl-cap: Difference in life satisfaction predicted by perceived negative impact of COVID-19 on mental health, instrumented by adverse life events during pandemic - Difference
iv_d <- modelsummary(list("First" = firstd, "Unadjusted" = unadjd, "IV" = ivregd), output = "gt", stars = TRUE, statistic = "({conf.low}, {conf.high})", coef_map = cm, gof_map = gm, gof_function = gof_resid_dof)

iv_d <- iv_d |>
              tab_source_note(md("Notes: TBA")) |>
              opt_vertical_padding(scale = 0.5) |>
              opt_horizontal_padding(scale = 0.5) |>
              tab_options(table.font.size = 14)
iv_d

rm(regressiondata)
```
